{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat/chat.component.css","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/definition/definition.component.css","webpack:///./src/app/definition/definition.component.html","webpack:///./src/app/definition/definition.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/roles/role-details/role-details.component.css","webpack:///./src/app/roles/role-details/role-details.component.html","webpack:///./src/app/roles/role-details/role-details.component.ts","webpack:///./src/app/roles/role.model.ts","webpack:///./src/app/roles/roles.component.css","webpack:///./src/app/roles/roles.component.html","webpack:///./src/app/roles/roles.component.ts","webpack:///./src/app/shared/auth-cookies-handler.ts","webpack:///./src/app/shared/auth.interceptor.ts","webpack:///./src/app/shared/chat-message.model.ts","webpack:///./src/app/shared/clear-array-pipe.ts","webpack:///./src/app/shared/data-storage.service.ts","webpack:///./src/app/shared/filter/extended-filter.pipe.ts","webpack:///./src/app/shared/filter/filter.service.ts","webpack:///./src/app/shared/modules/material/app-material.module.ts","webpack:///./src/app/shared/modules/routing/app-routing-module.ts","webpack:///./src/app/shared/oauth.service.ts","webpack:///./src/app/shared/reverse.pipe.ts","webpack:///./src/app/shared/server.model.ts","webpack:///./src/app/shared/socket/task-info.service.ts","webpack:///./src/app/shared/socket/web-socket.service.ts","webpack:///./src/app/shared/sort/sort-by.pipe.ts","webpack:///./src/app/shared/statistics/statistics.service.ts","webpack:///./src/app/shared/store-reset.service.ts","webpack:///./src/app/shared/store/chat/chat.actions.ts","webpack:///./src/app/shared/store/chat/chat.reducers.ts","webpack:///./src/app/shared/store/statistics/statistics.actions.ts","webpack:///./src/app/shared/store/statistics/statistics.reducers.ts","webpack:///./src/app/shared/store/table/tables.actions.ts","webpack:///./src/app/shared/store/table/tables.reducers.ts","webpack:///./src/app/shared/store/task/tasks.actions.ts","webpack:///./src/app/shared/store/task/tasks.reducers.ts","webpack:///./src/app/shared/store/user/users.actions.ts","webpack:///./src/app/shared/store/user/users.reducers.ts","webpack:///./src/app/shared/table.model.ts","webpack:///./src/app/signin/signin.component.css","webpack:///./src/app/signin/signin.component.html","webpack:///./src/app/signin/signin.component.ts","webpack:///./src/app/spinner/spinner.component.css","webpack:///./src/app/spinner/spinner.component.html","webpack:///./src/app/spinner/spinner.component.ts","webpack:///./src/app/statistics/statistics.component.css","webpack:///./src/app/statistics/statistics.component.html","webpack:///./src/app/statistics/statistics.component.ts","webpack:///./src/app/statistics/table-stats/table-statistics.component.css","webpack:///./src/app/statistics/table-stats/table-statistics.component.html","webpack:///./src/app/statistics/table-stats/table-statistics.component.ts","webpack:///./src/app/tables/key.pipe.ts","webpack:///./src/app/tables/menu/menu.component.css","webpack:///./src/app/tables/menu/menu.component.html","webpack:///./src/app/tables/menu/menu.component.ts","webpack:///./src/app/tables/row-details/row-details.component.css","webpack:///./src/app/tables/row-details/row-details.component.html","webpack:///./src/app/tables/row-details/row-details.component.ts","webpack:///./src/app/tables/row/question-control.service.ts","webpack:///./src/app/tables/row/row.component.css","webpack:///./src/app/tables/row/row.component.html","webpack:///./src/app/tables/row/row.component.ts","webpack:///./src/app/tables/row/value-types/question-base.model.ts","webpack:///./src/app/tables/table-header/table-header.component.css","webpack:///./src/app/tables/table-header/table-header.component.html","webpack:///./src/app/tables/table-header/table-header.component.ts","webpack:///./src/app/tables/tables.component.css","webpack:///./src/app/tables/tables.component.html","webpack:///./src/app/tables/tables.component.ts","webpack:///./src/app/tables/task/task.component.css","webpack:///./src/app/tables/task/task.component.html","webpack:///./src/app/tables/task/task.component.ts","webpack:///./src/app/training/dialog/dialog.component.css","webpack:///./src/app/training/dialog/dialog.component.html","webpack:///./src/app/training/dialog/dialog.component.ts","webpack:///./src/app/training/snack-bar/snack-bar.component.ts","webpack:///./src/app/training/table/table.component.css","webpack:///./src/app/training/table/table.component.html","webpack:///./src/app/training/table/table.component.ts","webpack:///./src/app/training/training.component.css","webpack:///./src/app/training/training.component.html","webpack:///./src/app/training/training.component.ts","webpack:///./src/app/user-info/user-info.component.css","webpack:///./src/app/user-info/user-info.component.html","webpack:///./src/app/user-info/user-info.component.ts","webpack:///./src/app/user/user-details/user-details.component.css","webpack:///./src/app/user/user-details/user-details.component.html","webpack:///./src/app/user/user-details/user-details.component.ts","webpack:///./src/app/user/user-task/user-task.component.css","webpack:///./src/app/user/user-task/user-task.component.html","webpack:///./src/app/user/user-task/user-task.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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xC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAA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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-header *ngIf=\\\"currentUser | async\\\"></app-header>\\n<router-outlet></router-outlet>\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {AuthCookie} from './shared/auth-cookies-handler';\nimport {Store} from '@ngrx/store';\nimport * as fromAppReducers from './shared/store/app.reducers';\nimport {TaskInfoService} from './shared/socket/task-info.service';\nimport {Client} from 'stompjs/lib/stomp.js';\nimport * as UserActions from './shared/store/user/users.actions';\nimport {Observable} from 'rxjs/Observable';\nimport {Router} from '@angular/router';\nimport {StoreResetService} from './shared/store-reset.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  stompClient: Client;\n  currentUser: Observable<string>;\n\n  constructor(private cookie: AuthCookie,\n              private store: Store<fromAppReducers.AppState>,\n              private taskInfo: TaskInfoService,\n              private router: Router,\n              private resetService: StoreResetService) {\n  }\n\n  ngOnInit() {\n    console.log('AAA');\n    this.currentUser = this.store.select('users', 'currentUser');\n    this.currentUser.subscribe((user: string) => {\n        if (user.length > 0) {\n          this.store.dispatch(new UserActions.SetNewWebSocketClient(this.stompClient = this.taskInfo.getClient()));\n        } else {\n          this.router.navigate(['/signin']);\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.resetService.resetStore();\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {AppComponent} from './app.component';\nimport {HeaderComponent} from './header/header.component';\nimport {SigninComponent} from './signin/signin.component';\nimport {DefinitionComponent} from './definition/definition.component';\nimport {UserComponent} from './user/user.component';\nimport {RolesComponent} from './roles/roles.component';\nimport {TablesComponent} from './tables/tables.component';\nimport {HomeComponent} from './home/home.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RowComponent} from './tables/row/row.component';\nimport {StoreModule} from '@ngrx/store';\nimport {KeyPipe} from './tables/key.pipe';\nimport {QuestionControlService} from './tables/row/question-control.service';\nimport {TableHeaderComponent} from './tables/table-header/table-header.component';\nimport {UserDetailsComponent} from './user/user-details/user-details.component';\nimport {RoleDetailsComponent} from './roles/role-details/role-details.component';\nimport {DataStorageService} from './shared/data-storage.service';\nimport {MenuComponent} from './tables/menu/menu.component';\nimport {OauthService} from './shared/oauth.service';\nimport {AuthInterceptor} from './shared/auth.interceptor';\nimport {AuthCookie} from './shared/auth-cookies-handler';\nimport {RowDetailsComponent} from './tables/row-details/row-details.component';\nimport {FilterService} from './shared/filter/filter.service';\nimport {TaskComponent} from './tables/task/task.component';\n\nimport {tablesReducers} from './shared/store/table/tables.reducers';\nimport {usersReducers} from './shared/store/user/users.reducers';\nimport {tasksReducers} from './shared/store/task/tasks.reducers';\nimport {chatReducers} from './shared/store/chat/chat.reducers';\nimport {statisticsReducers} from './shared/store/statistics/statistics.reducers';\n\nimport {StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {environment} from '../environments/environment';\nimport {UserTaskComponent} from './user/user-task/user-task.component';\nimport {TaskInfoService} from './shared/socket/task-info.service';\nimport {WebSocketService} from './shared/socket/web-socket.service';\nimport {ChatComponent} from './chat/chat.component';\nimport {StoreResetService} from './shared/store-reset.service';\nimport {ReversePipe} from './shared/reverse.pipe';\nimport {ExtendedFilterPipe} from './shared/filter/extended-filter.pipe';\nimport {SortByPipe} from './shared/sort/sort-by.pipe';\nimport {StatisticsComponent} from './statistics/statistics.component';\nimport {UserInfoComponent} from './user-info/user-info.component';\nimport {StatisticsService} from './shared/statistics/statistics.service';\nimport {ChartsModule} from 'ng4-charts';\nimport {ClearArrayPipe} from './shared/clear-array-pipe';\nimport {SpinnerComponent} from './spinner/spinner.component';\nimport {TableStatisticsComponent} from \"./statistics/table-stats/table-statistics.component\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {AppMaterialModule} from \"./shared/modules/material/app-material.module\";\nimport {TrainingComponent} from './training/training.component';\nimport {AppRoutingModule} from \"./shared/modules/routing/app-routing-module\";\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\nimport { DialogComponent } from './training/dialog/dialog.component';\nimport { TableComponent } from './training/table/table.component';\nimport {OverlayContainer} from \"@angular/cdk/overlay\";\nimport {SnackBarComponent} from \"./training/snack-bar/snack-bar.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TableStatisticsComponent,\n    HeaderComponent,\n    SigninComponent,\n    DefinitionComponent,\n    UserComponent,\n    RolesComponent,\n    TablesComponent,\n    RowComponent,\n    HomeComponent,\n    KeyPipe,\n    ReversePipe,\n    ClearArrayPipe,\n    TableHeaderComponent,\n    UserDetailsComponent,\n    RoleDetailsComponent,\n    MenuComponent,\n    RowDetailsComponent,\n    TaskComponent,\n    UserTaskComponent,\n    ChatComponent,\n    ExtendedFilterPipe,\n    SortByPipe,\n    StatisticsComponent,\n    UserInfoComponent,\n    SpinnerComponent,\n    TrainingComponent,\n    DialogComponent,\n    TableComponent,\n    SnackBarComponent\n  ],\n  imports: [\n    ChartsModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    AppMaterialModule,\n    AppRoutingModule,\n    StoreModule.forRoot({\n      tables: tablesReducers,\n      users: usersReducers,\n      tasks: tasksReducers,\n      chat: chatReducers,\n      statistics: statisticsReducers\n    }),\n    StoreRouterConnectingModule,\n    !environment.production ? StoreDevtoolsModule.instrument() : []\n  ],\n  providers: [\n    QuestionControlService,\n    DataStorageService,\n    FilterService,\n    OauthService,\n    AuthCookie,\n    TaskInfoService,\n    WebSocketService,\n    StoreResetService,\n    StatisticsService,\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}\n    // {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi:true}\n  ],\n  exports: [\n    ExtendedFilterPipe,\n    SortByPipe\n  ],\n  entryComponents: [DialogComponent, SnackBarComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(overlayContainer: OverlayContainer) {\n    overlayContainer.getContainerElement().classList.add('candy-themed');\n    overlayContainer.getContainerElement().classList.add('my-themed');\n  }\n}\n\n","module.exports = \"li {\\n  border: 1px solid #32383e;\\n  background-color: rgba(200, 200, 200, 0.05);\\n  color: gray !important;\\n}\\n\\nli:hover {\\n  background-color: rgba(0, 0, 0, 0.2);\\n}\\n\\ninput, select, textarea {\\n  background-color: rgba(0, 0, 0, 0.05) !important;\\n}\\n\\n.jumbotron {\\n  background: none;\\n}\\n\\n/* width */\\n\\n::-webkit-scrollbar {\\n  width: 20px;\\n}\\n\\n/* Track */\\n\\n::-webkit-scrollbar-track {\\n  border-radius: 10px;\\n}\\n\\n/* Handle */\\n\\n::-webkit-scrollbar-thumb {\\n  background: grey;\\n  border-radius: 10px;\\n}\\n\\n/* Handle on hover */\\n\\n::-webkit-scrollbar-thumb:hover {\\n  background: darkgrey;\\n}\\n\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-4\\\">\\n      <ul class=\\\"list-group\\\" style=\\\"padding: 50px 30px\\\">\\n        <li class=\\\"list-group-item list-group-item-dark bg-dark text-white\\\">Active Users:</li>\\n        <li class=\\\"list-group-item list-group-item-action list-group-item-light\\\"\\n            (click)=\\\"setChat('global')\\\">\\n          Global chat\\n        </li>\\n        <div *ngFor=\\\"let activeWsUser of (activeWsUsers | async)\\\">\\n          <li *ngIf=\\\"activeWsUser != (currentUser |async)\\\"\\n              class=\\\"list-group-item list-group-item-action list-group-item-light\\\"\\n              (click)=\\\"setChat(activeWsUser)\\\"\\n          >{{activeWsUser}}\\n          </li>\\n        </div>\\n      </ul>\\n    </div>\\n\\n    <div class=\\\"col-8\\\" style=\\\"padding: 50px 70px 0 0;\\\">\\n      <ul class=\\\"list-group\\\" [ngClass]=\\\"chatName != 'global' ? 'd-none' : ''\\\">\\n        <li class=\\\"list-group-item bg-dark text-info\\\">Global chat:</li>\\n        <li class=\\\"list-group-item\\\"\\n            style=\\\"min-height: 600px; max-height: 600px; overflow-y: scroll;\\\">\\n          <div *ngFor=\\\"let message of (chatContent | async | reverse)\\\">\\n            <div *ngIf=\\\"(message.senderName) === 'global' || (message.recipientName) === 'global'\\\">\\n              <div *ngIf=\\\"(message.senderName) === (currentUser |async)\\\" class=\\\"alert border-primary text-primary\\\"\\n                   style=\\\"width: 70%; margin-bottom: 5px;\\\">{{message.senderName}} : {{message.message}}\\n              </div>\\n              <div *ngIf=\\\"(message.senderName) !== (currentUser |async)\\\" class=\\\"alert border-success text-success\\\"\\n                   style=\\\"width: 70%; margin: 0 0 5px 30%\\\">{{message.senderName}} : {{message.message}}\\n              </div>\\n            </div>\\n          </div>\\n        </li>\\n        <li *ngIf=\\\"chatName == 'global'\\\" class=\\\"list-group-item bg-dark\\\">\\n          <div class=\\\"input-group\\\">\\n            <input class=\\\"form-control border-secondary\\\" type=\\\"text\\\" #messageContentGlobal>\\n            <div class=\\\"input-group-append\\\">\\n              <button (click)=\\\"postMessage(messageContentGlobal.value)\\\" class=\\\"btn btn-default\\\">Post</button>\\n            </div>\\n          </div>\\n        </li>\\n      </ul>\\n\\n      <div *ngFor=\\\"let activeWsUser of (activeWsUsers | async | reverse)\\\">\\n        <ul class=\\\"list-group\\\" [ngClass]=\\\"chatName != activeWsUser ? 'd-none' : ''\\\">\\n          <li class=\\\"list-group-item bg-dark text-info\\\">{{activeWsUser}} chat:</li>\\n          <li class=\\\"list-group-item\\\" style=\\\"min-height: 600px;max-height: 600px; overflow-y: scroll;\\\">\\n            <div *ngFor=\\\"let message of (chatContent | async)\\\">\\n              <div *ngIf=\\\"\\n            (message.senderName === activeWsUser || message.recipientName === activeWsUser) &&\\n            (message.senderName !== 'global' && message.recipientName !== 'global')\\n            \\\">\\n                <div *ngIf=\\\"(message.senderName) === (currentUser |async)\\\" class=\\\"alert border-primary text-primary\\\"\\n                     style=\\\"width: 70%; margin-bottom: 5px;\\\">{{message.senderName}} :{{message.message}}\\n                </div>\\n                <div *ngIf=\\\"(message.senderName) !== (currentUser |async)\\\" class=\\\"alert border-success text-success\\\"\\n                     style=\\\"width: 70%; margin: 0 0 5px 30%\\\">{{message.senderName}} : {{message.message}}\\n                </div>\\n              </div>\\n            </div>\\n          </li>\\n          <li *ngIf=\\\"chatName == activeWsUser\\\" class=\\\"list-group-item bg-dark text-white\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control border-secondary\\\" type=\\\"text\\\" #messageContent>\\n              <div class=\\\"input-group-append\\\">\\n                <button (click)=\\\"postMessage(messageContent.value)\\\" class=\\\"btn btn-default\\\">Post</button>\\n              </div>\\n            </div>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport * as fromAppReducers from '../shared/store/app.reducers';\nimport {TaskInfoService} from '../shared/socket/task-info.service';\nimport {Client} from 'stompjs/lib/stomp.js';\nimport {Observable} from 'rxjs/Observable';\nimport {ChatMessageModel} from '../shared/chat-message.model';\nimport {DataStorageService} from '../shared/data-storage.service';\nimport * as ChatActions from \"../shared/store/chat/chat.actions\";\n\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n  chatContent: Observable<ChatMessageModel[]>;\n  currentUser: Observable<string>;\n  activeWsUsers: Observable<string[]>;\n  username: string;\n  chatName = 'global';\n\n\n  constructor(private store: Store<fromAppReducers.AppState>,\n              private ws: TaskInfoService,\n              private dss: DataStorageService) {\n  }\n\n  ngOnInit() {\n    this.chatContent = this.store.select('chat', 'chatContent');\n    this.currentUser = this.store.select('users', 'currentUser');\n    this.currentUser.subscribe((username) => {\n      this.username = username;\n    });\n    this.activeWsUsers = this.store.select('chat', 'activeUsers');\n    this.dss.getActiveWsUsers();\n  }\n\n  postMessage(messageContent: string) {\n    console.log(messageContent);\n    if (this.chatName === 'global') {\n      console.log('postMessage' + this.chatName);\n      this.ws.stompClient.send('/app/chat', {}, messageContent);\n    } else {\n      this.store.dispatch(new ChatActions.AppendChatWithMessage(new ChatMessageModel(this.username, messageContent, this.chatName)));\n      this.ws.stompClient.send('/app/chat/' + this.chatName, {}, messageContent);\n    }\n  }\n\n  setChat(chatName: string) {\n    console.log('chatName' + chatName);\n    this.chatName = chatName;\n  }\n}\n","module.exports = \"li {\\n  border: 1px solid #32383e;\\n  background-color: rgba(200, 200, 200, 0.05);\\n  color: gray !important;\\n}\\n\\nli:hover {\\n  background-color: rgba(200, 200, 200, 0.2);\\n}\\n\\ninput, select, textarea {\\n  background-color: rgba(0, 0, 0, 0.05) !important;\\n}\\n\\n.jumbotron {\\n  background: none;\\n}\\n\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12\\\">\\n        <h3 class=\\\"text-center text-info\\\">Table Definition</h3>\\n        <form [formGroup]=\\\"definitionForm\\\" style=\\\"margin-top: 10px\\\">\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\"\\n                   id=\\\"table-name\\\"\\n                   formControlName=\\\"name\\\"\\n                   placeholder=\\\"Table Name\\\"\\n                   class=\\\"form-control  border-secondary\\\" ngModel\\n                   required\\n            >\\n          </div>\\n          <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-12\\\" formArrayName=\\\"columnDetailDefinitionDtoList\\\">\\n              <div class=\\\"row justify-content-center\\\"\\n                   *ngFor=\\\"let columnDetailDefinitionDto of getData().controls; let i = index;\\\"\\n                   [formGroupName]=\\\"i\\\">\\n                <div class=\\\"col-12 col-sm-5 col-md-3\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <label class=\\\"btn btn-outline-secondary\\\">Type:</label>\\n                    </div>\\n                    <select type=\\\"text\\\" class=\\\"form-control  border-secondary\\\" formControlName=\\\"type\\\" required>\\n                      <option *ngFor=\\\"let option of options;\\\" [selected]=\\\"option.name\\\" [value]=\\\"option.shortcut\\\">{{\\n                        option.name }}\\n                      </option>\\n                    </select>\\n                  </div>\\n                  <div *ngIf=\\\"definitionForm.value.columnDetailDefinitionDtoList[i].type=='EN'\\\">\\n                    <div class=\\\"col-12\\\" formArrayName=\\\"optionList\\\">\\n                      <div *ngFor=\\\"let option of columnDetailDefinitionDto.get('optionList').controls;let j = index\\\" class=\\\"row\\\">\\n                        <div class=\\\"input-group\\\" style=\\\"margin-top: 3px;\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control  border-secondary\\\"\\n                                 [value]=\\\"definitionForm.value.columnDetailDefinitionDtoList[i].optionList[j]\\\" formControlName=\\\"{{j}}\\\"\\n                                 placeholder=\\\"Option...\\\"\\n                                 required>\\n                          <div class=\\\"input-group-append\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary text-danger\\\" (click)=\\\"onDeleteOption(i,j)\\\">X</button>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"form-group\\\" style=\\\"margin: 5px 0\\\">\\n                          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary text-primary\\\" (click)=\\\"onAddOptions(i)\\\">\\n                            Add option\\n                          </button>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-11 col-sm-6 col-md-5\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <div class=\\\"input-group-prepend\\\">\\n                      <label class=\\\"btn btn-outline-secondary\\\">Name:</label>\\n                    </div>\\n                    <input type=\\\"text\\\" class=\\\"form-control border-secondary\\\" formControlName=\\\"name\\\" required style=\\\"height: 38px;\\\">\\n                  </div>\\n                </div>\\n                <div class=\\\"col-1\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary text-danger\\\" (click)=\\\"onDeleteColumn(i)\\\">X</button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <br>\\n          <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"form-group\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary text-primary\\\" (click)=\\\"onAddColumn()\\\">Add column</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary text-danger\\\" (click)=\\\"onResetForm()\\\">Reset form</button>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-outline-secondary text-success\\\" [disabled]=\\\"!definitionForm.valid\\\" (click)=\\\"postCommonTableForm()\\\">Define in common table</button>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-outline-secondary text-success\\\" [disabled]=\\\"!definitionForm.valid\\\" (click)=\\\"postSepareteTableForm()\\\">Define in separate table</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {FormArray, FormControl, FormGroup} from '@angular/forms';\nimport * as fromDefinitionModel from '../shared/table.model';\nimport {DataStorageService} from '../shared/data-storage.service';\n\nconst COMMON_TABLE_ENVIRONMENT = \"COMMON_TABLE_ENVIRONMENT\";\nconst SEPARATE_TABLE_ENVIRONMENT = \"SEPARATE_TABLE_ENVIRONMENT\";\n\n@Component({\n  selector: 'app-definition',\n  templateUrl: './definition.component.html',\n  styleUrls: ['./definition.component.css']\n})\nexport class DefinitionComponent implements OnInit {\n  definitionForm: FormGroup;\n  options = fromDefinitionModel.options;\n\n\n  constructor(private dss: DataStorageService) {\n  }\n\n  ngOnInit() {\n    this.initForm();\n    // this.options = fromDefinitionModel.options;\n  }\n\n  private initForm() {\n\n    this.definitionForm = new FormGroup({\n      'name': new FormControl(),\n      'columnDetailDefinitionDtoList': new FormArray([])\n    });\n  }\n\n  onAddColumn() {\n    (<FormArray>this.definitionForm.get('columnDetailDefinitionDtoList')).push(\n      new FormGroup({\n        'type': new FormControl('IN'),\n        'name': new FormControl(''),\n        'optionList': new FormArray([])\n      })\n    );\n  }\n\n  onAddOptions(i: number) {\n    (<FormArray>(<FormArray>this.definitionForm.get('columnDetailDefinitionDtoList')).at(i).get('optionList')).push(\n      new FormControl()\n    );\n  }\n\n  onDeleteOption(typeIndex: number, optionNumber: number) {\n    (<FormArray>(<FormArray>this.definitionForm.get('columnDetailDefinitionDtoList'))\n      .at(typeIndex)\n      .get('optionList'))\n      .removeAt(optionNumber);\n  }\n\n  onDeleteColumn(i) {\n    (<FormArray>this.definitionForm.get('columnDetailDefinitionDtoList')).removeAt(i);\n  }\n\n  onResetForm() {\n    this.initForm();\n  }\n\n  postSepareteTableForm() {\n    this.postTableForm(SEPARATE_TABLE_ENVIRONMENT);\n  }\n\n  postCommonTableForm() {\n    this.postTableForm(COMMON_TABLE_ENVIRONMENT);\n  }\n\n  private postTableForm(databaseEnviroment: string){\n    const formValue = this.definitionForm.value;\n    formValue['id'] = null;\n    this.dss.postTableDefinition(formValue, databaseEnviroment);\n  }\n\n  getData() {\n    return <FormArray>this.definitionForm.get('columnDetailDefinitionDtoList');\n  }\n}\n","module.exports = \"nav {\\n  background-color: rgba(0,0,0,0.1);\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark\\\" style=\\\"margin-bottom: 0\\\">\\n  <!--*ngIf=\\\"(token | async)\\\"-->\\n  <a class=\\\"navbar-brand text-info\\\" href=\\\"/\\\">Report Manager</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\"\\n          aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavDropdown\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\" *ngIf=\\\"(token | async)\\\">\\n      <li class=\\\"nav-item \\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\"><a class=\\\"nav-link text-info\\\" routerLink=\\\"/home\\\">Home</a></li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\"><a class=\\\"nav-link text-info\\\" routerLink=\\\"/tables\\\">Tables</a></li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\"><a class=\\\"nav-link text-info\\\" routerLink=\\\"/users\\\">Users</a></li>\\n      <li *ngIf=\\\"(isAdmin | async)\\\" class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\"><a class=\\\"nav-link text-info\\\" routerLink=\\\"/definitions\\\">Definition</a></li>\\n      <li *ngIf=\\\"(isAdmin | async)\\\" class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\"><a class=\\\"nav-link text-info\\\" routerLink=\\\"/roles\\\">Roles</a></li>\\n      <li *ngIf=\\\"(isAdmin | async)\\\" class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\"><a class=\\\"nav-link text-info\\\" routerLink=\\\"/statistics\\\">Statistics</a></li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\"><a class=\\\"nav-link text-info\\\" routerLink=\\\"/chat\\\">Chat</a></li>\\n      <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\"><a class=\\\"nav-link text-info\\\" routerLink=\\\"/training\\\">Training</a></li>\\n    </ul>\\n\\n    <span class=\\\"nav navbar-text font-weight-bold\\\" *ngIf=\\\"(token | async)\\\">\\n      <a class=\\\"text-info\\\" routerLink=\\\"/user-info\\\">Welcome : {{ username | async }}</a>\\n    </span>\\n    <span *ngIf=\\\"(newTaskState | async)\\\" (click)=\\\"onNewTasksSeen()\\\" class=\\\"nav navbar-text text-danger\\\">!Check Tasks!</span>\\n    <span class=\\\"navbar-text\\\">\\n      <a class=\\\"nav-link text-info\\\" routerLink=\\\"/signin\\\" *ngIf=\\\"!(token | async)\\\">Login</a>\\n    </span>\\n    <span class=\\\"navbar-text\\\">\\n      <a class=\\\"nav-link text-info\\\" (click)=\\\"onLogout()\\\" *ngIf=\\\"(token | async)\\\" routerLink=\\\"/\\\">Logout</a>\\n    </span>\\n  </div>\\n</nav>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {Observable} from 'rxjs/Observable';\nimport * as fromAppReducers from '../shared/store/app.reducers';\nimport {OauthService} from '../shared/oauth.service';\nimport {DataStorageService} from '../shared/data-storage.service';\nimport {Token} from '../shared/auth.model';\nimport {Client} from 'stompjs/lib/stomp.js';\nimport * as UserActions from '../shared/store/user/users.actions';\nimport {StoreResetService} from '../shared/store-reset.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  token: Observable<Token>;\n  username: Observable<string>;\n  currentUserRoles: Observable<string[]>;\n  isAdmin: Observable<boolean>;\n  newTaskState: Observable<boolean>;\n  currentUsername: string;\n\n  constructor(private store: Store<fromAppReducers.AppState>,\n              private oauth: OauthService,\n              private dss: DataStorageService,\n              private resetService: StoreResetService,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.newTaskState = this.store.select('users', 'newTaskInfo');\n    this.token = this.store.select('users', 'token');\n    this.username = this.store.select('users', 'currentUser');\n    this.username.subscribe((username: string) => {\n      this.dss.getCurrentUserRoles(username);\n      this.currentUsername = username;\n      // this.dss.getActiveWsUsers();\n    });\n    this.currentUserRoles = this.store.select('users', 'currentUserRoles');\n    this.isAdmin = this.currentUserRoles.map(roles => {\n      let condition = false;\n      roles.forEach(role => {\n        if (role === 'ROLE_ADMIN') {\n          condition = true;\n        }\n      });\n      return condition;\n    });\n  }\n\n  onLogout() {\n    this.resetService.resetStore();\n    this.router.navigate(['/signin']);\n    this.store.dispatch(new UserActions.SetLogoutInfo('You have been successfully logged out!'));\n  }\n\n  onNewTasksSeen() {\n    this.store.dispatch(new UserActions.SetTaskInfoAction(false));\n  }\n}\n","module.exports = \".jumbotron {\\n  width: auto;\\n  background-color: transparent;\\n  color: #ecf0f1;\\n  height: 80%;\\n}\\n\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n  <div class=\\\"container\\\">\\n    <h3 class=\\\"display-3 text-white\\\">Welcome !</h3>\\n    <p class=\\\"lead text-white\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\n      Fusce ullamcorper a ipsum nec feugiat. Quisque viverra quis nulla eu pharetra.\\n      Morbi blandit, quam vehicula semper hendrerit, ante urna vulputate justo, vitae venenatis\\n      massa tellus ac risus. Aliquam consequat libero quis aliquet posuere. Etiam imperdiet interdum accumsan.\\n      Etiam sodales suscipit dui, sit amet finibus augue aliquam quis.\\n    </p>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"li, td {\\n  border: 1px solid #32383e;\\n  background-color: rgba(200, 200, 200, 0.05);\\n  color: gray !important;\\n}\\n\\n.bg-light {\\n  background-color: rgba(200, 200, 200, 0.2) !important;\\n}\\n\\nselect, input, textarea {\\n  background-color: rgba(0, 0, 0, 0.05) !important;\\n}\\n\\n\"","module.exports = \"<div *ngIf=\\\"role && !(newRoleMode | async)\\\">\\n  <table class=\\\"table table-bordered table-striped\\\">\\n    <tbody>\\n    <tr>\\n      <td><span class=\\\"text-info\\\">ID:</span></td>\\n      <td>\\n        <div class=\\\"d-flex justify-content-between\\\">\\n          <span> {{ role.id }} </span>\\n          <button class=\\\"btn btn-outline-secondary text-danger\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deleteConfirmModal\\\"> Delete Role</button>\\n        </div>\\n      </td>\\n    </tr>\\n    <tr>\\n      <td><span class=\\\"text-info\\\">NAME:</span></td>\\n      <td>{{ role.name }}</td>\\n    </tr>\\n    <tr>\\n      <td><span class=\\\"text-info\\\">DESCRIPTION:</span></td>\\n      <td> {{ role.description }}</td>\\n    </tr>\\n    <tr>\\n      <td><span class=\\\"text-info\\\">USERS</span></td>\\n      <td>\\n        <ul class=\\\"list-group\\\">\\n          <li class=\\\"list-group-item\\\" *ngFor=\\\"let user of role.userDtos\\\" style=\\\"background-color: rgba(0, 0, 0, 0.05) !important;\\\">{{user.username}}</li>\\n        </ul>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n  <div *ngIf=\\\"editUserMode && !(newRoleMode | async)\\\">\\n    <form [formGroup]=\\\"userForm\\\" class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <select class=\\\"form-control border-secondary\\\" formControlName=\\\"user\\\">\\n          <option selected>- Select -</option>\\n          <option *ngFor=\\\"let user of (users|async)\\\"> {{ user.username }}</option>\\n        </select>\\n        <div class=\\\"input-group-append\\\">\\n          <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"postAddUser()\\\">Add</button>\\n          <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"postRemoveUser()\\\">Remove</button>\\n          <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"abortAddUser()\\\">Abort</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <div *ngIf=\\\"!editUserMode\\\">\\n    <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onEditUserMode()\\\">Edit Role</button>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"(newRoleMode | async)\\\">\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"text-info\\\">Role name:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control border-secondary\\\" #name>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"text-info\\\">Role description:</label>\\n      <textarea rows=\\\"6\\\" class=\\\"form-control border-secondary\\\" #description></textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <button (click)=\\\"onSubmitRole(name.value, description.value)\\\" class=\\\"btn btn-outline-secondary\\\">Submit</button>\\n      <button (click)=\\\"onAbortSubmitRole()\\\" class=\\\"btn btn-outline-secondary\\\">Close</button>\\n    </div>\\n  </form>\\n</div>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"deleteConfirmModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Role removal</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        Whhaaaaaatt??!!\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">Abort</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"postRemoveUser()\\\">Confirm</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {RoleModel} from '../role.model';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {Observable} from 'rxjs/Observable';\nimport {UserModel} from '../../user/user.model';\nimport {Store} from '@ngrx/store';\nimport {DataStorageService} from '../../shared/data-storage.service';\nimport * as fromAppReducers from '../../shared/store/app.reducers';\nimport * as UsersActions from '../../shared/store/user/users.actions';\n\n@Component({\n  selector: 'app-role-details',\n  templateUrl: './role-details.component.html',\n  styleUrls: ['./role-details.component.css']\n})\nexport class RoleDetailsComponent implements OnInit {\n  @Input() role: RoleModel;\n  editUserMode = false;\n  users: Observable<UserModel[]>;\n  userForm: FormGroup;\n  newRoleMode: Observable<boolean>;\n\n  constructor(private store: Store<fromAppReducers.AppState>,\n              private dss: DataStorageService) {\n  }\n\n  ngOnInit() {\n    this.newRoleMode = this.store.select('users', 'newRoleMode');\n    this.users = this.store.select('users', 'users');\n    this.dss.getUsers();\n    this.userForm =\n      new FormGroup({\n        'user': new FormControl('Select option')\n      });\n  }\n\n  postRemoveUser() {\n    this.dss.removeUserFromRole({role: this.role, username: <string>this.userForm.value.user});\n  }\n\n  onEditUserMode() {\n    this.editUserMode = true;\n  }\n\n  postAddUser() {\n    if (this.dss.addRoleToUser({rolename: this.role.name, username: <string>this.userForm.value.user})) {\n      this.users.subscribe((users: UserModel[]) => {\n        users.forEach((user) => {\n            if (user.username === this.userForm.value.user) {\n              this.role.userDtos.push(user);\n            }\n        });\n      }).unsubscribe();\n    }\n  }\n\n  abortAddUser() {\n    this.editUserMode = false;\n  }\n\n  onSubmitRole(name, description) {\n    this.dss.saveNewRole({name: name, description: description});\n  }\n\n  onAbortSubmitRole() {\n    this.store.dispatch(new UsersActions.SetNewRoleModeAction(false));\n  }\n}\n","export class RoleModel {\n  public name: string;\n  public id: number;\n  public userDtos: [{\n    username: string,\n    firstName: string,\n    lastName: string,\n    password?: string,\n    email: string,\n    enabled: boolean,\n    roleNames: any[]\n  }];\n  public description: string;\n}\n","module.exports = \"li {\\n  border: 1px solid #32383e;\\n  background-color: rgba(200, 200, 200, 0.05);\\n  color: gray !important;\\n}\\n\\nli:hover {\\n  background-color: rgba(200, 200, 200, 0.2);\\n}\\n\\n.bg-light {\\n  background-color: rgba(200, 200, 200, 0.2) !important;\\n}\\n\\n.jumbotron {\\n  background: none;\\n}\\n\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <div class=\\\"row\\\" style=\\\"padding: 30px\\\">\\n    <div class=\\\"col-4 align-self-start\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active border-dark\\\" style=\\\"background-color: rgba(0,0,0,0.05) !important;\\\">Roles:</li>\\n        <li class=\\\"list-group-item list-group-item-action d-flex justify-content-end\\\"\\n            *ngFor=\\\"let role of (roles | async)\\\" (click)=\\\"onSelectRole(role)\\\"\\n            [ngClass]=\\\"selectedRole?.id == role.id ? 'bg-light' : ''\\\">\\n          <td class=\\\"mr-auto p-2\\\">{{ role.name }}</td>\\n        </li>\\n        <button class=\\\"btn text-white\\\" style=\\\"background-color: rgba(0,0,0,0.05) !important;\\\" (click)=\\\"onNewRole()\\\">New role</button>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-8 align-self-center\\\">\\n      <app-role-details [role]=\\\"selectedRole\\\"></app-role-details>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Store} from '@ngrx/store';\nimport {RoleModel} from './role.model';\nimport * as fromAppReducers from '../shared/store/app.reducers';\nimport {DataStorageService} from '../shared/data-storage.service';\nimport * as UsersActions from '../shared/store/user/users.actions';\n\n@Component({\n  selector: 'app-roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.css']\n})\nexport class RolesComponent implements OnInit {\n  roles: Observable<RoleModel[]>;\n  selectedRole: RoleModel;\n\n\n  constructor(private roleStore: Store<fromAppReducers.AppState>,\n              private dss: DataStorageService) {\n  }\n\n  ngOnInit() {\n    this.roles = this.roleStore.select('users', 'roles');\n    this.dss.getRoles();\n  }\n\n  onSelectRole(role: RoleModel) {\n    this.selectedRole = role;\n  }\n\n  onNewRole() {\n    this.roleStore.dispatch(new UsersActions.SetNewRoleModeAction(true));\n  }\n\n  // onRemoveRole(name: string) { TODO remove?\n  //   this.dss.deleteRole(name);\n  //   this.roleStore.dispatch(new UsersActions.SetNewRoleModeAction(false));\n  //   this.selectedRole = null;\n  // }\n}\n","import {Injectable} from '@angular/core';\nimport {Cookie} from 'ng2-cookies/ng2-cookies';\n\n@Injectable()\nexport class AuthCookie {\n  constructor() {\n  }\n\n  static getAuth(): string {\n    return Cookie.get('sticky');\n  }\n\n  static setAuth(value: string, expires: number): void {\n    // 0.0138889//this accept day not minuts\n    Cookie.set('sticky', value, expires);\n  }\n\n  static deleteAuth(): void {\n    Cookie.delete('sticky');\n  }\n}\n","import {\n  HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest,\n} from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\nimport {Injectable} from '@angular/core';\nimport {AuthCookie} from './auth-cookies-handler';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor() {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n    if (!req.url.includes('oauth/token')) {\n      if (req.method === 'GET') {\n        const headers = new HttpHeaders({'Content-type': 'multipart/form-data', 'Authorization': 'Bearer ' + AuthCookie.getAuth()});\n        // TODO'multipart/form-data' -> urlencoded??\n        const updatedReq = req.clone({headers: headers});\n        return next.handle(updatedReq);\n      } else {\n        const headers = new HttpHeaders({'Content-type': 'application/json', 'Authorization': 'Bearer ' + AuthCookie.getAuth()});\n        const updatedReq = req.clone({headers: headers});\n        return next.handle(updatedReq);\n      }\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n","export class ChatMessageModel {\n  senderName: string;\n  message: string;\n  recipientName: string;\n\n  constructor(senderName: string,\n              message: string,\n              recipientName: string) {\n    this.senderName = senderName;\n    this.message = message;\n    this.recipientName = recipientName;\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'clearArray'\n})\nexport class ClearArrayPipe implements PipeTransform {\n  transform(array: any[]) {\n    const newArray = [];\n    for (let i = 0; i < array.length; i++) {\n      if (typeof array[i] !== 'undefined') { // TODO only undefined??\n        newArray.push(array[i]);\n      }\n    }\n    return newArray;\n  }\n}\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport 'rxjs/add/operator/map';\nimport {RowContentModel, TableDefinitionModel, TaskModel} from './table.model';\nimport {Store} from '@ngrx/store';\nimport * as UsersActions from './store/user/users.actions';\nimport * as TablesActions from './store/table/tables.actions';\nimport * as fromAppReducers from './store/app.reducers';\nimport * as fromServerModel from './server.model';\nimport {UserModel} from '../user/user.model';\nimport {RoleModel} from '../roles/role.model';\nimport * as TaskActions from './store/task/tasks.actions';\nimport {Client} from 'stompjs/lib/stomp.js';\nimport {TaskInfoService} from './socket/task-info.service';\nimport * as ChatActions from './store/chat/chat.actions';\n\n@Injectable()\nexport class DataStorageService {\n  // stompClientState: Observable<Client>;\n  // stompClient: Client;\n  basehost = fromServerModel.baseUrl;\n\n  constructor(private httpClient: HttpClient,\n              private store: Store<fromAppReducers.AppState>,\n              private taskInfoService: TaskInfoService) {\n  }\n\n  getCurrentUser(username: string) {\n    this.httpClient.get<UserModel>(this.basehost + '/v1/users/' + username)\n      .subscribe((user: UserModel) => {\n        this.store.dispatch(new UsersActions.SetCurrntUserDetails(user));\n      }, (err) => {\n        console.log('getCurrentUser dss err: ', err);\n      });\n  }\n\n  updateUser(user: UserModel) {\n    this.httpClient.put<UserModel>(this.basehost + '/v1/users/' + user.username, user)\n      .subscribe(\n        (updatedUser: UserModel) => {\n          console.log('updateUser dss OK: ', updatedUser);\n          this.store.dispatch(new UsersActions.SetCurrntUserDetails(updatedUser));\n        }, err => {\n          console.log('updateUser dss ERR: ', err);\n        }\n      );\n  }\n\n  updatePassword(oldPassword, newPassword, username) {\n    this.httpClient.put<boolean>(this.basehost + '/v1/users/' + username + '/pass', {\n      oldPassword: oldPassword,\n      newPassword: newPassword\n    })\n      .subscribe(\n        (done: boolean) => {\n          console.log('updatePassword dss OK: ', done);\n        }, err => {\n          console.log('updatePassword dss ERR: ', err);\n        }\n      );\n  }\n\n  getActiveWsUsers() {\n    this.httpClient.get<string[]>(this.basehost + '/v1/users/ws-active')\n      .subscribe((activeUsers: string[]) => {\n        this.store.dispatch(new ChatActions.SetActiveWsUsers(activeUsers));\n      }, (err) => {\n        console.log('getActiveWsUsers dss err: ', err);\n      });\n  }\n\n  getTableHeaderByName(tableName: string) {\n    return this.httpClient.get<TableDefinitionModel>(this.basehost + '/v1/projects/tables/definition/' + tableName)\n      .map((definition) => {\n        return definition;\n      }).subscribe((definition: TableDefinitionModel) => {\n        this.store.dispatch(new TablesActions.SetTableDefinitionAction(definition));\n      }, (err) => {\n        console.log('getTableHeaderByName dss err: ', err);\n      });\n  }\n\n  getTableRowsByName(tableName: string) {\n    return this.httpClient.get<RowContentModel[]>(this.basehost + '/v1/projects/tables/' + tableName + '/rows')\n      .subscribe((rows: RowContentModel[]) => {\n        this.store.dispatch(new TablesActions.SetRowsAction(rows));\n      }, (err) => {\n      console.log('getTableRowsByName dss err: ', err);\n    });\n  }\n\n  getTableNames() {\n    this.httpClient.get<string[]>(this.basehost + '/v1/projects/tables/names')\n      .subscribe(\n        (names) => {\n          this.store.dispatch(new TablesActions.SetNamesAction(names));\n        }, (err) => {\n          console.log('getTableNames dss err: ', err);\n        }\n      );\n  }\n\n  postTableDefinition(definition: TableDefinitionModel, databaseEnvironment) {\n    this.httpClient.post(this.basehost + '/v1/projects/tables/definition/' + databaseEnvironment, definition)\n      .subscribe(() => {\n        //TODO komunikat\n          alert(\"DONE!\");\n        }, (err) => {\n          console.log('postTableDefinition dss err: ', err);\n        }\n      );\n  }\n\n  getUsers() {\n    this.httpClient.get<UserModel[]>(this.basehost + '/v1/users')\n      .subscribe((users: UserModel[]) => {\n        this.store.dispatch(new UsersActions.SetUsersAction(users));\n      }, (err) => {\n        console.log('getUsers dss err: ', err);\n      });\n  }\n\n  getRoles() {\n    this.httpClient.get<RoleModel[]>(this.basehost + '/v1/roles/details')\n      .subscribe((roles: RoleModel[]) => {\n        this.store.dispatch(new UsersActions.SetRolesAction(roles));\n      }, (err) => {\n        console.log('getRoles dss err: ', err);\n      });\n  }\n\n  addRoleToUser(data: { username: string, rolename: string }) {\n    return this.httpClient.post(this.basehost + '/v1/users/' + data.username + '/roles/' + data.rolename, null)\n      .subscribe((user: UserModel) => {\n        this.store.dispatch(new UsersActions.AddRoleToUser(user));\n        return true;\n      }, (err) => {\n        console.log('addRoleToUser dss err: ', err);\n      });\n  }\n\n  removeRoleFromUser(data: { user: UserModel, rolename: string }) {\n    this.httpClient.delete<boolean>(this.basehost + '/v1/users/' + data.user.username + '/roles/' + data.rolename)\n      .subscribe((response) => {\n        if (response) {\n          data.user.roleNames.splice(data.user.roleNames.indexOf(data.rolename), 1);\n          this.store.dispatch(new UsersActions.RemoveRoleFromUser(data.user));\n        }\n      }, (err) => {\n        console.log('removeRoleFromUser dss err: ', err);\n      });\n  }\n\n  // addUserToRole(data: { rolename: string, username: string }) { TODO addUserToRole\n  //   return this.httpClient.post(this.basehost + '/v1/roles/' + data.rolename + '/users/' + data.username, null)\n  //     .subscribe((role: RoleModel) => {\n  //       this.store.dispatch(new UsersActions.AddUserToRole(role));\n  //       return true;\n  //     }, (err) => {\n  //       console.log('addUserToRole dss err: ', err);\n  //     });\n  // }\n\n  removeUserFromRole(data: { role: RoleModel, username: string }) { // TODO removeUserFromRole ERR!!\n    this.httpClient.delete<boolean>(this.basehost + '/v1/roles/' + data.role.name + '/users/' + data.username)\n      .subscribe((response) => {\n        if (response) {\n          let usertoRemove = null;\n          data.role.userDtos.forEach(user => {\n            if (user.username === data.username) {\n              usertoRemove = user;\n            }\n          });\n          data.role.userDtos.splice(data.role.userDtos.indexOf(usertoRemove), 1);\n          this.store.dispatch(new UsersActions.RemoveUserFromRole(data.role));\n        }\n      });\n  }\n\n  addNewRow(tableName: string, newRow: RowContentModel) {\n    this.httpClient.post<RowContentModel>(this.basehost + '/v1/projects/tables/' + tableName + '/row', newRow)\n      .subscribe((savedRow: RowContentModel) => {\n          // console.log('addNewRow dss OK: ', savedRow)\n          this.store.dispatch(new TablesActions.AddRowAction(savedRow));\n        },\n        err => {\n          console.log('addNewRow dss err: ', err);\n        });\n  }\n\n  updateRow(tableName: string, updatedRow: RowContentModel) {\n    this.httpClient.put<RowContentModel>(this.basehost + '/v1/projects/tables/' + tableName + '/row', updatedRow)\n      .subscribe(\n        (savedRow: RowContentModel) => {\n          // console.log(\"updateRow dss OK: \", savedRow);\n          this.store.dispatch(new TablesActions.UpdateRowAction(savedRow));\n        }, err => {\n          console.log('updateRow dss ERR: ', err);\n        }\n      );\n  }\n\n  getCurrentUserRoles(username: string) {\n    this.httpClient.get<string[]>(this.basehost + '/v1/roles/user/' + username)\n      .subscribe((roles: string[]) => {\n          this.store.dispatch(new UsersActions.SetCurrentUserRolenames(roles));\n        },\n        (err) => {\n          console.log('getUserRoles dss ERR: ', err);\n        }\n      );\n  }\n\n  saveNewRole(role: { name: string, description: string }) {\n    this.httpClient.post<RoleModel>(this.basehost + '/v1/roles/' + role.name, role.description)\n      .subscribe((savedRole: RoleModel) => {\n          // console.log('saveNewRole dss OK: ', savedRole)\n          this.store.dispatch(new UsersActions.AddRoleAction(savedRole));\n        },\n        err => {\n          console.log('saveNewRole dss err: ', err);\n        });\n  }\n\n  // deleteRole(roleName: string) { todo remove?\n  //   this.httpClient.delete<boolean>(this.basehost + '/v1/roles/' + roleName)\n  //     .subscribe((status: boolean) => {\n  //         if (status) {\n  //           this.store.dispatch(new UsersActions.DeleteRoleAction(roleName));\n  //         }\n  //       },\n  //       err => {\n  //         console.log('deleteRole dss err: ', err);\n  //       });\n  // }\n\n  deleteUser(username: string) {\n    this.httpClient.delete<boolean>(this.basehost + '/v1/users/' + username)\n      .subscribe((status: boolean) => {\n          if (status) {\n            this.store.dispatch(new UsersActions.DeleteUserAction(username));\n            this.store.dispatch(new UsersActions.SetNewUserModeAction(false));\n            this.store.dispatch(new UsersActions.SetUserDisplayedTask(null));\n          }\n        },\n        err => {\n          console.log('deleteUser dss err: ', err);\n        });\n  }\n\n  saveNewUser(user: UserModel) {\n    this.httpClient.post<UserModel>(this.basehost + '/v1/users', user)\n      .subscribe((savedUser: UserModel) => {\n          // console.log('saveNewUser dss OK: ', savedUser)\n          this.store.dispatch(new UsersActions.AddUserAction(savedUser));\n        },\n        err => {\n          console.log('saveNewUser dss err: ', err);\n        });\n  }\n\n  saveNewTask(tableName: string, newTask: TaskModel, rowId: number) {\n    this.httpClient.post<TaskModel>(this.basehost + '/v1/projects/tables/' + tableName + '/rows/' + rowId + '/tasks', newTask)\n      .subscribe((task: TaskModel) => {\n          // console.log('saveNewTask dss OK: ', tasks)\n          this.store.dispatch(new TablesActions.AddTaskAction({task: task, rowId: rowId}));\n        },\n        err => {\n          console.log('saveNewTask dss err: ', err);\n        });\n  }\n\n  setTableUsers(tableName: string) {\n    // console.log(tableName);\n    this.httpClient.get<UserModel[]>(this.basehost + '/v1/users/table/' + tableName)\n      .subscribe((users: UserModel[]) => {\n          this.store.dispatch(new TablesActions.SetTableUsers(users));\n        },\n        (err) => {\n          console.log('setTableUsers dss ERR: ', err);\n        }\n      );\n  }\n\n  onAssignUserToTask(tableName: string, rowId: number, taskId: number, username: string) {\n    this.httpClient.post<TaskModel>(this.basehost + '/v1/projects/tables/' + tableName + '/rows/tasks/' + taskId, username)\n      .subscribe((task: TaskModel) => {\n          // console.log('onAssignUserToTask dss OK: ', task)\n          this.store.dispatch(new TablesActions.UpdateRowsTaskAction({rowId: rowId, task: task}));\n          this.taskInfoService.stompClient.send('/app/newTasks/' + username, {});\n        },\n        err => {\n          console.log('onAssignUserToTask dss err: ', err);\n        });\n  }\n\n  onRemoveUserFromTask(tableName: string, rowId: number, taskId: number, username: string) {\n    this.httpClient.delete<TaskModel>(this.basehost + '/v1/projects/tables/' + tableName + '/rows/tasks/' + taskId + '/user/' + username)\n      .subscribe((task: TaskModel) => {\n          // console.log('onRemoveUserFromTask dss OK: ', task)\n          this.store.dispatch(new TablesActions.UpdateRowsTaskAction({rowId: rowId, task: task}));\n          this.taskInfoService.stompClient.send('/app/newTasks/' + username, {});\n        },\n        err => {\n          console.log('onRemoveUserFromTask dss err: ', err);\n        });\n  }\n\n  updateTask(task: TaskModel) {\n    this.httpClient.put<TaskModel>(this.basehost + '/v1/projects/tables/rows/tasks/', task)\n      .subscribe(\n        (updatedTask: TaskModel) => {\n          console.log('updateTask dss OK: ', updatedTask);\n          this.store.dispatch(new TablesActions.UpdateTaskAction(updatedTask));\n          this.store.dispatch(new UsersActions.UpdateTaskAction(updatedTask));\n        }, err => {\n          console.log('updateTask dss ERR: ', err);\n        }\n      );\n  }\n\n  deleteTask(tableName: string, taskId: number, rowId: number) {\n    // console.log('deleteTask',taskId, rowId)\n    this.httpClient.delete<boolean>(this.basehost + '/v1/projects/tables/' + tableName + '/rows/tasks/' + taskId)\n      .subscribe((response) => {\n        if (response) {\n          this.store.dispatch(new TaskActions.OnDeleteTask(taskId));\n          this.store.dispatch(new TablesActions.DeleteTask({rowId: rowId, taskId: taskId}));\n        }\n      }, err => {\n        console.log('deleteTask dss err: ', err);\n      });\n  }\n\n  deleteRow(tableName: string, rowId: number) {\n    this.httpClient.delete<boolean>(this.basehost + '/v1/projects/tables/' + tableName + '/rows/' + rowId)\n      .subscribe((response) => {\n        if (response) {\n          this.store.dispatch(new TablesActions.DeleteRow(rowId));\n        }\n      }, err => {\n        console.log('deleteRow dss err: ', err);\n      });\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {ExtendedFilterModel, RowContentModel} from '../table.model';\n\nimport {FilterService} from './filter.service';\n\n@Pipe({name: 'extendedFilter'})\nexport class ExtendedFilterPipe implements PipeTransform {\n  constructor(private filterService: FilterService) {\n\n  }\n\n  transform(rows: RowContentModel[], extendedFilterContent: ExtendedFilterModel, filterSelect: boolean) {\n    return rows.filter(row => this.filterService.runExtendedRowFilter(row, extendedFilterContent, filterSelect));\n  }\n}\n","import {ExtendedFilterModel, RowContentModel} from '../table.model';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class FilterService {\n  constructor() {\n\n  }\n\n  runExtendedRowFilter(row: RowContentModel, filter, filterSelect: boolean): boolean {\n    if (this.isEmptyFilter(filter)) {\n      return true;\n    } else {\n      if (filterSelect) {\n        return this.anyFilter(row, filter);\n      } else {\n        return FilterService.andFilter(row, filter);\n      }\n    }\n  }\n\n  static andFilter(row: RowContentModel, filter): boolean {\n    if (!FilterService.containsAll(row.id, filter.id)) {\n      return false;    }\n    if (!FilterService.containsAll(row.name || '', filter.name)) {\n      return false;  }\n    if (!FilterService.containsAll(row.createdOn, filter.createdOn)) {\n      return false;    }\n    if (!FilterService.containsAll(row.createdBy, filter.createdBy)) {\n      return false;    }\n    if (!FilterService.containsAll(row.lastModifiedOn, filter.lastModifiedOn)) {\n      return false;    }\n    if (!FilterService.containsAll(row.lastModifiedBy, filter.lastModifiedBy)) {\n      return false;    }\n    if (!FilterService.containsAll(row.taskDtos.length, filter.taskDtos)) {\n      return false;    }\n    for (let i = 0; i < row.columnValueDtos.length; i++) {\n        if (!FilterService.containsAll(FilterService.getMappedValue(row.columnValueDtos[i]), filter.columnValueDtos[i].value)) {\n          return false;\n        }\n      }\n    return true;\n  }\n\n  static containsAll(rowValue, filterValue): boolean {\n    if (!filterValue) {\n      return true;\n    }\n    return rowValue.toString().includes(filterValue);\n  }\n\n\n  anyFilter(row: RowContentModel, filter): boolean {\n    let condition = true;\n\n    if (FilterService.containsAny(row.id, filter.id)) {\n      condition = false;\n    }\n    if (FilterService.containsAny(row.name || '', filter.name)) {\n      condition = false;\n    }\n    if (FilterService.containsAny(row.createdOn, filter.createdOn)) {\n      condition = false;\n    }\n    if (FilterService.containsAny(row.createdBy, filter.createdBy)) {\n      condition = false;\n    }\n    if (FilterService.containsAny(row.lastModifiedOn, filter.lastModifiedOn)) {\n      condition = false;\n    }\n    if (FilterService.containsAny(row.lastModifiedBy, filter.lastModifiedBy)) {\n      condition = false;\n    }\n    if (row.taskDtos.length === filter.taskDtos) {\n      condition = false;\n    }\n    row.columnValueDtos.forEach((value, i) => {\n      if (FilterService.containsAny(FilterService.getMappedValue(value), filter.columnValueDtos[i].value)) {\n        condition = false;\n      }\n    });\n    return !condition;\n  }\n\n  runFilterTable(row: RowContentModel, filter: string): boolean { // TODO extend filter to unmodifiable fields\n    let condition = false;\n    row.columnValueDtos.forEach(value => {\n      if (FilterService.containsAny(FilterService.getMappedValue(value), filter)) {\n        condition = true;\n      }\n    });\n    return condition;\n  }\n\n  static containsAny(rowValue, filterValue): boolean {\n    if (!filterValue) {\n      return false;\n    }\n    return rowValue.toString().includes(filterValue);\n  }\n\n  static getMappedValue(object): string {\n    return object[Object.keys(object)[0]].value.toString();\n  }\n\n  isEmptyFilter(filter: ExtendedFilterModel): boolean {\n    let isFilterEmpty = true;\n    if (!filter) {\n      return true;\n    }\n    if (filter.id) {\n      isFilterEmpty = false;\n    }\n    if (filter.name) {\n      isFilterEmpty = false;\n    }\n    if (filter.createdOn) {\n      isFilterEmpty = false;\n    }\n    if (filter.createdBy) {\n      isFilterEmpty = false;\n    }\n    if (filter.lastModifiedOn) {\n      isFilterEmpty = false;\n    }\n    if (filter.lastModifiedBy) {\n      isFilterEmpty = false;\n    }\n    if (filter.taskDtos) {\n      isFilterEmpty = false;\n    }\n    filter.columnValueDtos.forEach((value) => {\n      if (value.value) {\n        isFilterEmpty = false;\n      }\n    });\n    return isFilterEmpty;\n\n  }\n}\n","import {NgModule} from \"@angular/core\";\nimport {\n  MatButtonModule,\n  MatIconModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatDatepickerModule, MatNativeDateModule,\n  MatCheckboxModule,\n  MatSidenavModule,\n  MatToolbarModule,\n  MatListModule,\n  MatCardModule,\n  MatSelectModule,\n  MatProgressSpinnerModule,\n  MatDialogModule,\n  MatTableModule, MatSortModule, MatPaginatorModule, MatSnackBarModule\n} from \"@angular/material\";\n\nconst MATERIAL_MODULES = [\n    MatButtonModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCheckboxModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatCardModule,\n    MatSelectModule,\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatSnackBarModule\n];\n\n@NgModule({\n  imports: [...MATERIAL_MODULES],\n  exports: [...MATERIAL_MODULES]\n})\nexport class AppMaterialModule {\n}\n","import {NgModule} from \"@angular/core\";\nimport {UserComponent} from \"../../../user/user.component\";\nimport {ChatComponent} from \"../../../chat/chat.component\";\nimport {TrainingComponent} from \"../../../training/training.component\";\nimport {SigninComponent} from \"../../../signin/signin.component\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {HomeComponent} from \"../../../home/home.component\";\nimport {StatisticsComponent} from \"../../../statistics/statistics.component\";\nimport {RolesComponent} from \"../../../roles/roles.component\";\nimport {TablesComponent} from \"../../../tables/tables.component\";\nimport {DefinitionComponent} from \"../../../definition/definition.component\";\nimport {UserInfoComponent} from \"../../../user-info/user-info.component\";\n\nexport const appRoutes: Routes = [\n  {path: 'home', component: HomeComponent},\n  {path: 'roles', component: RolesComponent},\n  {path: 'users', component: UserComponent},\n  {path: 'tables', component: TablesComponent},\n  {path: 'signin', component: SigninComponent},\n  // {path: 'signin', component: TrainingComponent},\n  {path: 'definitions', component: DefinitionComponent},\n  {path: 'statistics', component: StatisticsComponent},\n  {path: 'chat', component: ChatComponent},\n  {path: 'user-info', component: UserInfoComponent},\n  {path: 'user-info', component: UserInfoComponent},\n  {path: 'training', component: TrainingComponent},\n];\n\n@NgModule({\nimports: [RouterModule.forRoot(appRoutes)],\nexports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Injectable} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {Store} from '@ngrx/store';\nimport * as fromAppReducers from './store/app.reducers';\nimport * as fromServerModel from '../shared/server.model';\nimport {AuthCookie} from './auth-cookies-handler';\nimport * as UserActions from './store/user/users.actions';\nimport {Token} from './auth.model';\n\n@Injectable()\nexport class OauthService {\n  basehost = fromServerModel.baseUrl;\n  token: string;\n  isAuthenticated: boolean;\n\n  constructor(private router: Router,\n              private httpClient: HttpClient,\n              private store: Store<fromAppReducers.AppState>) {\n    this.store.select('users', 'token').forEach(token => {\n      if (token !== null) {\n        AuthCookie.setAuth(token.access_token, token.expires_in);\n        this.token = token.access_token;\n        this.isAuthenticated = true;\n      } else {\n        this.isAuthenticated = false;\n      }\n    });\n  }\n\n  obtainAccessToken(loginData: { username: string, password: string }) {\n    const params = new HttpParams()\n      .append('username', loginData.username)\n      .append('password', loginData.password)\n      .append('grant_type', 'password')\n      .append('client_id', 'live-test');\n    const headers = new HttpHeaders({\n      'Content-type': 'application/x-www-form-urlencoded; charset=utf-8',\n      'Authorization': 'Basic ' + btoa('live-test:bG2ZS10ZXN0')\n    });\n\n    this.httpClient.post<Token>(this.basehost + '/oauth/token', null, {\n      observe: 'body',\n      headers: headers,\n      params: params\n    })\n      .subscribe(\n        (data: Token) => {\n          this.saveToken(data, loginData.username);\n          this.router.navigate(['/home']);\n        },\n        err => {\n          console.log(err.message);\n          const errorMessage = err.message;\n          if (errorMessage.includes('live-test')) {\n            this.store.dispatch(new UserActions.SetLoginFailureInfo('Invalid credentials!'));\n          } else {\n            switch (errorMessage) {\n              case 'Http failure response for (unknown url): 0 Unknown Error':\n                this.store.dispatch(new UserActions.SetLoginFailureInfo('Connection problem'));\n                return;\n              default:\n                this.store.dispatch(new UserActions.SetLoginFailureInfo(errorMessage));\n                return;\n            }\n          }\n          return false;\n        }\n      );\n  }\n\n  // getResource(resourceUrl) : Observable<any> {\n  //   var headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8',\n  //     'Authorization': 'Bearer ' + this.cookie.getAuth()});\n  //   return this.httpClient.get(resourceUrl, { headers: headers }).subscribe({})\n  //   //.catch((error:any) => Observable.throw('Server error',error));\n  // }\n\n  saveToken(token: Token, username: string) {\n    // const expireDate = new Date().getTime() + (1000 * token.expires_in); // TODO remove??\n    this.store.dispatch(new UserActions.SetTokenAction(token));\n    this.store.dispatch(new UserActions.SetCurrentUserAction(username));\n    AuthCookie.setAuth(token.access_token, token.expires_in);\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'reverse'\n})\nexport class ReversePipe implements PipeTransform {\n  transform(value) {\n    return value.slice().reverse();\n  }\n}\n","export const baseUrl = 'http://localhost:8080';\n","import {Injectable} from '@angular/core';\nimport {WebSocketService} from './web-socket.service';\nimport {Client} from 'stompjs/lib/stomp.js';\n\n\n\n@Injectable()\nexport class TaskInfoService {\n  public stompClient: Client;\n  constructor(private wsService: WebSocketService) {\n  }\n\n  getClient(): Client {\n    this.stompClient = this.wsService.connect();\n      return this.stompClient;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport * as SockJS from 'sockjs-client';\nimport {AuthCookie} from '../auth-cookies-handler';\nimport {Stomp, Client, Frame} from 'stompjs/lib/stomp.js';\nimport {Store} from '@ngrx/store';\nimport * as fromAppReducers from '../store/app.reducers';\nimport * as UserActions from '../store/user/users.actions';\nimport * as ChatActions from '../store/chat/chat.actions';\n\n\n@Injectable()\nexport class WebSocketService {\n  stompClient: Client;\n\n  constructor(private cookie: AuthCookie,\n              private store: Store<fromAppReducers.AppState>) {\n  }\n\n  public connect(): Client {\n      return this.connectWS();\n  }\n\n  private connectWS(): Subject<any> {\n    const socket = new SockJS('http://localhost:8080/newTasks?access_token=' + AuthCookie.getAuth()) as WebSocket;\n    this.stompClient = Stomp.over(socket);\n    this.stompClient.connect({}, () => {\n      // console.log('CONNECT CONNECT', frame);\n      this.store.select('users', 'currentUser').subscribe((username: string) => {\n        this.stompClient.subscribe('/topic/newTasks/' + username, () => { // (messageOutput) =>\n          // console.log(messageOutput);\n          this.store.dispatch(new UserActions.SetTaskInfoAction(true));\n        });\n        this.stompClient.subscribe('/topic/chat', (messageOutput: Frame) => {\n          // console.log('/topic/chat/',messageOutput.body);\n          this.store.dispatch(new ChatActions.AppendChatWithMessage(JSON.parse(messageOutput.body)));\n        });\n        this.stompClient.subscribe('/topic/chat/' + username, (messageOutput: Frame) => {\n          // console.log('/topic/chat/',messageOutput.body);\n          this.store.dispatch(new ChatActions.AppendChatWithMessage(JSON.parse(messageOutput.body)));\n        });\n        this.stompClient.subscribe('/topic/people/chat', (messageOutput: Frame) => {\n          // console.log('/topic/people/chat/',messageOutput.body);\n          this.store.dispatch(new ChatActions.SetActiveWsUsers(JSON.parse(messageOutput.body)));\n        });\n      });\n    });\n    return this.stompClient;\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {RowContentModel} from '../table.model';\nimport {SortModel} from './sort.model';\n\n@Pipe({name: 'orderBy'})\nexport class SortByPipe implements PipeTransform {\n\n  transform(rows: RowContentModel[], sortContent: SortModel): RowContentModel[] {\n    if (sortContent == null) {\n      return rows;\n    } else {\n      switch (sortContent.dataType) {\n        case 'ST':\n        case 'DE':\n        case 'EN':\n          return this.textSort(rows, sortContent.asc, sortContent.name, sortContent.index);\n        case 'IN':\n          return this.numberSort(rows, sortContent.asc, sortContent.name, sortContent.index);\n        case 'DT':\n          return this.dateSort(rows, sortContent.asc, sortContent.name, sortContent.index);\n        default:\n          return rows;\n      }\n    }\n  }\n\n  textSort(rows: RowContentModel[], asc: boolean, name: string, index: number): RowContentModel[] {\n    switch (name) {\n      case 'id':\n        return this.sortNumber(rows, name, index, asc); // TODO toremove?\n      case 'name':\n        return this.sortText(rows, name, index, asc);\n      case 'createdBy':\n        return this.sortText(rows, name, index, asc);\n      case 'createdOn':\n        return this.sortDate(rows, name, index, asc); // TODO toremove?\n      case 'lastModifiedBy':\n        return this.sortText(rows, name, index, asc);\n      case 'lastModifiedOn':\n        return this.sortDate(rows, name, index, asc); // todo toremove?\n      case 'taskDtos':\n        return this.sortByArrayLength(rows, name, index, asc); // todo toremove?\n      case 'column':\n        return this.sortText(rows, name, index, asc);\n    }\n  }\n\n  numberSort(rows: RowContentModel[], asc: boolean, name: string, index: number): RowContentModel[] {\n    switch (name) {\n      case 'id':\n        return this.sortNumber(rows, name, index, asc);\n      case 'name':\n        return this.sortText(rows, name, index, asc); // todo toremove?\n      case 'createdBy':\n        return this.sortText(rows, name, index, asc); // todo toremove?\n      case 'createdOn':\n        return this.sortDate(rows, name, index, asc); // todo toremove?\n      case 'lastModifiedBy':\n        return this.sortText(rows, name, index, asc); // todo toremove?\n      case 'lastModifiedOn':\n        return this.sortDate(rows, name, index, asc); // todo toremove?\n      case 'taskDtos':\n        return this.sortByArrayLength(rows, name, index, asc);\n      case 'column':\n        return this.sortNumber(rows, name, index, asc);\n    }\n  }\n\n  dateSort(rows: RowContentModel[], asc: boolean, name: string, index: number): RowContentModel[] {\n    switch (name) {\n      case 'id':\n        return this.sortNumber(rows, name, index, asc);\n      case 'name':\n        return this.sortText(rows, name, index, asc);\n      case 'createdBy':\n        return this.sortText(rows, name, index, asc);\n      case 'createdOn':\n        return this.sortDate(rows, name, index, asc); // todo toremove?\n      case 'lastModifiedBy':\n        return this.sortText(rows, name, index, asc);\n      case 'lastModifiedOn':\n        return this.sortDate(rows, name, index, asc); // todo toremove?\n      case 'taskDtos':\n        return this.sortByArrayLength(rows, name, index, asc);\n      case 'column':\n        return this.sortDate(rows, name, index, asc);\n    }\n  }\n\n  sortText(rows: RowContentModel[], field: string, index: number, asc: boolean) {\n    if (field !== 'column') {\n      rows.sort((a, b) => {\n        return a[field].localeCompare(b[field]);\n      });\n    } else {\n      rows.sort((a, b) => {\n        return a.columnValueDtos[index][Object.keys(a.columnValueDtos[index])[0]].value\n          .localeCompare(b.columnValueDtos[index][Object.keys(a.columnValueDtos[index])[0]].value);\n      });\n    }\n    if (!asc) {\n      return rows;\n    } else {\n      return rows.reverse();\n    }\n  }\n\n  sortNumber(rows: RowContentModel[], field: string, index: number, asc: boolean): RowContentModel[] {\n    if (field !== 'column') {\n      rows.sort((a, b) => {\n        return a[field] - b[field];\n      });\n    } else {\n      rows.sort((a, b) => {\n        return parseInt(a.columnValueDtos[index][Object.keys(a.columnValueDtos[index])[0]].value, 0)\n          - parseInt(b.columnValueDtos[index][Object.keys(a.columnValueDtos[index])[0]].value, 0);\n      });\n    }\n    return asc ? rows : rows.reverse();\n  }\n\n  sortByArrayLength(rows: RowContentModel[], field: string, index: number, asc: boolean): RowContentModel[] {\n    rows.sort((a, b) => {\n      return a[field].length - b[field].length;\n    });\n    return asc ? rows : rows.reverse();\n  }\n\n  sortDate(rows: RowContentModel[], field: string, index: number, asc: boolean): RowContentModel[] {\n    if (field !== 'column') {\n      rows.sort((a, b) => {\n        return Date.parse(a[field]) - Date.parse(b[field]);\n      });\n    } else {\n      rows.sort((a, b) => {\n        return Date.parse(a.columnValueDtos[index][Object.keys(a.columnValueDtos[index])[0]].value)\n          - Date.parse(b.columnValueDtos[index][Object.keys(a.columnValueDtos[index])[0]].value);\n      });\n    }\n    return asc ? rows : rows.reverse();\n  }\n}\n","import {RowContentModel, TaskModel} from '../table.model';\nimport {\n  ColumnInfoModel, DescriptionInfoModel, EnumInfoModel, NumberInfoModel, ShortTextInfoModel,\n  TableInfoModel\n} from './table-info.model';\n\nexport class StatisticsService {\n  mapToRowsInfo(rowList: RowContentModel[]): TableInfoModel {\n    const rows: RowContentModel[] = [];\n    const doneRows: RowContentModel[] = [];\n    const undoneRows: RowContentModel[] = [];\n    const columnInfo: ColumnInfoModel = {\n      numberInfo: [],\n      enumInfo: [],\n      dateInfo: [],\n      shortTextInfo: [],\n      descriptionInfo: []\n    };\n    let numberInfoIndex = 0;\n    let enumInfoIndex = 0;\n    let dateInfoIndex = 0;\n    let shortTextIndex = 0;\n    let descriptionInfoIndex = 0;\n\n    rowList.forEach((row: RowContentModel, rowIdx) => {\n      rows.push(row);\n      if (this.containsUndoneTasks(row)) {\n        doneRows.push(row);\n      } else {\n        undoneRows.push(row);\n      }\n      row.columnValueDtos.forEach((value, j) => { // TODO ZASTĄPIć J ARRAY_LENGTH+1  => USUNAC CLEAN ARRAY\n        const string = Object.keys(value)[0];\n        if (string === 'IN') { // TODO if index==0 podstaw do obu (min i max) i zamien <=, >= na <,>\n          if (typeof columnInfo.numberInfo[j] === 'undefined') { // TODO only undefined??\n            columnInfo.numberInfo[j] = {\n              columnNumber: j,\n              sum: 0,\n              avg: 0,\n              min: Number.POSITIVE_INFINITY,\n              max: Number.NEGATIVE_INFINITY\n            };\n          }\n          columnInfo.numberInfo[j].sum += parseFloat(value[Object.keys(value)[0]].value);\n          columnInfo.numberInfo[j].avg += parseFloat(value[Object.keys(value)[0]].value);\n          if (columnInfo.numberInfo[j].min >= parseFloat(value[Object.keys(value)[0]].value)) {\n            columnInfo.numberInfo[j].min = parseFloat(value[Object.keys(value)[0]].value);\n          }\n          if (columnInfo.numberInfo[j].max <= parseFloat(value[Object.keys(value)[0]].value)) {\n            columnInfo.numberInfo[j].max = parseFloat(value[Object.keys(value)[0]].value);\n          }\n          numberInfoIndex++;\n          return;\n        } else if (string === 'EN') {\n          if (typeof columnInfo.enumInfo[j] === 'undefined') { // todo only undefined???\n            columnInfo.enumInfo[j] = [];\n          }\n          let exist = false;\n\n          columnInfo.enumInfo[j].forEach((columnStats: EnumInfoModel, columnInfoIdx) => {\n            if (columnStats.name === value[Object.keys(value)[0]].value) {\n              columnInfo.enumInfo[j][columnInfoIdx].sum++;\n              exist = true;\n            }\n          });\n\n          if (!exist) {\n            columnInfo.enumInfo[j][rowIdx] = {columnNumber: j, name: value[Object.keys(value)[0]].value, sum: 1};\n          }\n\n          enumInfoIndex++;\n          return;\n        } else if (string === 'DT') {\n          if (typeof columnInfo.dateInfo[j] === 'undefined') { // TODO only undefined??\n            columnInfo.dateInfo[j] = {\n              columnNumber: j,\n              min: Date.parse(new Date(8640000000000000).toString()),\n              max: Date.parse(new Date(-8640000000000000).toString())\n            };\n          }\n\n          if (columnInfo.dateInfo[j].min >= Date.parse(value[Object.keys(value)[0]].value)) {\n            columnInfo.dateInfo[j].min = Date.parse(value[Object.keys(value)[0]].value);\n          }\n\n          if (columnInfo.dateInfo[j].max <= Date.parse(value[Object.keys(value)[0]].value)) {\n            columnInfo.dateInfo[j].max = Date.parse(value[Object.keys(value)[0]].value);\n          }\n          dateInfoIndex++;\n          return;\n        } else if (string === 'ST') {\n          if (typeof columnInfo.shortTextInfo[j] === 'undefined') { // TODO only undefined??\n            columnInfo.shortTextInfo[j] = {columnNumber: j, avgLength: 0};\n          }\n\n          columnInfo.shortTextInfo[j].avgLength += value[Object.keys(value)[0]].value.length;\n          shortTextIndex++;\n          return;\n        } else if (string === 'DE') {\n          if (typeof columnInfo.descriptionInfo[j] === 'undefined') { // TODO only undefined??\n            columnInfo.descriptionInfo[j] = {columnNumber: j, avgLength: 0};\n          }\n          columnInfo.descriptionInfo[j].avgLength += value[Object.keys(value)[0]].value.length;\n          descriptionInfoIndex++;\n          return;\n        }\n      });\n    });\n\n    columnInfo.numberInfo.forEach((value: NumberInfoModel, i) => {\n      columnInfo.numberInfo[i]['avg'] = value.avg / rows.length;\n    });\n\n    columnInfo.shortTextInfo.forEach((value: ShortTextInfoModel, i) => {\n      columnInfo.shortTextInfo[i].avgLength = value.avgLength / rows.length;\n    });\n\n    columnInfo.descriptionInfo.forEach((value: DescriptionInfoModel, i) => {\n      columnInfo.descriptionInfo[i].avgLength = value.avgLength / rows.length;\n    });\n\n    return {rows: rows, doneRows: doneRows, undoneRows: undoneRows, columnInfo: StatisticsService.cleanColumnInfo(columnInfo)};\n  }\n\n  static cleanColumnInfo(columnInfo): ColumnInfoModel {\n    const cleanColumnInfo: ColumnInfoModel = {\n      dateInfo: [],\n      shortTextInfo: [],\n      enumInfo: [],\n      numberInfo: [],\n      descriptionInfo: []\n    };\n    cleanColumnInfo.dateInfo = StatisticsService.cleanArray(columnInfo.dateInfo);\n    cleanColumnInfo.shortTextInfo = StatisticsService.cleanArray(columnInfo.shortTextInfo);\n    cleanColumnInfo.enumInfo = StatisticsService.cleanArray(columnInfo.enumInfo);\n    cleanColumnInfo.numberInfo = StatisticsService.cleanArray(columnInfo.numberInfo);\n    cleanColumnInfo.descriptionInfo = StatisticsService.cleanArray(columnInfo.descriptionInfo);\n    return cleanColumnInfo;\n  }\n\n  static cleanArray(actual) {\n    const newArray = [];\n    for (let i = 0; i < actual.length; i++) {\n      if (typeof actual[i] !== 'undefined') { // TODO only undefined??\n        newArray.push(actual[i]);\n      }\n    }\n    return newArray;\n  }\n\n\n  containsUndoneTasks(row: RowContentModel) {\n    let rowStatus = true;\n    row.taskDtos.forEach((task: TaskModel) => {\n      if (task.status.toString() !== 'DONE') {\n        rowStatus = false;\n      }\n    });\n    return rowStatus;\n  }\n\n  mapToTaskInfo(rows: RowContentModel[]): { tasks, unassignedTasks, assignedTasks, inProgressTasks, doneTasks } {\n    const tasks: TaskModel[] = [];\n    const unassignedTasks: TaskModel[] = [];\n    const assignedTasks: TaskModel[] = [];\n    const inProgressTasks: TaskModel[] = [];\n    const doneTasks: TaskModel[] = [];\n\n    rows.forEach((row) => {\n      row.taskDtos.forEach((task: TaskModel) => {\n        switch (task.status.toString()) {\n          case ('UNASSIGNED'):\n            tasks.push(task);\n            unassignedTasks.push(task);\n            return;\n          case ('ASSIGNED'):\n            tasks.push(task);\n            assignedTasks.push(task);\n            return;\n          case ('IN_PROGRESS'):\n            tasks.push(task);\n            inProgressTasks.push(task);\n            return;\n          case ('DONE'):\n            tasks.push(task);\n            doneTasks.push(task);\n            return;\n          default:\n            throw new Error('Unknown task status: ' + task.status.toString());\n        }\n      });\n    });\n    return {\n      tasks: tasks,\n      unassignedTasks: unassignedTasks,\n      assignedTasks: assignedTasks,\n      inProgressTasks: inProgressTasks,\n      doneTasks: doneTasks\n    };\n  }\n\n}\n","import {Store} from '@ngrx/store';\nimport {Injectable} from '@angular/core';\nimport * as fromAppReducers from './store/app.reducers';\nimport * as TableActions from './store/table/tables.actions';\nimport * as UserActions from './store/user/users.actions';\nimport * as ChatActions from './store/chat/chat.actions';\nimport * as TaskActions from './store/task/tasks.actions';\nimport {AuthCookie} from './auth-cookies-handler';\nimport {TaskInfoService} from './socket/task-info.service';\n\n\n@Injectable()\nexport class StoreResetService {\n\n  constructor(private store: Store<fromAppReducers.AppState>,\n              private cookie: AuthCookie,\n              private ws: TaskInfoService) {\n  }\n\n  public resetStore() {\n    this.ws.stompClient.disconnect();\n    this.store.dispatch(new TableActions.ResetStore());\n    this.store.dispatch(new UserActions.ResetStore());\n    this.store.dispatch(new ChatActions.ResetStore());\n    this.store.dispatch(new TaskActions.ResetStore());\n    AuthCookie.deleteAuth();\n  }\n}\n","import {Action} from '@ngrx/store';\nimport {ChatMessageModel} from '../../chat-message.model';\n\nexport const APPEND_CHAT_WITH_MESSAGE = 'APPEND_CHAT_WITH_MESSAGE';\nexport const SET_ACTIVE_USERS = 'SET_ACTIVE_USERS';\nexport const RESET_STORE = 'RESET_STORE';\n\nexport class AppendChatWithMessage implements Action {\n  readonly type = APPEND_CHAT_WITH_MESSAGE;\n\n  constructor(public payload: ChatMessageModel) {\n  }\n}\n\nexport class SetActiveWsUsers implements Action {\n  readonly type = SET_ACTIVE_USERS;\n\n  constructor(public payload: string[]) {\n  }\n}\n\nexport class ResetStore implements Action {\n  readonly type = RESET_STORE;\n\n  constructor() {\n  }\n}\n\nexport type ChatActions =\n  AppendChatWithMessage |\n  SetActiveWsUsers |\n  ResetStore;\n","import * as ChatActions from './chat.actions';\nimport {ChatMessageModel} from '../../chat-message.model';\n\nexport interface ChatState {\n  chatContent: ChatMessageModel[];\n  activeUsers: string[];\n}\n\nconst initialChatState: ChatState = {\n  chatContent: [],\n  activeUsers: []\n};\n\nexport function chatReducers(state: ChatState = initialChatState, action: ChatActions.ChatActions) {\n  switch (action.type) {\n    case ChatActions.APPEND_CHAT_WITH_MESSAGE:\n      return {\n        ...state,\n        chatContent: [...state.chatContent, action.payload]\n      };\n    case ChatActions.SET_ACTIVE_USERS:\n      return {\n        ...state,\n        activeUsers: [...action.payload]\n      };\n    case ChatActions.RESET_STORE:\n      return {\n        ...initialChatState,\n      };\n    default:\n      return state;\n  }\n}\n","import {Action} from '@ngrx/store';\n\nexport const SET_SELECTED_TABLE_NAME = 'SET_SELECTED_TABLE_NAME';\n\nexport class SetSelectedTableName implements Action {\n  readonly type = SET_SELECTED_TABLE_NAME;\n\n  constructor(public payload: string) {\n  }\n}\n\nexport type StatisticsActions = SetSelectedTableName;\n","import * as StatisticsActions from './statistics.actions';\n\nexport interface StatisticsState {\n  selectedTableName: string;\n}\n\nconst initialStatisticState: StatisticsState = {\n  selectedTableName: null\n};\n\nexport function statisticsReducers(state: StatisticsState = initialStatisticState, action: StatisticsActions.StatisticsActions) {\n  switch (action.type) {\n    case StatisticsActions.SET_SELECTED_TABLE_NAME:\n      return {\n        ...state,\n        selectedTableName: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import {Action} from '@ngrx/store';\nimport {ExtendedFilterModel, RowContentModel, TableDefinitionModel, TaskModel} from '../../table.model';\nimport {UserModel} from '../../../user/user.model';\nimport {SortModel} from '../../sort/sort.model';\n\nexport const RESET_STORE = 'RESET_STORE';\n\nexport const ADD_ROW = 'ADD_ROW';\nexport const ADD_TASK = 'ADD_TASK';\nexport const SHOW_ROW = 'SHOW_ROW';\nexport const UPDATE_ROW = 'UPDATE_ROW';\nexport const EDIT_ROW_MODE = 'EDIT_ROW_MODE';\nexport const EDITED_ROW = 'EDITED_ROW';\nexport const DELETE_ROW = 'DELETE_ROW';\n\nexport const SET_ROWS = 'SET_ROWS';\n\nexport const SET_DEFINITION = 'SET_DEFINITION';\n\nexport const SET_NAMES = 'SET_NAMES';\nexport const ADD_NAMES = 'ADD_NAMES';\n\nexport const NEW_ROW_MODE = 'NEW_ROW_MODE';\n\nexport const SET_FILTER = 'SET_FILTER';\nexport const EXTENDED_FILTER_MODE = 'EXTENDED_FILTER_MODE';\nexport const SET_EXTENDED_TABLE_VIEW = 'SET_EXTENDED_TABLE_VIEW';\nexport const SET_EXTENDED_ROW_VIEW = 'SET_EXTENDED_ROW_VIEW';\nexport const RUN_EXTENDED_FILTER = 'RUN_EXTENDED_FILTER';\nexport const SET_EXTENDED_FILTER = 'SET_EXTENDED_FILTER';\nexport const SET_EXTENDED_FILTER_SELECT = 'SET_EXTENDED_FILTER_SELECT';\n\nexport const SET_SORT_CONTENT = 'SET_SORT_CONTENT';\n\nexport const SWITCH_TABLE_RESET = 'SWITCH_TABLE_RESET';\n\nexport const SET_ROW_TASKS = 'SET_ROW_TASKS';\nexport const SET_TABLE_USERS = 'SET_TABLE_USERS';\nexport const UPDATE_ROWS_TASK = 'UPDATE_ROWS_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const DELETE_ROWS_TASK = 'DELETE_ROWS_TASK';\n\n\nexport class SetNewRowModeAction implements Action {\n  readonly type = NEW_ROW_MODE;\n\n  constructor(public payload: boolean) {\n  }\n}\n\nexport class SetSortContent implements Action {\n  readonly type = SET_SORT_CONTENT;\n\n  constructor(public payload: SortModel) {\n  }\n}\n\nexport class AddRowAction implements Action {\n  readonly type = ADD_ROW;\n\n  constructor(public payload: RowContentModel) {\n  }\n}\n\nexport class ShowRowDetailsAction implements Action {\n  readonly type = SHOW_ROW;\n\n  constructor(public payload: RowContentModel) {\n  }\n}\n\nexport class UpdateRowAction implements Action {\n  readonly type = UPDATE_ROW;\n\n  constructor(public payload: RowContentModel) {\n  }\n}\n\nexport class SetRowsAction implements Action {\n  readonly type = SET_ROWS;\n\n  constructor(public payload: RowContentModel[]) {\n  }\n}\n\nexport class SetTableDefinitionAction implements Action {\n  readonly type = SET_DEFINITION;\n\n  constructor(public payload: TableDefinitionModel) {\n  }\n}\n\nexport class SetNamesAction implements Action {\n  readonly type = SET_NAMES;\n\n  constructor(public payload: string[]) {\n  }\n}\n\nexport class AddNamesAction implements Action {\n  readonly type = ADD_NAMES;\n\n  constructor(public payload: string[]) {\n  }\n}\n\nexport class SetEditRowMode implements Action {\n  readonly type = EDIT_ROW_MODE;\n\n  constructor(public payload: boolean) {\n  }\n}\n\nexport class SetEditedRow implements Action {\n  readonly type = EDITED_ROW;\n\n  constructor(public payload: RowContentModel) {\n  }\n}\n\nexport class ResetStore implements Action {\n  readonly type = RESET_STORE;\n\n  constructor() {\n  }\n}\n\nexport class TableFilter implements Action {\n  readonly type = SET_FILTER;\n\n  constructor(public payload: string) {\n  }\n}\n\nexport class SetExtendedFilterMode implements Action {\n  readonly type = EXTENDED_FILTER_MODE;\n\n  constructor() {\n  }\n}\n\nexport class RunExtendedFilter implements Action {\n  readonly type = RUN_EXTENDED_FILTER;\n\n  constructor() {\n  }\n}\n\nexport class SetExtendedFilterSelect implements Action {\n  readonly type = SET_EXTENDED_FILTER_SELECT;\n\n  constructor(public payload: boolean) {\n  }\n}\n\nexport class SetExtendedFilter implements Action {\n  readonly type = SET_EXTENDED_FILTER;\n\n  constructor(public payload: ExtendedFilterModel) {\n  }\n}\n\nexport class SwitchTableReset implements Action {\n  readonly type = SWITCH_TABLE_RESET;\n\n  constructor() {\n  }\n}\n\nexport class SetRowsTasksAction implements Action {\n  readonly type = SET_ROW_TASKS;\n\n  constructor(public payload: { tasks: TaskModel[], rowId } ) {\n  }\n}\n\nexport class SetTableUsers implements Action {\n  readonly type = SET_TABLE_USERS;\n\n  constructor(public payload: UserModel[] ) {\n  }\n}\n\nexport class UpdateRowsTaskAction implements Action {\n  readonly type = UPDATE_ROWS_TASK;\n\n  constructor(public payload: { rowId: number, task: TaskModel } ) {\n  }\n}\n\nexport class UpdateTaskAction implements Action {\n  readonly type = UPDATE_TASK;\n\n  constructor(public payload: TaskModel ) {\n  }\n}\n\nexport class DeleteTask implements Action {\n  readonly type = DELETE_ROWS_TASK;\n\n  constructor(public payload: { taskId: number, rowId: number } ) {\n  }\n}\n\nexport class SetExtendedTableView implements Action {\n  readonly type = SET_EXTENDED_TABLE_VIEW;\n\n  constructor(public payload: boolean) {\n  }\n}\n\nexport class SetExtendedRowView implements Action {\n  readonly type = SET_EXTENDED_ROW_VIEW;\n\n  constructor(public payload: boolean) {\n  }\n}\n\nexport class DeleteRow implements Action {\n  readonly type = DELETE_ROW;\n\n  constructor(public payload: number) {\n  }\n}\n\nexport class AddTaskAction implements Action {\n  readonly type = ADD_TASK;\n\n  constructor(public payload: {task: TaskModel, rowId: number}) {\n  }\n}\n\nexport type TableActions =\n  AddRowAction |\n  SetNamesAction |\n  AddNamesAction |\n  SetRowsAction |\n  SetTableDefinitionAction |\n  SetNewRowModeAction |\n  UpdateRowAction |\n  ResetStore |\n  ShowRowDetailsAction |\n  SetEditRowMode |\n  SetEditedRow |\n  TableFilter |\n  SetExtendedFilterMode |\n  RunExtendedFilter |\n  SetExtendedFilter |\n  SetExtendedFilterSelect |\n  SwitchTableReset|\n  SetRowsTasksAction |\n  SetTableUsers |\n  UpdateRowsTaskAction |\n  UpdateTaskAction |\n  DeleteTask |\n  SetExtendedTableView |\n  SetExtendedRowView |\n  SetSortContent |\n  DeleteRow |\n  AddTaskAction;\n","import * as TableActions from './tables.actions';\nimport {ExtendedFilterModel, RowContentModel, TableDefinitionModel, TaskModel} from '../../table.model';\nimport {UserModel} from '../../../user/user.model';\nimport {SortModel} from '../../sort/sort.model';\n\nexport interface TableState {\n  editRowMode: boolean;\n  newRowMode: boolean;\n  editedRow: RowContentModel;\n  tableDefinition: TableDefinitionModel;\n  tableContent: RowContentModel[];\n  tableUsers: UserModel[];\n  tablesNames: string[];\n  tableFilter: string;\n  extendedFilterMode: boolean;\n  extendedFilterAction: boolean;\n  extendedFilterContent: ExtendedFilterModel;\n  filterSelect: boolean;\n  extendedTableView: boolean;\n  extendedRowView: boolean;\n  sortContent: SortModel;\n}\n\nconst initialTableState: TableState = {\n  editRowMode: false,\n  newRowMode: false,\n  editedRow: null,\n  tableDefinition: null,\n  tableContent: [],\n  tableUsers: [],\n  tablesNames: [],\n  tableFilter: '',\n  extendedFilterMode: false,\n  extendedFilterAction: false,\n  extendedFilterContent: null,\n  filterSelect: false,\n  extendedTableView: false,\n  extendedRowView: false,\n  sortContent: {\n    name: '',\n    index: 0,\n    dataType: '',\n    asc: true\n  }\n};\n\nexport function tablesReducers(state: TableState = initialTableState, action: TableActions.TableActions) {\n\n  switch (action.type) {\n    case TableActions.ADD_ROW:\n      return {\n        ...state,\n        tableContent: [...state.tableContent, action.payload]\n      };\n    case TableActions.UPDATE_ROW:\n      return {\n        ...state,\n        tableContent: [...updateRow(state.tableContent, action.payload)]\n      };\n    case TableActions.SET_ROWS:\n      return {\n        ...state,\n        tableContent: [...action.payload]\n      };\n    case TableActions.SET_NAMES:\n      return {\n        ...state,\n        tablesNames: [...action.payload]\n      };\n    case TableActions.ADD_NAMES:\n      return {\n        ...state,\n        tablesNames: [...state.tablesNames, ...action.payload]\n      };\n    case TableActions.SET_DEFINITION:\n      return {\n        ...state,\n        tableDefinition: [action.payload]\n      };\n    case TableActions.EDIT_ROW_MODE:\n      return {\n        ...state,\n        editRowMode: action.payload\n      };\n    case TableActions.NEW_ROW_MODE:\n      return {\n        ...state,\n        newRowMode: action.payload\n      };\n    case TableActions.EDITED_ROW:\n      return {\n        ...state,\n        editedRow: action.payload\n      };\n    case TableActions.RESET_STORE:\n      return {\n        ...initialTableState\n      };\n    case TableActions.SET_FILTER:\n      return {\n        ...state,\n        tableFilter: action.payload\n      };\n    case TableActions.EXTENDED_FILTER_MODE:\n      return {\n        ...state,\n        extendedFilterMode: !state.extendedFilterMode\n      };\n    case TableActions.RUN_EXTENDED_FILTER:\n      return {\n        ...state,\n        extendedFilterAction: !state.extendedFilterAction\n      };\n    case TableActions.SET_EXTENDED_FILTER:\n      return {\n        ...state,\n        extendedFilterContent: action.payload\n      };\n    case TableActions.SET_EXTENDED_FILTER_SELECT:\n      return {\n        ...state,\n        filterSelect: action.payload\n      };\n    case TableActions.SWITCH_TABLE_RESET:\n      return {\n        ...initialTableState,\n        tablesNames: state.tablesNames,\n      };\n    case TableActions.SET_ROW_TASKS:\n      return {\n        ...state,\n        tableContent: [...setRowTasks(state.tableContent, action.payload)]\n      };\n    case TableActions.SET_TABLE_USERS:\n      return {\n        ...state,\n        tableUsers: [...action.payload]\n      };\n    case TableActions.UPDATE_ROWS_TASK:\n      return {\n        ...state,\n        tableContent: [...updateTaskUsers(state.tableContent, action.payload)]\n      };\n    case TableActions.UPDATE_TASK:\n      return {\n        ...state,\n        tableContent: [...updateTask(state.tableContent, action.payload)]\n      };\n    case TableActions.DELETE_ROWS_TASK:\n      return {\n        ...state,\n        tableContent: [...deleteRowsTask(state.tableContent, action.payload)]\n      };\n    case TableActions.SET_EXTENDED_TABLE_VIEW:\n      return {\n        ...state,\n        extendedTableView: action.payload\n      };\n    case TableActions.SET_EXTENDED_ROW_VIEW:\n      return {\n        ...state,\n        extendedRowView: action.payload\n      };\n    case TableActions.SET_SORT_CONTENT:\n      return {\n        ...state,\n        sortContent: action.payload\n      };\n    case TableActions.DELETE_ROW:\n      return {\n        ...state,\n        tableContent: [...deleteRow(state.tableContent, action.payload)],\n        editRowMode: initialTableState.editRowMode,\n        editedRow: initialTableState.editedRow,\n      };\n      case TableActions.ADD_TASK:\n      return {\n        ...state,\n        tableContent: [...addRowTask(state.tableContent, action.payload)]\n      };\n    default:\n      return state;\n  }\n}\n\nfunction updateTask(tableContent: RowContentModel[], payload: TaskModel) {\n  tableContent.forEach((row: RowContentModel, i) => {\n    row.taskDtos.forEach((taskDto: TaskModel, j) => {\n      if (taskDto.id === payload.id) {\n        tableContent[i].taskDtos[j] = payload;\n      }\n    });\n  });\n  return tableContent;\n}\n\n\nfunction deleteRow(tableContent: RowContentModel[], rowId: number) {\n  tableContent.forEach((row: RowContentModel, i) => {\n    if (row.id === rowId) {\n      tableContent.splice(i, 1);\n    }\n  });\n  return tableContent;\n}\n\nfunction deleteRowsTask(tableContent: RowContentModel[], payload: { rowId: number, taskId: number }): RowContentModel[] {\n  tableContent.forEach((row: RowContentModel, i) => {\n    if (row.id === payload.rowId) {\n      row.taskDtos.forEach((taskDto: TaskModel, j) => {\n        if (taskDto.id === payload.taskId) {\n          tableContent[i].taskDtos.splice(j, 1);\n        }\n      });\n    }\n  });\n  return tableContent;\n}\n\nfunction updateTaskUsers(tableContent: RowContentModel[], payload: { rowId: number, task: TaskModel }): RowContentModel[] {\n  tableContent.forEach((row: RowContentModel, i) => {\n    if (row.id === payload.rowId) {\n      row.taskDtos.forEach((taskDto: TaskModel, j) => {\n        if (taskDto.id === payload.task.id) {\n          tableContent[i].taskDtos[j].userNames = payload.task.userNames;\n        }\n      });\n    }\n  });\n  return tableContent;\n}\n\n\nfunction setRowTasks(rows: RowContentModel[], data: { tasks: TaskModel[], rowId }): RowContentModel[] {\n  rows.forEach((row) => {\n    if (row.id === data.rowId) {\n      row.taskDtos = data.tasks;\n    }\n  });\n  return rows;\n}\n\nfunction addRowTask(rows: RowContentModel[], data: { task: TaskModel, rowId }): RowContentModel[] {\n  rows.forEach((row) => {\n    if (row.id === data.rowId) {\n      row.taskDtos = [...row.taskDtos, data.task];\n    }\n  });\n  return rows;\n}\n\n// function deleteItemByName(array: NameModel[], itemName: string): Array<NameModel> {// TODO GENERIC TYPE FUNCTION???  r.216/255 REMOVE?\n//   array.forEach((arrayItem, i) => {\n//     if (arrayItem.name === itemName) {\n//       array.splice(i, 1);\n//     }\n//   });\n//   return array;\n// }\n//\n// function deleteItemByUsername(array: UsernameModel[], itemName: string) { // TODO REMOVE?\n//   array.forEach((arrayItem, i) => {\n//     if (arrayItem.username === itemName) {\n//       array.splice(i, 1);\n//     }\n//   });\n//   return array;\n// }\n\n\nfunction updateRow(rows: RowContentModel[], updatedRow: RowContentModel): RowContentModel[] {\n  rows.forEach((row, i) => {\n    if (row.id === updatedRow.id) {\n      rows[i] = updatedRow;\n    }\n  });\n  return rows;\n}\n\n// function updateRoleUsers(roles: RoleModel[], newRole: RoleModel): RoleModel[] { // TODO remove?\n//   roles.forEach((role) => {\n//     if (role.name === newRole.name) {\n//       role.userDtos = newRole.userDtos;\n//     }\n//   });\n//   return roles;\n// }\n//\n// function updateUsersRoles(users: UserModel[], newUser: UserModel): UserModel[] {// TODO remove?\n//   users.forEach((user, i) => {\n//     if (user.username === newUser.username) {\n//       users[i].roleNames = newUser.roleNames;\n//     }\n//   });\n//   return users;\n// }\n//\n// interface NameModel { // TODO remove?\n//   name: string;\n// }\n//\n// interface UsernameModel { // TODO remove?\n//   username: string;\n// }\n","import {Action} from '@ngrx/store';\nimport {TaskModel} from '../../table.model';\n\nexport const SET_TASK_DETAILS_MODE = 'SET_TASK_DETAILS_MODE';\nexport const SET_SHOWED_TASK = 'SET_SHOWED_TASK';\nexport const ON_DELETE_TASK = 'ON_DELETE_TASK';\nexport const RESET_STORE = 'RESET_STORE';\n\nexport class SetTaskDetailsModeAction implements Action {\n  readonly type = SET_TASK_DETAILS_MODE;\n\n  constructor(public payload: boolean) {\n  }\n}\n\nexport class SetShowedTaskAction implements Action {\n  readonly type = SET_SHOWED_TASK;\n\n  constructor(public payload: TaskModel) {\n  }\n}\n\nexport class OnDeleteTask implements Action {\n  readonly type = ON_DELETE_TASK;\n\n  constructor(public payload: Number) {\n  }\n}\n\nexport class ResetStore implements Action {\n  readonly type = RESET_STORE;\n\n  constructor() {\n  }\n}\n\nexport type TaskActions =\n  SetTaskDetailsModeAction |\n  SetShowedTaskAction |\n  OnDeleteTask |\n  ResetStore;\n","import * as TaskActions from './tasks.actions';\nimport {TaskModel} from '../../table.model';\n\nexport interface TaskState {\n  taskDetailsMode: boolean;\n  showedTask: TaskModel;\n}\n\nconst initialTaskState: TaskState = {\n  taskDetailsMode: false,\n  showedTask: null\n};\n\nexport function tasksReducers(state: TaskState = initialTaskState, action: TaskActions.TaskActions) {\n  switch (action.type) {\n    case TaskActions.SET_TASK_DETAILS_MODE:\n      return {\n        ...state,\n        taskDetailsMode: action.payload\n      };\n    case TaskActions.SET_SHOWED_TASK:\n      return {\n        ...state,\n        showedTask: action.payload\n      };\n    case TaskActions.ON_DELETE_TASK:\n      state.taskDetailsMode = false;\n      state.showedTask = null;\n      return {\n        state\n      };\n    case TaskActions.RESET_STORE:\n      return {\n        ...initialTaskState\n      };\n    default:\n      return state;\n  }\n}\n","import {Action} from '@ngrx/store';\nimport {UserModel} from '../../../user/user.model';\nimport {RoleModel} from '../../../roles/role.model';\nimport {Token} from '../../auth.model';\nimport {Client} from 'stompjs/lib/stomp.js';\nimport {TaskModel} from '../../table.model';\n\nexport const SET_NEW_USER_MODE = 'SET_NEW_USER_MODE';\nexport const SET_USERS = 'SET_USERS';\nexport const ADD_USER = 'ADD_USER';\n\nexport const DELETE_USER = 'DELETE_USER';\nexport const ADD_ROLE_TO_USER = 'ADD_ROLE_TO_USER';\nexport const REMOVE_ROLE_FROM_USER = 'REMOVE_ROLE_FROM_USER';\nexport const SET_CURRENT_USER_ROLENAMES = 'SET_CURRENT_USER_ROLENAMES';\n\nexport const SET_NEW_ROLE_MODE = 'SET_NEW_ROLE_MODE';\nexport const SET_ROLES = 'SET_ROLES';\nexport const ADD_ROLE = 'ADD_ROLE';\nexport const DELETE_ROLE = 'DELETE_ROLE';\nexport const REMOVE_USER_FROM_ROLE = 'REMOVE_USER_FROM_ROLE';\nexport const ADD_USER_TO_ROLE = 'ADD_USER_TO_ROLE';\n\nexport const SET_TOKEN = 'SET_TOKEN';\nexport const DELETE_TOKEN = 'DELETE_TOKEN';\n\nexport const DELETE_CURRENT_USER = 'DELETE_CURRENT_USER';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport const SET_CURRENT_USER_DETAILS = 'SET_CURRENT_USER_DETAILS';\nexport const SWITCH_TABLE_RESET = 'SWITCH_TABLE_RESET';\n\nexport const SET_NEW_WEB_SOCKET_CLIENT = 'SET_NEW_WEB_SOCKET_CLIENT';\nexport const SET_TASK_INFO = 'SET_TASK_INFO';\n\nexport const RESET_STORE = 'RESET_STORE';\n\nexport const SET_LOGIN_FAILURE_INFO = 'SET_LOGIN_FAILURE_INFO';\nexport const SET_LOGOUT_INFO = 'SET_LOGOUT_INFO';\n\nexport const SET_USER_DISPLAYED_TASK = 'SET_USER_DISPLAYED_TASK';\nexport const SET_SELECTED_USER = 'SET_SELECTED_USER';\n\nexport const UPDATE_TASK = 'UPDATE_TASK';\n\n\nexport class DeleteUserAction implements Action {\n  readonly type = DELETE_USER;\n\n  constructor(public payload: string) {\n  }\n}\n\nexport class SetNewUserModeAction implements Action {\n  readonly type = SET_NEW_USER_MODE;\n\n  constructor(public payload: boolean) {\n  }\n}\n\nexport class SetUsersAction implements Action {\n  readonly type = SET_USERS;\n\n  constructor(public payload: UserModel[]) {\n  }\n}\n\nexport class AddUserAction implements Action {\n  readonly type = ADD_USER;\n\n  constructor(public payload: UserModel) {\n  }\n}\n\n\nexport class AddUserToRole implements Action {\n  readonly type = ADD_USER_TO_ROLE;\n\n  constructor(public payload: RoleModel) {\n  }\n}\n\nexport class RemoveUserFromRole implements Action {\n  readonly type = REMOVE_USER_FROM_ROLE;\n\n  constructor(public payload: RoleModel) {\n  }\n}\n\nexport class SetCurrentUserRolenames implements Action {\n  readonly type = SET_CURRENT_USER_ROLENAMES;\n\n  constructor(public payload: string[]) {\n  }\n}\n\nexport class SetTokenAction implements Action {\n  readonly type = SET_TOKEN;\n\n  constructor(public payload: Token) {\n  }\n}\n\nexport class DeleteTokenAction implements Action {\n  readonly type = DELETE_TOKEN;\n\n  constructor() {\n  }\n}\n\n\nexport class RemoveRoleFromUser implements Action {\n  readonly type = REMOVE_ROLE_FROM_USER;\n\n  constructor(public payload: UserModel) {\n  }\n}\n\n\nexport class SetCurrentUserAction implements Action {\n  readonly type = SET_CURRENT_USER;\n\n  constructor(public payload: string) {\n  }\n}\n\nexport class DeleteCurrentUserAction implements Action {\n  readonly type = DELETE_CURRENT_USER;\n\n  constructor() {\n  }\n}\n\nexport class SetNewRoleModeAction implements Action {\n  readonly type = SET_NEW_ROLE_MODE;\n\n  constructor(public payload: boolean) {\n  }\n}\n\nexport class AddRoleAction implements Action {\n  readonly type = ADD_ROLE;\n\n  constructor(public payload: RoleModel) {\n  }\n}\n\nexport class DeleteRoleAction implements Action {\n  readonly type = DELETE_ROLE;\n\n  constructor(public payload: string) {\n  }\n}\n\n\nexport class SetRolesAction implements Action {\n  readonly type = SET_ROLES;\n\n  constructor(public payload: RoleModel[]) {\n  }\n}\n\nexport class AddRoleToUser implements Action {\n  readonly type = ADD_ROLE_TO_USER;\n\n  constructor(public payload: UserModel) {\n  }\n}\n\nexport class SwitchTableReset implements Action {\n  readonly type = SWITCH_TABLE_RESET;\n\n  constructor() {\n  }\n}\n\nexport class SetNewWebSocketClient implements Action {\n  readonly type = SET_NEW_WEB_SOCKET_CLIENT;\n\n  constructor(public payload: Client) {\n  }\n}\n\nexport class SetTaskInfoAction implements Action {\n  readonly type = SET_TASK_INFO;\n\n  constructor(public payload: boolean) {\n  }\n}\n\nexport class SetLoginFailureInfo implements Action {\n  readonly type = SET_LOGIN_FAILURE_INFO;\n\n  constructor(public payload: string) {\n  }\n}\n\nexport class SetLogoutInfo implements Action {\n  readonly type = SET_LOGOUT_INFO;\n\n  constructor(public payload: string) {\n  }\n}\n\nexport class ResetStore implements Action {\n  readonly type = RESET_STORE;\n\n  constructor() {\n  }\n}\n\nexport class SetUserDisplayedTask implements Action {\n  readonly type = SET_USER_DISPLAYED_TASK;\n\n  constructor(public payload: TaskModel) {\n  }\n}\n\nexport class SetSelectedUser implements Action {\n  readonly type = SET_SELECTED_USER;\n\n  constructor(public payload: UserModel) {\n  }\n}\n\nexport class UpdateTaskAction implements Action {\n  readonly type = UPDATE_TASK;\n\n  constructor(public payload: TaskModel) {\n  }\n}\n\nexport class SetCurrntUserDetails implements Action {\n  readonly type = SET_CURRENT_USER_DETAILS;\n\n  constructor(public payload: UserModel) {\n  }\n}\n\n\nexport type UserActions =\n  SetCurrentUserRolenames |\n  DeleteUserAction |\n  SetNewRoleModeAction |\n  SetNewUserModeAction |\n  SetUsersAction |\n  AddUserAction |\n  SetRolesAction |\n  AddRoleAction |\n  DeleteRoleAction |\n  AddRoleToUser |\n  RemoveRoleFromUser |\n  AddUserToRole |\n  RemoveUserFromRole |\n  SetTokenAction |\n  DeleteTokenAction |\n  SetCurrentUserAction |\n  DeleteCurrentUserAction |\n  SwitchTableReset |\n  SetNewWebSocketClient |\n  SetTaskInfoAction |\n  ResetStore |\n  SetLoginFailureInfo |\n  SetLogoutInfo |\n  SetUserDisplayedTask |\n  SetSelectedUser |\n  UpdateTaskAction |\n  SetCurrntUserDetails;\n\n","import * as UserActions from './users.actions';\nimport {TaskModel} from '../../table.model';\nimport {UserModel} from '../../../user/user.model';\nimport {RoleModel} from '../../../roles/role.model';\nimport {Token} from '../../auth.model';\nimport {Client} from 'stompjs/lib/stomp.js';\n\n\nexport interface UserState {\n  newTaskInfo: boolean;\n  currentSocketClient: Client;\n  currentUser: string;\n  currentUserDetails: UserModel;\n  currentUserRoles: string[];\n  token: Token;\n  users: UserModel[];\n  newUserMode: boolean;\n  roles: RoleModel[];\n  newRoleMode: boolean;\n  loginFailureInfo: string;\n  logoutInfo: string;\n  selectedUser: UserModel;\n  userDisplayedTask: TaskModel;\n}\n\nconst initialUserState: UserState = {\n  newTaskInfo: false,\n  currentSocketClient: null,\n  currentUser: '',\n  currentUserDetails: null,\n  currentUserRoles: [],\n  token: null,\n  users: [],\n  newUserMode: false,\n  roles: [],\n  newRoleMode: false,\n  loginFailureInfo: '',\n  logoutInfo: '',\n  selectedUser: null,\n  userDisplayedTask: null\n};\n\nexport function usersReducers(state: UserState = initialUserState, action: UserActions.UserActions) {\n  switch (action.type) {\n    case UserActions.SET_NEW_USER_MODE:\n      return {\n        ...state,\n        newUserMode: action.payload\n      };\n    case UserActions.SET_NEW_ROLE_MODE:\n      return {\n        ...state,\n        newRoleMode: action.payload\n      };\n    case UserActions.ADD_ROLE:\n      return {\n        ...state,\n        roles: [...state.roles, action.payload]\n      };\n    case UserActions.DELETE_ROLE:\n      return {\n        ...state,\n        roles: [...deleteItemByName(state.roles, action.payload)]\n      };\n    case UserActions.DELETE_USER:\n      return {\n        ...state,\n        users: [...deleteItemByUsername(state.users, action.payload)]\n      };\n    case UserActions.SET_USERS:\n      return {\n        ...state,\n        users: [...action.payload]\n      };\n    case UserActions.ADD_USER:\n      return {\n        ...state,\n        users: [...state.users, action.payload]\n      };\n    case UserActions.SET_ROLES:\n      return {\n        ...state,\n        roles: [...action.payload]\n      };\n    case UserActions.ADD_ROLE_TO_USER:\n      return {\n        ...state,\n        users: [...updateUsersRoles(state.users, action.payload)]\n      };\n    case UserActions.REMOVE_ROLE_FROM_USER:\n      return {\n        ...state,\n        users: [...updateUsersRoles(state.users, action.payload)]\n      };\n    case UserActions.REMOVE_USER_FROM_ROLE:\n      return {\n        ...state,\n        roles: [...updateRoleUsers(state.roles, action.payload)]\n      };\n    case UserActions.SET_CURRENT_USER_ROLENAMES:\n      return {\n        ...state,\n        currentUserRoles: action.payload\n      };\n\n    case UserActions.DELETE_TOKEN:\n      return {\n        ...state,\n        token: null\n      };\n    case UserActions.SET_TOKEN:\n      return {\n        ...state,\n        token: action.payload\n      };\n    case UserActions.DELETE_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: ''\n      };\n    case UserActions.SET_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: action.payload\n      };\n    case UserActions.SET_CURRENT_USER_DETAILS:\n      return {\n        ...state,\n        currentUserDetails: action.payload\n      };\n    case UserActions.SWITCH_TABLE_RESET:\n      return {\n        ...initialUserState,\n        currentUser: state.currentUser,\n        currentUserRoles: state.currentUserRoles,\n        token: state.token,\n      };\n    case UserActions.SET_NEW_WEB_SOCKET_CLIENT:\n      return {\n        ...state,\n        currentSocketClient: action.payload\n      };\n    case UserActions.SET_TASK_INFO:\n      return {\n        ...state,\n        newTaskInfo: action.payload\n      };\n    case UserActions.SET_LOGIN_FAILURE_INFO:\n      return {\n        ...state,\n        loginFailureInfo: action.payload,\n        logoutInfo: initialUserState.logoutInfo\n      };\n    case UserActions.SET_LOGOUT_INFO:\n      return {\n        ...state,\n        loginFailureInfo: initialUserState.loginFailureInfo,\n        logoutInfo: action.payload\n      };\n    case UserActions.SET_SELECTED_USER:\n      return {\n        ...state,\n        selectedUser: action.payload\n      };\n    case UserActions.UPDATE_TASK:\n      return {\n        ...state,\n        users: [...updateUsersTask(state.users, action.payload)],\n        selectedUser: updateUserTask(state.selectedUser, action.payload),\n        userDisplayedTask: null\n      };\n    case UserActions.SET_USER_DISPLAYED_TASK:\n      return {\n        ...state,\n        userDisplayedTask: action.payload\n      };\n    case UserActions.RESET_STORE:\n      return {\n        ...initialUserState\n      };\n    default:\n      return state;\n  }\n}\n\n\nfunction updateUsersTask(usersToUpdate: UserModel[], task: TaskModel): UserModel[] {\n  const users = usersToUpdate;\n  users.forEach((user: UserModel, i) => {\n    users[i] = updateUserTask(user, task);\n  });\n  return users;\n}\n\nfunction updateUserTask(userToUpdate: UserModel, task: TaskModel): UserModel {\n  const user = userToUpdate;\n  user.taskDtos.forEach((taskToUpdate: TaskModel, i) => {\n    if (taskToUpdate.id === task.id) {\n      user.taskDtos[i] = task;\n    }\n  });\n  return user;\n}\n\nfunction deleteItemByName(array: NameModel[], itemName: string): Array<NameModel> {// TODO GENERIC TYPE FUNCTION???  r.216/255\n  array.forEach((arrayItem, i) => {\n    if (arrayItem.name === itemName) {\n      array.splice(i, 1);\n    }\n  });\n  return array;\n}\n\nfunction deleteItemByUsername(array: UsernameModel[], itemName: string) {\n  array.forEach((arrayItem, i) => {\n    if (arrayItem.username === itemName) {\n      array.splice(i, 1);\n    }\n  });\n  return array;\n}\n\n\n// function updateRow(rows: RowContentModel[], updatedRow: RowContentModel): RowContentModel[] { TODO remove?\n//   rows.forEach((row, i) => {\n//     if (row.id === updatedRow.id) {\n//       rows[i] = updatedRow;\n//     }\n//   });\n//   return rows;\n// }\n\nfunction updateRoleUsers(roles: RoleModel[], newRole: RoleModel): RoleModel[] {\n  roles.forEach((role) => {\n    if (role.name === newRole.name) {\n      role.userDtos = newRole.userDtos;\n    }\n  });\n  return roles;\n}\n\nfunction updateUsersRoles(users: UserModel[], newUser: UserModel): UserModel[] {\n  users.forEach((user, i) => {\n    if (user.username === newUser.username) {\n      users[i].roleNames = newUser.roleNames;\n    }\n  });\n  return users;\n}\n\ninterface NameModel {\n  name: string;\n}\n\ninterface UsernameModel {\n  username: string;\n}\n","export const options = [\n  {shortcut: 'ST', name: 'Short text'},\n  {shortcut: 'DE', name: 'Description'},\n  {shortcut: 'DT', name: 'Date'},\n  {shortcut: 'EN', name: 'Enum'},\n  {shortcut: 'IN', name: 'Number'}\n];\n\nexport class RowContentModel {\n  public id: number;\n  public name: string;\n  public columnValueDtos: { [key: string]: { ['value']: string } }[];\n  public createdBy: string;\n  public createdOn: string; // TODO date?\n  public lastModifiedBy: string;\n  public lastModifiedOn: string; // TODO date?\n  public taskDtos: TaskModel[];\n}\n\nexport class TaskModel {\n  public id: number;\n  public name: string;\n  public description: string;\n  public status: Status;\n  public userNames: string[];\n  public taskDtos: TaskModel[];\n}\n\nexport enum Status {\n  UNASSIGNED, ASSIGNED, IN_PROGRESS, DONE,\n}\n\nexport class TableDefinitionModel {\n  public id: number;\n  public name: string;\n  public columnDetailDefinitionDtoList: any[];\n}\n\nexport interface ExtendedFilterModel { // TODO: Filter do poprawy (własciwe wartości)\n  id: any;\n  name: string;\n  createdBy: string;\n  createdOn: string;\n  lastModifiedBy: string;\n  lastModifiedOn: string;\n  columnValueDtos: any[];\n  taskDtos: any;\n}\n","module.exports = \".container {\\n  margin-top: 30%;\\n}\\n\\n.card {\\n  background: transparent;\\n  border: none;\\n}\\n\\n.card-header {\\n  border: none;\\n  background-color: transparent;\\n}\\n\\n.form-group {\\n  margin: 10px auto 0;\\n}\\n\\n.form-control {\\n  background-color: rgba(200,200,200,0.05);\\n  border: none;\\n}\\n\\n.alert {\\n  margin-top: 10px;\\n}\\n\\n.alert-danger {\\n  background: none;\\n  border-color: #721c24;\\n}\\n\\n.alert-success {\\n  background: none;\\n  border-color: #155724;\\n}\\n\\n.btn-group {\\n  display: flex;\\n}\\n\\n.btn {\\n  margin: auto !important;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-sm-12 col-md-6\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header text-white text-center\\\">\\n\\n          <h3 class=\\\"text-info\\\">Report Manager</h3>\\n\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <form [formGroup]=\\\"signinForm\\\">\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"text\\\" aria-describedby=\\\"usernameHelpInline\\\" name=\\\"username\\\" placeholder=\\\"username\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\">\\n                <small id=\\\"usernameHelpInline\\\" class=\\\"text-muted\\\">\\n                  Must be 8-20 characters long.\\n                </small>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <input type=\\\"password\\\" aria-describedby=\\\"passwordHelpInline\\\" name=\\\"password\\\" placeholder=\\\"password\\\" class=\\\"form-control\\\"\\n                       formControlName=\\\"password\\\">\\n                <small id=\\\"passwordHelpInline\\\" class=\\\"text-muted\\\">\\n                  Must be 8-20 characters long.\\n                </small>\\n              </div>\\n              <div class=\\\"btn-group\\\">\\n                <button value=\\\"Sign In\\\" class=\\\"btn btn-outline-info\\\" (click)=\\\"onSignin()\\\">Sign In</button>\\n              </div>\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"loginFailureInfo | async\\\">\\n                <span> {{ loginFailureInfo | async }} </span>\\n              </div>\\n              <div class=\\\"alert alert-success\\\" *ngIf=\\\"logoutInfo | async\\\">\\n                <span> {{ logoutInfo | async}} </span>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {OauthService} from '../shared/oauth.service';\nimport {AuthCookie} from '../shared/auth-cookies-handler';\nimport {Store} from '@ngrx/store';\nimport * as fromAppReducers from '../shared/store/app.reducers';\nimport {Observable} from 'rxjs/Observable';\n\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n  signinForm: FormGroup;\n  info: string;\n  loginFailureInfo: Observable<string>;\n  logoutInfo: Observable<string>;\n\n\n  constructor(private oauthservice: OauthService,\n              private cookie: AuthCookie,\n              private store: Store<fromAppReducers.AppState>) {\n\n  }\n\n  ngOnInit() {\n    this.logoutInfo = this.store.select('users', 'logoutInfo');\n    this.loginFailureInfo = this.store.select('users', 'loginFailureInfo');\n\n    AuthCookie.deleteAuth();\n    this.signinForm = new FormGroup({\n      'username': new FormControl(),\n      'password': new FormControl()\n    });\n  }\n\n\n  onSignin() {\n    this.oauthservice.obtainAccessToken({\n      username: this.signinForm.value.username,\n      password: this.signinForm.value.password\n    });\n  }\n}\n","module.exports = \".sk-folding-cube {\\n  margin: 20px auto;\\n  width: 40px;\\n  height: 40px;\\n  position: relative;\\n  -webkit-transform: rotateZ(45deg);\\n  transform: rotateZ(45deg);\\n}\\n\\n.sk-folding-cube .sk-cube {\\n  float: left;\\n  width: 50%;\\n  height: 50%;\\n  position: relative;\\n  -webkit-transform: scale(1.1);\\n  transform: scale(1.1);\\n}\\n\\n.sk-folding-cube .sk-cube:before {\\n  content: '';\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(23,162,184,0.4);\\n  border: 1px solid #107180;\\n  -webkit-animation: sk-foldCubeAngle 2.4s infinite linear both;\\n  animation: sk-foldCubeAngle 2.4s infinite linear both;\\n  -webkit-transform-origin: 100% 100%;\\n  transform-origin: 100% 100%;\\n}\\n\\n.sk-folding-cube .sk-cube2 {\\n  -webkit-transform: scale(1.1) rotateZ(90deg);\\n  transform: scale(1.1) rotateZ(90deg);\\n}\\n\\n.sk-folding-cube .sk-cube3 {\\n  -webkit-transform: scale(1.1) rotateZ(180deg);\\n  transform: scale(1.1) rotateZ(180deg);\\n}\\n\\n.sk-folding-cube .sk-cube4 {\\n  -webkit-transform: scale(1.1) rotateZ(270deg);\\n  transform: scale(1.1) rotateZ(270deg);\\n}\\n\\n.sk-folding-cube .sk-cube2:before {\\n  -webkit-animation-delay: 0.3s;\\n  animation-delay: 0.3s;\\n}\\n\\n.sk-folding-cube .sk-cube3:before {\\n  -webkit-animation-delay: 0.6s;\\n  animation-delay: 0.6s;\\n}\\n\\n.sk-folding-cube .sk-cube4:before {\\n  -webkit-animation-delay: 0.9s;\\n  animation-delay: 0.9s;\\n}\\n\\n@-webkit-keyframes sk-foldCubeAngle {\\n  0%, 10% {\\n    -webkit-transform: perspective(140px) rotateX(-180deg);\\n    transform: perspective(140px) rotateX(-180deg);\\n    opacity: 0;\\n  } 25%, 75% {\\n      -webkit-transform: perspective(140px) rotateX(0deg);\\n      transform: perspective(140px) rotateX(0deg);\\n      opacity: 1;\\n    } 90%, 100% {\\n        -webkit-transform: perspective(140px) rotateY(180deg);\\n        transform: perspective(140px) rotateY(180deg);\\n        opacity: 0;\\n      }\\n}\\n\\n@keyframes sk-foldCubeAngle {\\n  0%, 10% {\\n    -webkit-transform: perspective(140px) rotateX(-180deg);\\n    transform: perspective(140px) rotateX(-180deg);\\n    opacity: 0;\\n  } 25%, 75% {\\n      -webkit-transform: perspective(140px) rotateX(0deg);\\n      transform: perspective(140px) rotateX(0deg);\\n      opacity: 1;\\n    } 90%, 100% {\\n        -webkit-transform: perspective(140px) rotateY(180deg);\\n        transform: perspective(140px) rotateY(180deg);\\n        opacity: 0;\\n      }\\n}\\n\"","module.exports = \"<div class=\\\"sk-folding-cube\\\">\\n  <div class=\\\"sk-cube1 sk-cube\\\"></div>\\n  <div class=\\\"sk-cube2 sk-cube\\\"></div>\\n  <div class=\\\"sk-cube4 sk-cube\\\"></div>\\n  <div class=\\\"sk-cube3 sk-cube\\\"></div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"li {\\n  border: 1px solid #32383e;\\n  background-color: rgba(200, 200, 200, 0.05);\\n  color: gray !important;\\n}\\n\\nli:hover {\\n  background-color: rgba(200, 200, 200, 0.2);\\n}\\n\\n.bg-light {\\n  background-color: rgba(200, 200, 200, 0.2) !important;\\n}\\n\\n.jumbotron {\\n  background: none;\\n}\\n\\n.panel-header {\\n  background-color: rgba(0, 0, 0, 0.05);\\n}\\n\\ntd, th{\\n  padding: 0.75rem;\\n  vertical-align: top;\\n  border-top: none;\\n}\\n\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-3\\\">\\n        <ul class=\\\"list-group\\\">\\n          <li class=\\\"list-group-item\\\" style=\\\"background-color: rgba(0,0,0,0.05)\\\">Tables:</li>\\n          <li class=\\\"list-group-item\\\" *ngFor=\\\"let tableName of (tableState | async).tablesNames\\\"\\n              [ngClass]=\\\"(selectedTableName | async) == tableName ? 'bg-light' : ''\\\"\\n              (click)=\\\"onSelectTableName(tableName)\\\"\\n          >\\n            {{ tableName }}\\n          </li>\\n        </ul>\\n      </div>\\n      <div class=\\\"col-9\\\">\\n        <app-table-statistics></app-table-statistics>\\n      </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Store} from '@ngrx/store';\n\nimport * as fromAppReducers from '../shared/store/app.reducers';\nimport {Observable} from 'rxjs/Observable';\nimport {TableState} from '../shared/store/table/tables.reducers';\nimport {DataStorageService} from '../shared/data-storage.service';\nimport * as StatisticsActions from '../shared/store/statistics/statistics.actions';\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.css']\n})\nexport class StatisticsComponent implements OnInit {\n  tableState: Observable<TableState>;\n  selectedTableName: Observable<string>;\n\n  constructor(private store: Store<fromAppReducers.AppState>,\n              private dss: DataStorageService) { }\n\n  ngOnInit() {\n    this.dss.getTableNames();\n    this.tableState = this.store.select('tables');\n    this.selectedTableName = this.store.select('statistics', 'selectedTableName');\n  }\n\n  onSelectTableName(tableName: string) {\n    this.store.dispatch(new StatisticsActions.SetSelectedTableName(tableName));\n  }\n}\n","module.exports = \".card-header {\\n  border: 1px solid #32383e;\\n  background-color: rgba(0, 0, 0, 0.05);\\n  color: gray !important;\\n}\\n\\n.card {\\n  margin-bottom: 20px;\\n  border: 1px solid #32383e;\\n  background-color: rgba(200, 200, 200, 0.05);\\n  color: gray !important;\\n}\\n\"","module.exports = \"<div *ngIf=\\\"selectedTableName | async\\\">\\n\\n  <div *ngIf=\\\"tableState | async\\\">\\n\\n    <div class=\\\"card\\\"><!--                                                                                 ROWS INFO -->\\n      <div class=\\\"card-header\\\">\\n        <h5 class=\\\"text-info text-center\\\">{{ selectedTableName | async }}</h5>\\n      </div>\\n      <div class=\\\"card-body\\\" style=\\\"background-color: transparent !important; padding: 20px\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">\\n            Rows info:\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"row d-flex justify-content-center\\\" style=\\\"margin-top: 20px\\\">\\n              <div class=\\\"col-3\\\">\\n\\n                <div class=\\\"card bg-transparent\\\" style=\\\"width: 10rem; border: 1px solid #107180\\\">\\n                  <div class=\\\"align-middle\\\" style=\\\"background-color: rgba(23,162,184,0.4)\\\">\\n                    <h3 class=\\\"text-white text-center\\\">{{ tableInfo?.rows.length }} </h3>\\n                  </div>\\n                  <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title text-center text-white\\\">Rows</h5>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-3\\\">\\n\\n                <div class=\\\"card bg-transparent\\\" style=\\\"width: 10rem; border: 1px solid #1c7430\\\">\\n                  <div class=\\\"align-middle\\\" style=\\\"background-color: rgba(40,167,69,0.4)\\\">\\n                    <h3 class=\\\"text-white text-center\\\">{{ tableInfo?.doneRows.length }} </h3>\\n                  </div>\\n                  <div class=\\\"card-body\\\" style=\\\"min-height: 100px\\\">\\n                    <h5 class=\\\"card-title text-center text-white\\\">Done Rows</h5>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-3\\\">\\n                <div class=\\\"card bg-transparent\\\" style=\\\"width: 10rem; border: 1px solid #9a2530\\\">\\n                  <div class=\\\"align-middle\\\" style=\\\"background-color: rgba(220,53,69,0.4)\\\">\\n                    <h3 class=\\\"text-white text-center\\\">{{ tableInfo?.undoneRows.length }} </h3>\\n                  </div>\\n                  <div class=\\\"card-body\\\">\\n                    <h5 class=\\\"card-title text-center text-white\\\">Undone Rows</h5>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div *ngIf=\\\"tableInfo\\\" class=\\\"progress bg-transparent\\\" style=\\\"margin-top: 20px\\\">\\n              <div class=\\\"progress-bar\\\"\\n                   style=\\\"background-color: rgba(40,167,69,0.4); border: 1px solid #1c7430\\\"\\n                   role=\\\"progressbar\\\"\\n                   [style.width]=\\\" (tableInfo?.doneRows.length / tableInfo?.rows.length * 100 | number : '1.0-0') + '%'\\\"\\n                   attr.aria-valuenow=\\\"{{ tableInfo?.doneRows.length / tableInfo?.rows.length * 100 | number : '1.0-0' }}\\\"\\n                   attr.aria-valuemin=\\\"0\\\"\\n                   attr.aria-valuemax=\\\"100\\\">\\n              </div>\\n              <div class=\\\"progress-bar\\\"\\n                   style=\\\"background-color: rgba(220,53,69,0.4); border: 1px solid #9a2530\\\"\\n                   role=\\\"progressbar\\\"\\n                   [style.width]=\\\"(tableInfo?.undoneRows.length / tableInfo?.rows.length * 100 | number : '1.0-0') + '%'\\\"\\n                   attr.aria-valuenow=\\\"{{ tableInfo?.undoneRows.length / tableInfo?.rows.length * 100 | number : '1.0-0' }}\\\"\\n                   attr.aria-valuemin=\\\"0\\\"\\n                   attr.aria-valuemax=\\\"100\\\">\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div><!--                                                                                              ROWS INFO END-->\\n\\n    <div class=\\\"card\\\"><!--                                 COLUMNS  INFO -->\\n      <div class=\\\"card-header\\\">Columns info:</div>\\n      <div class=\\\"card-body\\\" *ngIf=\\\"(tableHeaderState | async)\\\">\\n        <div class=\\\"row\\\">\\n\\n          <div class=\\\"col-12\\\">\\n\\n            <div class=\\\"card\\\" *ngIf=\\\"tableInfo.columnInfo.numberInfo.length > 0\\\"><!--                          NUMBER COLUMNS INFO -->\\n              <div class=\\\"card-header\\\">Number info:</div>\\n              <div class=\\\"card-body\\\" *ngIf=\\\"(tableHeaderState | async)\\\">\\n                <table class=\\\"table bg-transparent table-responsive table-striped\\\">\\n                  <thead>\\n                  <tr>\\n                    <th>Column name</th>\\n                    <th>Column number</th>\\n                    <th>Sum</th>\\n                    <th>Average</th>\\n                    <th>Min</th>\\n                    <th>Max</th>\\n                  </tr>\\n                  </thead>\\n                  <tbody>\\n                  <tr *ngFor=\\\"let numberInfo of tableInfo.columnInfo.numberInfo\\\">\\n                    <th>{{ (tableHeaderState | async)[0].columnDetailDefinitionDtoList[numberInfo.columnNumber]?.name }}</th>\\n                    <td>{{ numberInfo.columnNumber }}</td>\\n                    <td>{{ numberInfo.sum }}</td>\\n                    <td>{{ numberInfo.avg | number : '1.2-2' }}</td>\\n                    <td>{{ numberInfo.min }}</td>\\n                    <td>{{numberInfo.max }}</td>\\n                  </tr>\\n                  </tbody>\\n                </table>\\n              </div>\\n            </div><!--                                                                                         NUMBER COLUMNS INFO END -->\\n          </div>\\n\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"card\\\" *ngIf=\\\"tableInfo.columnInfo.enumInfo.length > 0\\\"><!--                        ENUM INFO -->\\n              <div class=\\\"card-header\\\">Enum info:</div>\\n              <div class=\\\"card-body\\\" *ngIf=\\\"(tableHeaderState | async)\\\">\\n                <div *ngFor=\\\"let enumInfoArray of tableInfo.columnInfo.enumInfo,let i = index\\\"\\n                     style=\\\"border: 1px solid #32383e; padding: 20px; border-radius: 20px; margin: 10px; background-color: rgba(0,0,0,0.05)\\\">\\n\\n                  <h5 style=\\\"padding: 20px\\\">\\n                    {{ (tableHeaderState | async)[0].columnDetailDefinitionDtoList[(enumInfoArray | clearArray)[i].columnNumber]?.name }}\\n                  </h5>\\n\\n                  <div *ngIf=\\\"enumCharts[i].data.length > 0 && enumCharts[i].labels.length > 0\\\" style=\\\"display: block\\\">\\n                    <canvas baseChart\\n                            [datasets]=\\\"enumCharts[i].data\\\"\\n                            [labels]=\\\"enumCharts[i].labels\\\"\\n                            [legend]=\\\"enumCharts[i].legend\\\"\\n                            [chartType]=\\\"enumCharts[i].chartType\\\"\\n                            [options]=\\\"enumCharts[i].options\\\">\\n                    </canvas>\\n                  </div>\\n\\n\\n                  <table class=\\\"table table-responsive table-striped bg-transparent \\\"\\n                         style=\\\"margin-top: 30px\\\">\\n                    <thead class=\\\"border-secondary\\\">\\n                    <tr>\\n                      <th>\\n                        ENUM NAME\\n                      </th>\\n                      <th>\\n                        SUM\\n                      </th>\\n                    </tr>\\n                    </thead>\\n                    <tbody class=\\\"border-secondary\\\" *ngFor=\\\"let enumInfo of enumInfoArray | clearArray\\\">\\n                    <tr *ngIf=\\\"enumInfo\\\">\\n                      <td>\\n                        {{ enumInfo.name }}\\n                      </td>\\n                      <td>\\n                        {{ enumInfo.sum }}\\n                      </td>\\n                    </tr>\\n                    </tbody>\\n                  </table>\\n                </div>\\n              </div>\\n            </div><!--                                                                                         ENUM COLUMNS INFO END -->\\n          </div>\\n\\n          <div class=\\\"col-6\\\">\\n\\n            <div class=\\\"card\\\" *ngIf=\\\"tableInfo.columnInfo.dateInfo.length > 0\\\"><!--                            DATE COLUMNS INFO -->\\n              <div class=\\\"card-header\\\">\\n                <span>\\n                  DATE TYPE COLUMNS:\\n                </span>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <table class=\\\"table table-striped table-responsive bg-transparent \\\">\\n                  <thead class=\\\"border-secondary\\\">\\n                  <tr>\\n                    <th>\\n                      COLUMN NAME\\n                    </th>\\n                    <th>\\n                      MIN DATE\\n                    </th>\\n                    <th>\\n                      MAX DATE\\n                    </th>\\n                  </tr>\\n                  </thead>\\n                  <tbody class=\\\"border-secondary\\\">\\n                  <tr *ngFor=\\\"let dateInfo of tableInfo.columnInfo.dateInfo\\\">\\n                    <td>\\n                      {{ (tableHeaderState | async)[0].columnDetailDefinitionDtoList[dateInfo.columnNumber]?.name }}\\n                    </td>\\n                    <td>\\n                      {{ dateInfo.min | date:'fullDate' }}\\n                    </td>\\n                    <td>\\n                      {{ dateInfo.max | date:'fullDate' }}\\n                    </td>\\n                  </tr>\\n                  </tbody>\\n                </table>\\n              </div>\\n            </div><!--                                                                                     DATE COLUMNS INFO END-->\\n\\n            <div class=\\\"card\\\" *ngIf=\\\"tableInfo.columnInfo.descriptionInfo.length > 0\\\"><!--                     DESCRIPTION COLUMNS INFO -->\\n              <div class=\\\"card-header\\\">Description info:</div>\\n              <div class=\\\"card-body\\\" *ngIf=\\\"(tableHeaderState | async)\\\">\\n                <table class=\\\"table bg-transparent table-responsive table-striped\\\">\\n                  <thead>\\n                  <tr>\\n                    <th>Column name</th>\\n                    <th>Column number</th>\\n                    <th>Average</th>\\n                  </tr>\\n                  </thead>\\n                  <tbody>\\n                  <tr *ngFor=\\\"let descriptionInfo of tableInfo.columnInfo.descriptionInfo\\\">\\n                    <th>{{ (tableHeaderState | async)[0].columnDetailDefinitionDtoList[descriptionInfo.columnNumber]?.name }}</th>\\n                    <td>{{ descriptionInfo.columnNumber }}</td>\\n                    <td>{{ descriptionInfo.avgLength | number : '1.2-2'}}</td>\\n                  </tr>\\n                  </tbody>\\n                </table>\\n              </div>\\n            </div><!--                                                                                         DESCRIPTION COLUMNS INFO END -->\\n\\n            <div class=\\\"card\\\" *ngIf=\\\"tableInfo.columnInfo.shortTextInfo.length > 0\\\"><!--                       SHORT TEXT COLUMNS INFO -->\\n              <div class=\\\"card-header\\\">Short text info:</div>\\n              <div class=\\\"card-body\\\" *ngIf=\\\"(tableHeaderState | async)\\\">\\n\\n                <table class=\\\"table bg-transparent table-responsive table-striped\\\">\\n                  <thead>\\n                  <tr>\\n                    <th>Column name</th>\\n                    <th>Column number</th>\\n                    <th>Average</th>\\n                  </tr>\\n                  </thead>\\n                  <tbody>\\n                  <tr *ngFor=\\\"let shortTextInfo of tableInfo.columnInfo.shortTextInfo\\\">\\n                    <th>{{ (tableHeaderState | async)[0].columnDetailDefinitionDtoList[shortTextInfo.columnNumber]?.name }}</th>\\n                    <td>{{ shortTextInfo.columnNumber }}</td>\\n                    <td>{{ shortTextInfo.avgLength | number : '1.2-2'}}</td>\\n                  </tr>\\n                  </tbody>\\n                </table>\\n              </div>\\n            </div><!--                                                                                           SHORT TEXT COLUMNS INFO END -->\\n\\n          </div>\\n\\n        </div><!--                                                                                             COLUMNS INFO END-->\\n      </div>\\n    </div>\\n    <div class=\\\"card\\\"><!--                                                                                    TASKS INFO -->\\n      <div class=\\\"card-header\\\">Tasks info:</div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\n          <div class=\\\"col-12 d-flex justify-content-center\\\">\\n            <div class=\\\"card border-info bg-transparent\\\" style=\\\"width: 10rem;\\\">\\n              <div class=\\\"align-middle\\\" style=\\\"background-color: rgba(23,162,184,0.4)\\\">\\n                <h3 class=\\\"text-white text-center\\\">{{ tasksInfo.tasks.length }} </h3>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title text-center text-white\\\">Tasks</h5>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\n          <div class=\\\"col-3\\\">\\n            <div class=\\\"card border-danger bg-transparent\\\" style=\\\"width: 10rem; border: 1px solid #9a2530\\\">\\n              <div class=\\\"align-middle\\\" style=\\\"background-color: rgba(220,53,69,0.4)\\\">\\n                <h3 class=\\\"text-white text-center\\\">{{ tasksInfo.unassignedTasks.length }} </h3>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title text-center text-white\\\">Unassigned Tasks</h5>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-3\\\">\\n            <div class=\\\"card bg-transparent\\\" style=\\\"width: 10rem; border: 1px solid #b28704\\\">\\n              <div class=\\\"align-middle\\\" style=\\\"background-color: rgba(255,193,7,0.4)\\\">\\n                <h3 class=\\\"text-white text-center\\\">{{ tasksInfo.assignedTasks.length }} </h3>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title text-center text-white\\\">Assigned Tasks</h5>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-3\\\">\\n            <div class=\\\"card bg-transparent\\\" style=\\\"width: 10rem;\\\" style=\\\"border: 1px solid #0056b2\\\">\\n              <div class=\\\"align-middle\\\" style=\\\"background-color: rgba(0,123,255,0.4)\\\">\\n                <h3 class=\\\"text-white text-center\\\">{{ tasksInfo.inProgressTasks.length }} </h3>\\n              </div>\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title text-center text-white\\\">In progress Tasks</h5>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-3\\\">\\n            <div class=\\\"card bg-transparent\\\" style=\\\"width: 10rem;\\\" style=\\\"border: 1px solid #1c7430\\\">\\n              <div class=\\\"align-middle\\\" style=\\\"background-color: rgba(40,167,69,0.4)\\\">\\n                <h3 class=\\\"text-white text-center\\\">{{ tasksInfo.doneTasks.length }} </h3>\\n              </div>\\n              <div class=\\\"card-body\\\" style=\\\"min-height: 100px\\\">\\n                <h5 class=\\\"card-title text-center text-white\\\">Done Tasks</h5>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"progress bg-transparent\\\" *ngIf=\\\"tasksInfo.tasks.length > 0\\\" style=\\\"margin-top: 20px\\\">\\n          <div class=\\\"progress-bar\\\"\\n               style=\\\"background-color: rgba(220,53,69,0.4); border: 1px solid #9a2530\\\"\\n               role=\\\"progressbar\\\"\\n               [style.width]=\\\" (tasksInfo.unassignedTasks.length / tasksInfo.tasks.length * 100 | number : '1.0-0') + '%'\\\"\\n               attr.aria-valuenow=\\\"{{ tasksInfo.unassignedTasks.length / tasksInfo.tasks.length * 100 | number : '1.0-0' }}\\\"\\n               attr.aria-valuemin=\\\"0\\\"\\n               attr.aria-valuemax=\\\"100\\\">\\n          </div>\\n          <div class=\\\"progress-bar\\\"\\n               style=\\\"background-color: rgba(255,193,7,0.4); border: 1px solid #b28704\\\"\\n               role=\\\"progressbar\\\"\\n               [style.width]=\\\"(tasksInfo.assignedTasks.length / tasksInfo.tasks.length * 100 | number : '1.0-0') + '%'\\\"\\n               attr.aria-valuenow=\\\"{{ tasksInfo.assignedTasks.length / tasksInfo.tasks.length * 100 | number : '1.0-0' }}\\\"\\n               attr.aria-valuemin=\\\"0\\\"\\n               attr.aria-valuemax=\\\"100\\\">\\n          </div>\\n          <div class=\\\"progress-bar\\\"\\n               style=\\\"background-color: rgba(0,123,255,0.4); border: 1px solid #0056b2\\\"\\n               role=\\\"progressbar\\\"\\n               [style.width]=\\\"(tasksInfo.inProgressTasks.length / tasksInfo.tasks.length * 100 | number : '1.0-0') + '%'\\\"\\n               attr.aria-valuenow=\\\"{{ tasksInfo.inProgressTasks.length / tasksInfo.tasks.length * 100 | number : '1.0-0' }}\\\"\\n               attr.aria-valuemin=\\\"0\\\"\\n               attr.aria-valuemax=\\\"100\\\">\\n          </div>\\n          <div class=\\\"progress-bar\\\"\\n               style=\\\"background-color: rgba(40,167,69,0.4); border: 1px solid #1c7430\\\"\\n               role=\\\"progressbar\\\"\\n               [style.width]=\\\"(tasksInfo.doneTasks.length / tasksInfo.tasks.length * 100 | number : '1.0-0') + '%'\\\"\\n               attr.aria-valuenow=\\\"{{ tasksInfo.doneTasks.length / tasksInfo.tasks.length * 100 | number : '1.0-0' }}\\\"\\n               attr.aria-valuemin=\\\"0\\\"\\n               attr.aria-valuemax=\\\"100\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div><!--                                                                     TASKS INFO -->\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {Observable} from 'rxjs/Observable';\n\nimport * as fromAppReducers from '../../shared/store/app.reducers';\nimport {TableState} from '../../shared/store/table/tables.reducers';\nimport {TableDefinitionModel} from '../../shared/table.model';\nimport {DataStorageService} from '../../shared/data-storage.service';\nimport {EnumInfoModel, TableInfoModel} from '../../shared/statistics/table-info.model';\nimport {StatisticsService} from '../../shared/statistics/statistics.service';\nimport {TasksInfoModel} from '../../shared/statistics/tasks-info.model';\nimport {EnumChart} from './charts.model';\n\n\n@Component({\n  selector: 'app-table-statistics',\n  templateUrl: './table-statistics.component.html',\n  styleUrls: ['./table-statistics.component.css']\n})\nexport class TableStatisticsComponent implements OnInit {\n  tableHeaderState: Observable<TableDefinitionModel>;\n  tableState: Observable<TableState>;\n  selectedTableName: Observable<string>;\n  tableInfo: TableInfoModel = null;\n  tasksInfo: TasksInfoModel = null;\n  enumCharts: EnumChart[] = [];\n\n  constructor(private store: Store<fromAppReducers.AppState>,\n              private dss: DataStorageService,\n              private statistics: StatisticsService) {\n  }\n\n  ngOnInit() {\n    this.tableHeaderState = this.store.select('tables', 'tableDefinition');\n    this.tableHeaderState.subscribe((header: TableDefinitionModel) => {\n      console.log(header);\n    });\n    this.tableState = this.store.select('tables');\n    this.selectedTableName = this.store.select('statistics', 'selectedTableName');\n    this.selectedTableName.subscribe((tableName: string) => {\n      if (tableName) {\n        this.dss.getTableRowsByName(tableName);\n        this.dss.getTableHeaderByName(tableName);\n      }\n    });\n    this.tableState.subscribe((tableState: TableState) => {\n\n      if (tableState) {\n        this.tasksInfo = this.statistics.mapToTaskInfo(tableState.tableContent);\n        this.tableInfo = this.statistics.mapToRowsInfo(tableState.tableContent);\n        console.log(this.tableInfo);\n        this.tableInfo.columnInfo.enumInfo.forEach((enumInfo: EnumInfoModel[], i) => {\n          console.log('enumCharts', this.enumCharts);\n          this.setEnumChart(enumInfo, i);\n        });\n      }\n    });\n  }\n\n  setEnumChart(enumInfos: EnumInfoModel[], i: number) {\n    this.enumCharts[i] = {\n      data: [],\n      labels: [],\n      chartType: (i % 2 === 0) ? 'doughnut' : 'bar',\n      legend: true,\n      options: {\n        scaleShowVerticalLines: false,\n        responsive: true,\n        legend: false,\n        elements: {\n          arc: {\n            borderWidth: 0\n          }\n        }\n      }\n    };\n    const  enumValues = [];\n    let columnNumber = null;\n    enumInfos.forEach((enumInfo: EnumInfoModel) => {\n      enumValues.push(enumInfo.sum);\n      columnNumber = enumInfo.columnNumber;\n      this.enumCharts[i].labels.push(enumInfo.name);\n    });\n    this.enumCharts[i].data.push({data: enumValues, label: 'ENUM ' + columnNumber});\n  }\n}\n\n","import {Pipe, PipeTransform} from '@angular/core';\n\n// @Pipe({name: 'keys'})\n// export class KeyPipe implements PipeTransform {\n//   transform(value: any, ...args: any[]): any {\n//     return Object.keys(value);\n//   }\n// }\n\n@Pipe({name: 'valueOnKey'})\nexport class KeyPipe implements PipeTransform {\n  transform(value: {}, ...args: any[]): any {\n    const key = Object.keys(value);\n    return {key: key, value: value[Object.keys(value)[0]]};\n  }\n}\n","module.exports = \"a.bg-dark:hover {\\n  background-color: #343a40!important;\\n}\\n\\nli {\\n  background-color: rgba(200,200,200,0.05);\\n  border: none;\\n}\\n\\n.form-control {\\n  background-color: rgba(200,200,200,0.05);\\n  border: none;\\n}\\n\"","module.exports = \"\\n  <div class=\\\"container-fluid\\\" style=\\\"padding: 0\\\" *ngIf=\\\"choosenName\\\">\\n    <nav class=\\\"navbar\\\" style=\\\"margin-bottom: 0;padding-bottom: 0; border-bottom: none;\\\">\\n      <ul class=\\\"nav\\\" style=\\\"margin-bottom: 0;padding-bottom: 0; border-bottom: none;\\\">\\n        <li style=\\\"background-color: transparent !important;\\\">\\n          <form class=\\\"form-inline input-group my-2 my-lg-0\\\" style=\\\"margin-bottom: 0;padding-left: 20px;\\\">\\n            <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"\\\">\\n              <button class=\\\"btn btn-outline-secondary my-2 my-sm-0\\\" (click)=\\\"onNewRow()\\\">\\n                New row\\n              </button>\\n              <button class=\\\"btn btn-outline-secondary my-2 my-sm-0\\\"\\n                      *ngIf=\\\"(extendedTableView|async)\\\"\\n                      (click)=\\\"onExtendedFilterMode()\\\">\\n                Filter Mode\\n              </button>\\n              <button class=\\\"btn btn-outline-secondary my-2 my-sm-0\\\" (click)=\\\"switchExtendedTableView()\\\">\\n                {{ (extendedTableView|async) ? 'Reduce View' : 'Extend View'}}\\n              </button>\\n            </div>\\n            <div class=\\\"btn-group btn-group-toggle\\\" data-toggle=\\\"buttons\\\"\\n                 *ngIf=\\\"(extendedTableView|async) && (extendedFilterMode | async)\\\">\\n              <label class=\\\"btn btn-outline-secondary active\\\"(click)=\\\"setFilterSelectValue(false)\\\">\\n                <input type=\\\"radio\\\"> All\\n              </label>\\n              <label class=\\\"btn btn-outline-secondary\\\" (click)=\\\"setFilterSelectValue(true)\\\">\\n                <input type=\\\"radio\\\"> Any\\n              </label>\\n            </div>\\n            <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"\\\">\\n              <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\"\\n                     (keyup)=\\\"onFilter(filterInput.value)\\\"\\n                     *ngIf=\\\"!(extendedTableView|async)\\\"\\n                     #filterInput>\\n            </div>\\n          </form>\\n        </li>\\n      </ul>\\n      <ul class=\\\"nav nav-pills nav-collapse\\\" style=\\\"margin-bottom: 0;padding-bottom: 0;border-bottom: none;\\\">\\n        <li class=\\\"nav-item\\\">\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"\\\">\\n            <button class=\\\"btn btn-outline-secondary\\\"\\n                    *ngFor=\\\"let tableName of tableNames\\\" (click)=\\\"onChooseName(tableName)\\\"\\n                    [ngClass]=\\\"choosenName == tableName ? 'text-info' : 'text-secondary'\\\">\\n              {{tableName}}\\n            </button>\\n          </div>\\n        </li>\\n      </ul>\\n    </nav>\\n  </div>\\n\\n<div class=\\\"container\\\" style=\\\"margin-top: 10%\\\" *ngIf=\\\"choosenName == null || choosenName == undefined\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-sm-12 col-md-6\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item bg-dark text-info\\\">Select a table:</li>\\n        <li class=\\\"list-group-item text-secondary\\\" *ngFor=\\\"let tableName of tableNames\\\" (click)=\\\"onChooseName(tableName)\\\"> {{tableName}}</li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, Input, OnInit, Output} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport {Store} from '@ngrx/store';\nimport * as fromAppReducers from '../../shared/store/app.reducers';\nimport * as TablesActions from '../../shared/store/table/tables.actions';\nimport {Observable} from 'rxjs/Observable';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  @Input() tableNames: string[];\n  choosenName: string;\n  @Output() choosenNameChanged = new Subject<string>();\n  extendedFilterMode: Observable<boolean>;\n  extendedTableView: Observable<boolean>;\n  extendedTableViewValue: boolean;\n\n\n  constructor(private store: Store<fromAppReducers.AppState>) {\n  }\n\n  setFilterSelectValue(value: boolean) {\n    console.log('setFilterSelectValue', value);\n    this.store.dispatch(new TablesActions.SetExtendedFilterSelect(value));\n  }\n\n  ngOnInit() {\n    this.extendedFilterMode = this.store.select('tables', 'extendedFilterMode');\n    this.extendedTableView = this.store.select('tables', 'extendedTableView');\n    this.extendedTableView.subscribe((value) => {\n      this.extendedTableViewValue = value;\n    });\n  }\n\n  onChooseName(tableName: string) {\n    this.choosenName = tableName;\n    this.choosenNameChanged.next(tableName);\n  }\n\n  onFilter(filter) {\n    console.log(filter);\n    this.store.dispatch(new TablesActions.TableFilter(filter));\n  }\n\n  onNewRow() {\n    // TODO new Row\n    this.store.dispatch(new TablesActions.SetEditRowMode(true));\n    this.store.dispatch(new TablesActions.SetNewRowModeAction(true));\n  }\n\n  switchExtendedTableView() {\n    this.store.dispatch(new TablesActions.SetExtendedTableView(!this.extendedTableViewValue));\n  }\n\n  onExtendedFilterMode() {\n    this.store.dispatch(new TablesActions.SetExtendedFilterMode());\n  }\n}\n","module.exports = \"li, td {\\n  border: 1px solid #32383e;\\n  background-color: rgba(200, 200, 200, 0.05);\\n  color: lightgray !important;\\n}\\n\\n.form-control {\\n  background-color: rgba(200,200,200,0.05);\\n  border: none;\\n  color: gray !important;\\n}\\n\"","module.exports = \"<div class=\\\"panel\\\" *ngIf=\\\"editRowMode\\\" style=\\\"border: solid 2px #343a40; border-radius: 8px\\\">\\n\\n  <div class=\\\"panel-heading text-center\\\" style=\\\"background-color: rgba(0,0,0,0.05); padding: 10px\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onToggleRowEditMode()\\\">Close</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onAddTask()\\\">Add Task</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" *ngIf=\\\"unlockFields && !(newRowMode | async)\\\" (click)=\\\"onSubmit()\\\">Save</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" *ngIf=\\\"!(newRowMode | async)\\\" (click)=\\\"toggleUnlock()\\\"> {{ unlockFields ? 'Cancel' : 'Edit' }}</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" *ngIf=\\\"(newRowMode | async)\\\" (click)=\\\"onSaveNewRow()\\\">Save</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"switchExtendedRowView()\\\">{{(extendedRowView| async) ? 'Reduce' : 'Extend'}}</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary text-danger\\\" (click)=\\\"onDeleteRow()\\\"> Delete </button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"panel-body\\\" style=\\\"padding: 10px\\\">\\n    <div *ngIf=\\\"!unlockFields && (newRowMode | async)\\\">\\n      <div class=\\\"col-xs-12 \\\">\\n        <form [formGroup]=\\\"newRowForm\\\">\\n          <div class=\\\"form-group\\\" hidden>\\n            <label for=\\\"id\\\" class=\\\"text-info\\\">ID:</label>\\n            <input type=\\\"number\\\"\\n                   id=\\\"id\\\"\\n                   formControlName=\\\"id\\\"\\n                   class=\\\"form-control\\\"\\n            >\\n          </div>\\n          <div class=\\\"form-group\\\" hidden>\\n            <label for=\\\"name\\\" class=\\\"text-info\\\">Name:</label>\\n            <input type=\\\"text\\\"\\n                   id=\\\"name\\\"\\n                   formControlName=\\\"name\\\"\\n                   class=\\\"form-control\\\"\\n            >\\n          </div>\\n          <div class=\\\"form-group\\\" hidden>\\n            <label for=\\\"createdBy\\\" class=\\\"text-info\\\">Created By:</label>\\n            <input type=\\\"text\\\"\\n                   id=\\\"createdBy\\\"\\n                   formControlName=\\\"createdBy\\\"\\n                   class=\\\"form-control\\\"\\n            >\\n          </div>\\n          <div class=\\\"form-group\\\" hidden>\\n            <label for=\\\"createdOn\\\" class=\\\"text-info\\\">Created On:</label>\\n            <input type=\\\"datetime-local\\\"\\n                   id=\\\"createdOn\\\"\\n                   formControlName=\\\"createdOn\\\"\\n                   class=\\\"form-control\\\"\\n            >\\n          </div>\\n          <div class=\\\"form-group\\\" hidden>\\n            <label for=\\\"lastModifiedBy\\\" class=\\\"text-info\\\">Last modified by:</label>\\n            <input type=\\\"text\\\"\\n                   id=\\\"lastModifiedBy\\\"\\n                   formControlName=\\\"lastModifiedBy\\\"\\n                   class=\\\"form-control\\\"\\n            >\\n          </div>\\n          <div class=\\\"form-group\\\" hidden>\\n            <label for=\\\"lastModifiedOn\\\" class=\\\"text-info\\\">Last modified on:</label>\\n            <input type=\\\"datetime-local\\\"\\n                   id=\\\"lastModifiedOn\\\"\\n                   formControlName=\\\"lastModifiedOn\\\"\\n                   class=\\\"form-control\\\"\\n            >\\n          </div>\\n          <div formArrayName=\\\"columnValueDtos\\\">\\n            <div *ngFor=\\\"let cell of newRowForm.get('columnValueDtos').controls;let j = index\\\">\\n\\n              <div [ngSwitch]=\\\"(cell.value | valueOnKey).key\\\" formGroupName=\\\"{{j}}\\\">\\n\\n                <div *ngSwitchCase=\\\"'DT'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\n                  <label class=\\\"text-info\\\">{{(header | async)[0].columnDetailDefinitionDtoList[j].name}}</label>\\n                  <input type=\\\"datetime-local\\\"\\n                         formControlName=\\\"DT\\\"\\n                         class=\\\"form-control\\\"\\n                         formControlName=\\\"DT\\\">\\n                </div>\\n                <div *ngSwitchCase=\\\"'ST'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\n                  <label class=\\\"text-info\\\">{{(header | async)[0].columnDetailDefinitionDtoList[j].name}}</label>\\n                  <input\\n                    [type]=\\\"'text'\\\"\\n                    formControlName=\\\"ST\\\"\\n                    class=\\\"form-control\\\">\\n                </div>\\n                <div *ngSwitchCase=\\\"'DE'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\n                  <label class=\\\"text-info\\\">{{(header | async)[0].columnDetailDefinitionDtoList[j].name}}</label>\\n                  <textarea cols=\\\"30\\\" rows=\\\"10\\\"\\n                            class=\\\"form-control\\\"\\n                            formControlName=\\\"DE\\\">\\n                </textarea>\\n                </div>\\n                <div *ngSwitchCase=\\\"'EN'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\n                  <label class=\\\"text-info\\\">{{(header | async)[0].columnDetailDefinitionDtoList[j].name}}</label>\\n                  <select class=\\\"form-control\\\" formControlName=\\\"EN\\\">\\n                    <option selected> -Select value-</option>\\n                    <option *ngFor=\\\"let option of (header | async)[0].columnDetailDefinitionDtoList[j].optionList\\\">\\n                      {{option.value}}\\n                    </option>\\n                  </select>\\n                </div>\\n                <div *ngSwitchCase=\\\"'IN'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\n                  <label class=\\\"text-info\\\">{{(header | async)[0].columnDetailDefinitionDtoList[j].name}}</label>\\n                  <input [id]=\\\"(cell.value | valueOnKey).key\\\"\\n                         [type]=\\\"'number'\\\"\\n                         class=\\\"form-control\\\"\\n                         formControlName=\\\"IN\\\">\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n\\n    <form *ngIf=\\\"unlockFields && !(newRowMode | async)\\\" [formGroup]=\\\"updateRowForm\\\" style=\\\"padding-left: 10px\\\" style=\\\"padding: 5px\\\">\\n      <div formArrayName=\\\"columnValueDtos\\\">\\n        <div *ngFor=\\\"let cell of updateRowForm.get('columnValueDtos').controls;let j = index\\\">\\n          <div [ngSwitch]=\\\"(cell.value | valueOnKey).key\\\" formGroupName=\\\"{{j}}\\\">\\n            <div *ngSwitchCase=\\\"'DT'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\n              <label class=\\\"text-info\\\"> {{ (header | async)[0].columnDetailDefinitionDtoList[j]?.name }} </label>\\n              <input type=\\\"datetime-local\\\"\\n                     formControlName=\\\"DT\\\"\\n                     class=\\\"form-control\\\"\\n              >\\n            </div>\\n            <div *ngSwitchCase=\\\"'ST'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\n              <label class=\\\"text-info\\\"> {{ (header | async)[0].columnDetailDefinitionDtoList[j]?.name }} </label>\\n              <input formControlName=\\\"ST\\\"\\n                     [type]=\\\"'text'\\\"\\n                     class=\\\"form-control\\\"\\n              >\\n            </div>\\n            <div *ngSwitchCase=\\\"'DE'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\n              <label class=\\\"text-info\\\"> {{ (header | async)[0].columnDetailDefinitionDtoList[j]?.name }} </label>\\n              <textarea cols=\\\"30\\\" rows=\\\"10\\\"\\n                        formControlName=\\\"DE\\\"\\n                        class=\\\"form-control\\\"\\n\\n              >\\n                </textarea>\\n            </div>\\n            <div *ngSwitchCase=\\\"'IN'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\n              <label class=\\\"text-info\\\"> {{ (header | async)[0].columnDetailDefinitionDtoList[j]?.name }} </label>\\n              <input formControlName=\\\"IN\\\"\\n                     [type]=\\\"'number'\\\"\\n                     class=\\\"form-control\\\"\\n\\n              >\\n            </div>\\n            <div *ngSwitchCase=\\\"'EN'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\n              <label class=\\\"text-info\\\"> {{ (header | async)[0].columnDetailDefinitionDtoList[j]?.name }} </label>\\n              <select class=\\\"form-control\\\"\\n                      formControlName=\\\"EN\\\"\\n                      style=\\\"height: 35px\\\"\\n\\n              >\\n                <option *ngFor=\\\"let option of (header | async)[0].columnDetailDefinitionDtoList[j]?.optionList\\\"\\n                        [value]=\\\"option.value\\\"\\n                        [selected]=\\\"(row| async)?.columnValueDtos[j]['EN'].value == option.value\\\"\\n                >{{ option.value }}\\n              </select>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"id\\\" class=\\\"text-info\\\">ID:</label>\\n        <input type=\\\"number\\\"\\n               id=\\\"id\\\"\\n               formControlName=\\\"id\\\"\\n               class=\\\"form-control\\\"\\n               readonly\\n               required\\n        >\\n      </div>\\n      <div class=\\\"form-group\\\" hidden>\\n        <label for=\\\"name\\\" class=\\\"text-info\\\">Name:</label>\\n        <input type=\\\"text\\\"\\n               id=\\\"name\\\"\\n               formControlName=\\\"name\\\"\\n               class=\\\"form-control\\\"\\n               readonly\\n        >\\n      </div>\\n      <div class=\\\"form-group\\\" >\\n        <label for=\\\"createdBy\\\" class=\\\"text-info\\\">Created By:</label>\\n        <input type=\\\"text\\\"\\n               id=\\\"createdBy\\\"\\n               formControlName=\\\"createdBy\\\"\\n               class=\\\"form-control\\\"\\n               readonly\\n               required\\n        >\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"text-info\\\">Created On:</label>\\n        <input type=\\\"datetime-local\\\"\\n               formControlName=\\\"createdOn\\\"\\n               class=\\\"form-control\\\"\\n               readonly\\n               required\\n        >\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"lastModifiedBy\\\" class=\\\"text-info\\\">Last modified by:</label>\\n        <input type=\\\"text\\\"\\n               id=\\\"lastModifiedBy\\\"\\n               formControlName=\\\"lastModifiedBy\\\"\\n               class=\\\"form-control\\\"\\n               readonly\\n               required\\n        >\\n      </div>\\n      <div class=\\\"form-group\\\" disabled>\\n        <label for=\\\"lastModifiedOn\\\" class=\\\"text-info\\\">Last modified on:</label>\\n        <input type=\\\"datetime-local\\\"\\n               id=\\\"lastModifiedOn\\\"\\n               formControlName=\\\"lastModifiedOn\\\"\\n               class=\\\"form-control\\\"\\n               readonly\\n               required\\n        >\\n      </div>\\n    </form>\\n\\n    <div *ngIf=\\\"!unlockFields && !(newRowMode | async)\\\">\\n      <table class=\\\"table\\\">\\n        <tbody>\\n        <tr *ngFor=\\\"let cellValue of (row | async)?.columnValueDtos; let i = index;\\\">\\n          <td><span class=\\\"text-info\\\">\\n            {{ (header | async)[0].columnDetailDefinitionDtoList[i]?.name }}</span>\\n          </td>\\n          <td>\\n            {{(cellValue | valueOnKey).value.value }}\\n          </td>\\n        </tr>\\n        <tr *ngIf=\\\"extendedRowView | async\\\">\\n          <td><span class=\\\"text-info\\\">ID</span></td>\\n          <td>{{ (row | async)?.id }}</td>\\n        </tr>\\n        <tr *ngIf=\\\"extendedRowView | async\\\" hidden>\\n          <td><span class=\\\"text-info\\\">Name</span></td>\\n          <td>{{ (row | async)?.name }}</td>\\n        </tr>\\n        <tr *ngIf=\\\"extendedRowView | async\\\">\\n          <td><span class=\\\"text-info\\\">Created by</span></td>\\n          <td>{{ (row | async)?.createdBy}}</td>\\n        </tr>\\n        <tr *ngIf=\\\"extendedRowView | async\\\">\\n          <td><span class=\\\"text-info\\\">Created on</span></td>\\n          <td>{{ (row | async)?.createdOn }}</td>\\n        </tr>\\n        <tr *ngIf=\\\"extendedRowView | async\\\">\\n          <td><span class=\\\"text-info\\\">Last modified by</span></td>\\n          <td>{{ (row | async)?.lastModifiedBy }}</td>\\n        </tr>\\n        <tr *ngIf=\\\"extendedRowView | async\\\">\\n          <td><span class=\\\"text-info\\\">Last modified on</span></td>\\n          <td>{{ (row | async)?.lastModifiedOn }}</td>\\n        </tr>\\n        </tbody>\\n      </table>\\n\\n      <div *ngIf=\\\"(row | async)?.taskDtos.length <= 0\\\">\\n        <ul class=\\\"list-group\\\" style=\\\"margin-bottom: 0\\\">\\n          <li class=\\\"list-group-item text-white text-center\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">\\n            <h5>NO TASKS</h5>\\n          </li>\\n        </ul>\\n      </div>\\n\\n      <div *ngIf=\\\"(row | async)?.taskDtos.length > 0\\\">\\n        <ul class=\\\"list-group\\\" style=\\\"margin-bottom: 0\\\">\\n          <li class=\\\"list-group-item text-white text-center\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">\\n            <h5>TASKS</h5>\\n          </li>\\n          <div *ngFor=\\\"let task of (row | async)?.taskDtos; let i = index;\\\">\\n            <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\" style=\\\"margin-top: 3px\\\">\\n              <span class=\\\"btn btn-outline-secondary text-info\\\"\\n                    (click)=\\\"task.id == selectedTask?.id ? onShowTask(null) : onShowTask(task)\\\"> {{task.name }} </span>\\n              <span class=\\\"btn btn-outline-secondary text-danger\\\" (click)=\\\"onDeleteTask(task.id)\\\" *ngIf=\\\"task.id == selectedTask?.id\\\"> Delete Task</span>\\n              <span class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onShowTaskDetails(task)\\\">Details</span>\\n            </li>\\n            <div *ngIf=\\\"task.id == selectedTask?.id\\\">\\n              <li class=\\\"list-group-item\\\"> ID: {{task.id}}</li>\\n              <li class=\\\"list-group-item\\\"> Name: {{task.name}}</li>\\n              <li class=\\\"list-group-item\\\"> Description: {{task.description}}</li>\\n              <li class=\\\"list-group-item\\\"> Status: {{task.status}}</li>\\n            </div>\\n          </div>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {RowContentModel, TableDefinitionModel, TaskModel} from '../../shared/table.model';\nimport {Observable} from 'rxjs/Observable';\nimport {DataStorageService} from '../../shared/data-storage.service';\nimport {Store} from '@ngrx/store';\nimport * as fromAppReducers from '../../shared/store/app.reducers';\nimport * as TablesActions from '../../shared/store/table/tables.actions';\nimport {FormArray, FormControl, FormGroup} from '@angular/forms';\nimport {Question} from '../row/value-types/question-base.model';\nimport {QuestionControlService} from '../row/question-control.service';\nimport * as TaskActions from '../../shared/store/task/tasks.actions';\n\n@Component({\n  selector: 'app-row-details',\n  templateUrl: './row-details.component.html',\n  styleUrls: ['./row-details.component.css']\n})\nexport class RowDetailsComponent implements OnInit, OnDestroy {\n  row: Observable<RowContentModel>;\n  header: Observable<TableDefinitionModel>;\n  updateRowForm: FormGroup;\n  newRowForm: FormGroup;\n  editRowMode: Observable<boolean>;\n  unlockFields: boolean;\n  newRowMode: Observable<boolean>;\n  selectedTask: TaskModel = null;\n  selesctedRow: RowContentModel;\n  extendedRowView: Observable<boolean>;\n  extendedRowViewValue: boolean;\n  private selectedTableName: string;\n\n  constructor(private qcs: QuestionControlService,\n              private store: Store<fromAppReducers.AppState>,\n              private dss: DataStorageService) {\n  }\n\n  ngOnInit() {\n    this.unlockFields = false;\n    this.extendedRowView = this.store.select('tables', 'extendedRowView');\n    this.extendedRowView.subscribe((value: boolean) => {\n      this.extendedRowViewValue = value;\n    });\n    this.editRowMode = this.store.select('tables', 'editRowMode');\n    this.row = this.store.select('tables', 'editedRow');\n    this.header = this.store.select('tables', 'tableDefinition');\n    this.header.subscribe((header: TableDefinitionModel) => {\n      this.selectedTableName = header[0].name;\n    });\n    this.row.subscribe(row => {\n      this.createUpdateRowForm(row);\n      this.selesctedRow = row;\n    });\n    this.newRowMode = this.store.select('tables', 'newRowMode');\n    this.newRowMode.subscribe(() => {\n      this.createNewRowForm();\n    });\n  }\n\n  createNewRowForm() {\n    this.header.subscribe(header => {\n      if (header) {\n        this.newRowForm =\n          new FormGroup({\n            'id': new FormControl(),\n            'name': new FormControl(),\n            'createdBy': new FormControl(),\n            'createdOn': new FormControl(),\n            'lastModifiedBy': new FormControl(),\n            'lastModifiedOn': new FormControl(),\n            'columnValueDtos': new FormArray([]),\n            'taskDtos': new FormArray([])\n          });\n\n        header[0]['columnDetailDefinitionDtoList'].forEach((column) => {\n          (<FormArray>this.newRowForm.get('columnValueDtos')).push(\n            this.qcs.toFormGroup([new Question({key: column.type, value: ''})])\n          );\n        });\n      }\n    });\n  }\n\n  createUpdateRowForm(row) {\n\n    if (row) {\n      this.updateRowForm =\n        new FormGroup({\n          'id': new FormControl(row.id),\n          'name': new FormControl(row.name),\n          'createdBy': new FormControl(row.createdBy),\n          'createdOn': new FormControl(row.createdOn),\n          'lastModifiedBy': new FormControl(row.lastModifiedBy),\n          'lastModifiedOn': new FormControl(row.lastModifiedOn),\n          'columnValueDtos': new FormArray([]),\n          'taskDtos': new FormArray([])\n        });\n\n      row.columnValueDtos.forEach((cell) => {\n        (<FormArray>this.updateRowForm.get('columnValueDtos')).push(\n          this.qcs.toFormGroup([new Question({key: Object.keys(cell), value: cell[Object.keys(cell)[0]].value})])\n        );\n      });\n      row.taskDtos.forEach(() => {\n        (<FormArray>this.updateRowForm.get('taskDtos')).push(\n          new FormGroup({\n            'id': new FormControl(),\n            'name': new FormControl(),\n            'description': new FormControl(),\n            'status': new FormControl(),\n            'userNames': new FormArray([]),\n            'taskDtos': new FormArray([])\n          })\n        );\n      });\n    }\n  }\n\n  // show() { TODO remove\n  //   this.row.subscribe(this.updateRowForm.value);\n  // }\n\n  onToggleRowEditMode() { // TODO reset all details state\n    this.store.dispatch(new TablesActions.SetEditRowMode(false));\n    this.store.dispatch(new TablesActions.SetNewRowModeAction(false));\n    this.store.dispatch(new TaskActions.SetTaskDetailsModeAction(false));\n    this.store.dispatch(new TaskActions.SetShowedTaskAction(null));\n\n    this.unlockFields = false;\n  }\n\n  onSubmit() {\n    if (this.unlockFields) {\n      this.header.forEach(header => {\n        this.dss.updateRow(header[0].name, mapForm(this.updateRowForm.value));\n      });\n      this.onToggleRowEditMode();\n    }\n\n    function mapForm(formValue) { //TODO remove?\n      formValue.columnValueDtos.forEach((value, i) => {\n        if (Object.keys(value[Object.keys(value)[0]])[0] !== 'value') {\n          const mappedColumnValue = {};\n          mappedColumnValue[Object.keys(value)[0]] = {value: value[Object.keys(value)[0]]};\n          formValue.columnValueDtos[i] = mappedColumnValue;\n        }\n      });\n      return formValue;\n    }\n  }\n\n  onSaveNewRow() {\n    const newRow = this.mapNewRow();\n    this.header.forEach(header => {\n      this.dss.addNewRow(header[0].name, newRow);\n    });\n  }\n\n  mapNewRow() {\n    const newRow = this.newRowForm.value;\n    const mapedNewRow = {\n      id: this.newRowForm.value.id,\n      name: this.newRowForm.value.name,\n      createdBy: this.newRowForm.value.createdBy,\n      createdOn: this.newRowForm.value.createdOn,\n      lastModifiedBy: this.newRowForm.value.lastModifiedBy,\n      lastModifiedOn: this.newRowForm.value.lastModifiedOn,\n      columnValueDtos: [],\n      taskDtos: []\n    };\n\n    newRow.columnValueDtos.forEach(value => {\n      const newValue = {};\n      newValue[Object.keys(value)[0]] = {value: value[Object.keys(value)[0]]};\n      mapedNewRow.columnValueDtos.push(newValue);\n    });\n\n    return mapedNewRow;\n  }\n\n  toggleUnlock() {\n    this.unlockFields = !this.unlockFields;\n  }\n\n  ngOnDestroy(): void {\n  }\n\n  onAddTask() {\n    this.store.dispatch(new TaskActions.SetTaskDetailsModeAction(true));\n    this.store.dispatch(new TaskActions.SetShowedTaskAction(null));\n  }\n\n  onShowTask(task: TaskModel) {\n    this.selectedTask = task;\n  }\n\n  onShowTaskDetails(task: TaskModel) {\n    this.store.dispatch(new TaskActions.SetTaskDetailsModeAction(true));\n    this.store.dispatch(new TaskActions.SetShowedTaskAction(task));\n  }\n\n  onDeleteRow() {\n    console.log(this.selesctedRow);\n    this.dss.deleteRow(this.selectedTableName, this.selesctedRow.id);\n  }\n\n  onDeleteTask(taskId: number) {\n    this.dss.deleteTask(this.selectedTableName, taskId, this.selesctedRow.id);\n  }\n\n  switchExtendedRowView() {\n    this.store.dispatch(new TablesActions.SetExtendedRowView(!this.extendedRowViewValue));\n  }\n}\n","import {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {QuestionBase} from './value-types/question-base.model';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class QuestionControlService {\n  constructor() { }\n\n  toFormGroup(questions: QuestionBase<any>[] ) {\n    const group: any = {};\n\n    questions.forEach(question => {\n      group[question.key] = question.required ? new FormControl(question.value || '', Validators.required)\n        : new FormControl(question.value || '');\n    });\n    return new FormGroup(group);\n  }\n}\n","module.exports = \"td {\\n  min-width: 200px;\\n  width: 200px;\\n  text-align: center;\\n  border: 1px solid #32383e;\\n  background-color: rgba(200, 200, 200, 0.05);\\n  color: lightgray !important;\\n}\\n\\ntd.description {\\n  min-width: 400px;\\n  width: 400px;\\n  text-align: justify;\\n  background-color: rgba(200, 200, 200, 0.05);\\n  border: 1px solid #32383e;\\n  color: lightgray !important;\\n}\\n\"","module.exports = \"<div class=\\\"d-flex justify-content-center\\\">\\n  <tr (click)=\\\"onEditForm()\\\" *ngIf=\\\"rowFilterState\\\" main>\\n    <td *ngFor=\\\"let cellValue of row.columnValueDtos\\\"\\n        [ngClass]=\\\"(cellValue | valueOnKey).key == 'DE' ? 'description' : '' \\\">\\n      {{(cellValue | valueOnKey).value.value }}\\n    </td>\\n    <td *ngIf=\\\"extendedTableView | async\\\">{{ row.id }}</td>\\n    <td *ngIf=\\\"extendedTableView | async\\\" hidden>{{ row.name }}</td>\\n    <td *ngIf=\\\"extendedTableView | async\\\">{{ row.createdBy}}</td>\\n    <td *ngIf=\\\"extendedTableView | async\\\">{{ row.createdOn }}</td>\\n    <td *ngIf=\\\"extendedTableView | async\\\">{{ row.lastModifiedBy }}</td>\\n    <td *ngIf=\\\"extendedTableView | async\\\">{{ row.lastModifiedOn }}</td>\\n    <td *ngIf=\\\"extendedTableView | async\\\">{{ row.taskDtos.length }}</td>\\n  </tr>\\n</div>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {FormArray, FormControl, FormGroup} from '@angular/forms';\nimport {QuestionControlService} from './question-control.service';\nimport {ExtendedFilterModel, RowContentModel, TableDefinitionModel} from '../../shared/table.model';\nimport {Question} from './value-types/question-base.model';\nimport {Observable} from 'rxjs/Observable';\nimport {Store} from '@ngrx/store';\nimport {DataStorageService} from '../../shared/data-storage.service';\nimport * as fromAppReducers from '../../shared/store/app.reducers';\nimport * as TablesActions from '../../shared/store/table/tables.actions';\nimport {FilterService} from '../../shared/filter/filter.service';\n\n@Component({\n  selector: 'app-row',\n  templateUrl: './row.component.html',\n  styleUrls: ['./row.component.css']\n})\nexport class RowComponent implements OnInit {\n  @Input() row: RowContentModel;\n  @Input() header: TableDefinitionModel;\n  rowForm: FormGroup;\n  filter: Observable<string>;\n  rowFilterState = true;\n  extendedFilterContent: Observable<ExtendedFilterModel>;\n  extendedTableView: Observable<boolean>;\n\n\n  constructor(private qcs: QuestionControlService,\n              private store: Store<fromAppReducers.AppState>,\n              private dss: DataStorageService,\n              private filterService: FilterService) {\n  }\n\n  ngOnInit() {\n    this.initForm();\n    this.filter = this.store.select('tables', 'tableFilter');\n    // this.editMode = this.store.select('tables', 'editRowMode');\n    this.extendedTableView = this.store.select('tables', 'extendedTableView');\n    this.filter.subscribe(filter => {\n      if (filter !== '') {\n        this.rowFilterState = this.filterService.runFilterTable(this.row, filter);\n      } else {\n        this.rowFilterState = true;\n      }\n    });\n    this.extendedFilterContent = this.store.select('tables', 'extendedFilterContent');\n  }\n\n\n  private initForm() {\n    this.rowForm =\n      new FormGroup({\n        'id': new FormControl(this.row.id),\n        'name': new FormControl(this.row.name),\n        'createdBy': new FormControl(this.row.createdBy),\n        'createdOn': new FormControl(this.row.createdOn),\n        'lastModifiedBy': new FormControl(this.row.lastModifiedBy),\n        'lastModifiedOn': new FormControl(this.row.lastModifiedOn),\n        'columnValueDtos': new FormArray([])\n      });\n\n    this.row.columnValueDtos.forEach((cell) => {\n      (<FormArray>this.rowForm.get('columnValueDtos')).push(\n        this.qcs.toFormGroup([new Question({key: Object.keys(cell), value: RowComponent.getMappedValue(cell)})])\n      );\n    });\n  }\n\n  onEditForm() {\n    this.store.dispatch(new TablesActions.SetNewRowModeAction(false));\n    this.store.dispatch(new TablesActions.SetEditRowMode(true));\n    this.store.dispatch(new TablesActions.SetEditedRow(this.row));\n  }\n\n  static getMappedValue(object): string {\n    return object[Object.keys(object)[0]].value.toString();\n  }\n}\n","export class QuestionBase<T> {\n  value: T;\n  key: string;\n  label: string;\n  required: boolean;\n  order: number;\n  controlType: string;\n\n  constructor(options: {\n    value?: T,\n    key?: string,\n    label?: string,\n    required?: boolean,\n    order?: number,\n    controlType?: string\n  } = {}) {\n    this.value = options.value;\n    this.key = options.key || '';\n    this.label = options.label || '';\n    this.required = !!options.required;\n    this.order = options.order === undefined ? 1 : options.order;\n    this.controlType = options.controlType || '';\n  }\n}\n\nexport class Question extends QuestionBase<string> {\n  controlType = 'textbox';\n  type: string;\n\n  constructor(options: {} = {}) {\n    super(options);\n    this.type = options['type'] || '';\n  }\n}\n","module.exports = \"td {\\n  min-width: 200px;\\n  width: 200px;\\n  border: 1px solid #083E46;\\n}\\n\\ntd.description {\\n  min-width: 400px;\\n  width: 400px;\\n}\\n\\ntr {\\n  border: 1px solid #083E46;\\n}\\n\\n.form-control {\\n  background-color: rgba(200,200,200,0.05);\\n  border: none;\\n  color: gray !important;\\n}\\n\"","module.exports = \"<div class=\\\"d-flex justify-content-center\\\">\\n  <tr *ngIf=\\\"(header| async) && !(extendedFilterMode |async)\\\">\\n    <td *ngFor=\\\"let column of (header| async)[0]?.columnDetailDefinitionDtoList; let i = index\\\"\\n        [ngClass]=\\\"column.type== 'DE' ? 'description' : '' \\\"\\n        style=\\\"border-top: 1px solid #083E46\\\">\\n      <div class=\\\"d-flex justify-content-between\\\">\\n        <span class=\\\"text-info\\\">{{column.name }}</span>\\n        <button class=\\\"btn btn-outline-info\\\" (click)=\\\"sort({name:'column', index: i, dataType: column.type, asc: !sortContent.asc})\\\">\\n          <i class=\\\"text-info fas fa-arrows-alt-v\\\"></i>\\n        </button>\\n      </div>\\n\\n    </td>\\n    <div *ngIf=\\\"extendedTableView | async\\\">\\n      <td>\\n        <div class=\\\"d-flex justify-content-between\\\">\\n          <span class=\\\"text-info\\\">ID</span>\\n          <button class=\\\"btn btn-outline-info\\\"\\n                  (click)=\\\"sort({name:'id', index: 0, dataType: 'IN', asc: !sortContent.asc })\\\">\\n            <i class=\\\"text-info fas fa-arrows-alt-v\\\"></i>\\n          </button>\\n        </div>\\n      </td>\\n      <td hidden>\\n        <div class=\\\"d-flex justify-content-between\\\"></div>\\n        <span class=\\\"text-info\\\">NAME</span>\\n        <button class=\\\"btn btn-outline-info\\\" (click)=\\\"sort({name:'name', index: 0, dataType: 'ST', asc: !sortContent.asc})\\\">\\n          <i class=\\\"text-info fas fa-arrows-alt-v\\\"></i>\\n        </button>\\n      </td>\\n      <td>\\n        <div class=\\\"d-flex justify-content-between\\\">\\n          <span class=\\\"text-info\\\">Created by</span>\\n          <button class=\\\"btn btn-outline-info\\\" (click)=\\\"sort({name:'createdBy', index: 0,  dataType: 'ST', asc: !sortContent.asc})\\\">\\n            <i class=\\\"text-info fas fa-arrows-alt-v\\\"></i>\\n          </button>\\n        </div>\\n      </td>\\n      <td>\\n        <div class=\\\"d-flex justify-content-between\\\">\\n          <span class=\\\"text-info\\\">Created on</span>\\n          <button class=\\\"btn btn-outline-info\\\" (click)=\\\"sort({name:'createdOn', index: 0,  dataType: 'DT', asc: !sortContent.asc})\\\">\\n            <i class=\\\"text-info fas fa-arrows-alt-v\\\"></i>\\n          </button>\\n        </div>\\n      </td>\\n      <td>\\n        <div class=\\\"d-flex justify-content-between\\\">\\n          <span class=\\\"text-info\\\">Last Modified By</span>\\n          <button class=\\\"btn btn-outline-info\\\" (click)=\\\"sort({name:'lastModifiedBy', index: 0,  dataType: 'ST', asc: !sortContent.asc})\\\">\\n            <i class=\\\"text-info fas fa-arrows-alt-v\\\"></i>\\n          </button>\\n        </div>\\n      </td>\\n      <td>\\n        <div class=\\\"d-flex justify-content-between\\\">\\n          <span class=\\\"text-info\\\">Last Modified On</span>\\n          <button class=\\\"btn btn-outline-info\\\" (click)=\\\"sort({name:'lastModifiedOn', index: 0,  dataType: 'DT', asc: !sortContent.asc})\\\">\\n            <i class=\\\"text-info fas fa-arrows-alt-v\\\"></i>\\n          </button>\\n        </div>\\n      </td>\\n      <td>\\n        <div class=\\\"d-flex justify-content-between\\\">\\n          <span class=\\\"text-info\\\">Tasks</span>\\n          <button class=\\\"btn btn-outline-info\\\" (click)=\\\"sort({name:'taskDtos', index: 0,  dataType: 'IN', asc: !sortContent.asc})\\\">\\n            <i class=\\\"text-info fas fa-arrows-alt-v\\\"></i>\\n          </button>\\n        </div>\\n      </td>\\n    </div>\\n  </tr>\\n  <form *ngIf=\\\"extendedFilterMode |async\\\" [formGroup]=\\\"filterForm\\\">\\n    <tr>\\n    <span formArrayName=\\\"columnValueDtos\\\">\\n      <td *ngFor=\\\"let column of (header| async)[0]?.columnDetailDefinitionDtoList; let i = index\\\" formGroupName=\\\"{{i}}\\\"\\n          [ngClass]=\\\"column.type== 'DE' ? 'description' : '' \\\"\\n      >\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"{{ column.name }}\\\" formControlName=\\\"value\\\"\\n               (keyup)=\\\"onRunExtendedFilter()\\\">\\n      </td>\\n    </span>\\n      <td><input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"ID\\\" formControlName=\\\"id\\\"\\n                 (keyup)=\\\"onRunExtendedFilter()\\\"></td>\\n      <td hidden><input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"NAME\\\" formControlName=\\\"name\\\"\\n                        (keyup)=\\\"onRunExtendedFilter()\\\"></td>\\n      <td><input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Created by\\\" formControlName=\\\"createdBy\\\"\\n                 (keyup)=\\\"onRunExtendedFilter()\\\"></td>\\n      <td><input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Created on\\\" formControlName=\\\"createdOn\\\"\\n                 (keyup)=\\\"onRunExtendedFilter()\\\"></td>\\n      <td><input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Last Modified By\\\" formControlName=\\\"lastModifiedBy\\\"\\n                 (keyup)=\\\"onRunExtendedFilter()\\\"></td>\\n      <td><input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Last Modified On\\\" formControlName=\\\"lastModifiedOn\\\"\\n                 (keyup)=\\\"onRunExtendedFilter()\\\"></td>\\n      <td><input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Tasks\\\" formControlName=\\\"taskDtos\\\"\\n                 (keyup)=\\\"onRunExtendedFilter()\\\"></td>\\n    </tr>\\n  </form>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ExtendedFilterModel, TableDefinitionModel} from '../../shared/table.model';\nimport {Store} from '@ngrx/store';\nimport * as fromAppReducers from '../../shared/store/app.reducers';\nimport {Observable} from 'rxjs/Observable';\nimport * as TablesActions from '../../shared/store/table/tables.actions';\nimport {FormArray, FormControl, FormGroup} from '@angular/forms';\nimport {SortModel} from '../../shared/sort/sort.model';\n\n@Component({\n  selector: 'app-table-header',\n  templateUrl: './table-header.component.html',\n  styleUrls: ['./table-header.component.css']\n})\nexport class TableHeaderComponent implements OnInit {\n  header: Observable<TableDefinitionModel>;\n  editRowMode: Observable<boolean>;\n  extendedFilterMode: Observable<boolean>;\n  filterForm: FormGroup;\n  extendedTableView: Observable<boolean>;\n  sortContent: SortModel;\n\n  constructor(private contentStore: Store<fromAppReducers.AppState>) {\n  }\n\n  ngOnInit() {\n    this.contentStore.select('tables', 'sortContent').subscribe((sortContent: SortModel) => {\n      this.sortContent = sortContent;\n    });\n    this.extendedTableView = this.contentStore.select('tables', 'extendedTableView');\n    this.header = this.contentStore.select('tables', 'tableDefinition');\n    this.editRowMode = this.contentStore.select('tables', 'editRowMode');\n    this.extendedFilterMode = this.contentStore.select('tables', 'extendedFilterMode');\n    this.extendedFilterMode.subscribe((mode) => {\n        if (mode) {\n          this.header.forEach((header) => {\n            if (header) {\n              this.setForm(header);\n            }\n          });\n        } else {\n          this.filterForm = null;\n        }\n      }\n    );\n  }\n\n  setForm(header: TableDefinitionModel) {\n    this.filterForm = new FormGroup({\n      'id': new FormControl(),\n      'name': new FormControl(),\n      'createdBy': new FormControl(),\n      'createdOn': new FormControl(),\n      'lastModifiedBy': new FormControl(),\n      'lastModifiedOn': new FormControl(),\n      'columnValueDtos': new FormArray([]),\n      'taskDtos': new FormControl()\n    });\n\n    header[0].columnDetailDefinitionDtoList.forEach(() => { // (cell, i) => {\n      (<FormArray>this.filterForm.get('columnValueDtos')).push(new FormGroup({\n        'value': new FormControl()\n      }));\n    });\n  }\n\n  // onNewRow() { // TODO remove?\n  //   this.contentStore.dispatch(new TablesActions.SetEditRowMode(true));\n  // }\n\n  getFormValues(): ExtendedFilterModel {\n    return this.filterForm['value'];\n  }\n\n  onRunExtendedFilter() {\n    this.contentStore.dispatch(new TablesActions.SetExtendedFilter(this.getFormValues()));\n  }\n\n  sort(payload: SortModel) {\n    this.contentStore.dispatch(new TablesActions.SetSortContent(payload));\n  }\n}\n","module.exports = \".header-fixed {\\n  width: 100%\\n}\\n\\n.header-fixed > thead,\\n.header-fixed > tbody,\\n.header-fixed > thead > tr,\\n.header-fixed > tbody > tr,\\n.header-fixed > thead > tr > th,\\n.header-fixed > tbody > tr > td {\\n  display: block;\\n}\\n\\n.header-fixed > tbody > tr:after,\\n.header-fixed > thead > tr:after {\\n  content: ' ';\\n  display: block;\\n  visibility: hidden;\\n  clear: both;\\n}\\n\\n.header-fixed > tbody {\\n  overflow: hidden;\\n  overflow-y: auto;\\n  height: 75vh;\\n}\\n\\n.header-fixed > tbody > tr > td,\\n.header-fixed > thead > tr > th {\\n  width: 20%;\\n  float: left;\\n}\\n\\n/* width */\\n\\n::-webkit-scrollbar {\\n  width: 20px;\\n}\\n\\n/* Track */\\n\\n::-webkit-scrollbar-track {\\n  border-radius: 10px;\\n}\\n\\n/* Handle */\\n\\n::-webkit-scrollbar-thumb {\\n  background: grey;\\n  border-radius: 10px;\\n}\\n\\n/* Handle on hover */\\n\\n::-webkit-scrollbar-thumb:hover {\\n  background: darkgrey;\\n}\\n\\ntbody {\\n  max-height: 700px;\\n  height: auto;\\n}\\n\\ntable {\\n  margin-top: 10px;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\" style=\\\"margin: 0 10px;padding: 0;\\\">\\n  <div [ngClass]=\\\"(tableState | async).editRowMode ? ((taskDetailsMode | async) ? 'col-12 col-md-6 col-lg-4' : 'col-12 col-md-6 col-lg-4') : 'd-none'\\\"\\n       style=\\\"margin: 41px 0\\\">\\n    <app-row-details *ngIf=\\\"(tableState | async).editRowMode\\\"></app-row-details>\\n  </div>\\n  <div [ngClass]=\\\"(taskDetailsMode | async) ? 'col-12 col-md-6 col-lg-4' : 'd-none'\\\" style=\\\"margin: 41px 0\\\">\\n    <app-task></app-task>\\n  </div>\\n  <div [ngClass]=\\\"(tableState | async).editRowMode ?\\n                        ((taskDetailsMode | async) ? 'col-lg-4' : 'col-md-6 col-lg-8')\\n                        : ('col-12')\\\" style=\\\"padding: 0\\\"\\n  >\\n\\n\\n    <div class=\\\"panel\\\">\\n      {{showSpinner | json}}\\n      <app-menu *ngIf=\\\"(tableState | async).tablesNames.length != 0\\\"\\n                [tableNames]=\\\"(tableState | async).tablesNames\\\"\\n                (choosenNameChanged)=\\\"setTable($event)\\\"></app-menu>\\n      <div class=\\\"panel-body\\\" style=\\\"padding: 0\\\">\\n\\n        <div *ngIf=\\\"tableChosen && !showSpinner\\\">\\n          <div class=\\\"table-responsive\\\" style=\\\"border-radius: 10px\\\">\\n            <table\\n              class=\\\"table table-hover header-fixed table-striped\\\"\\n              style=\\\"margin-bottom: 0\\\"\\n            >\\n              <thead>\\n                <app-table-header></app-table-header>\\n              </thead>\\n              <tbody style=\\\"max-height: 700px; height: auto; background-color: transparent\\\">\\n                <app-row\\n                  *ngFor=\\\"let row of ((tableState | async).tableContent)  | extendedFilter: extendedFilterContent : filterSelect | orderBy : sortContentValue\\\"\\n                  [row]=\\\"row\\\"\\n                  [header]=\\\"(tableState|async).tableDefinition\\\">\\n                </app-row>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n        <app-spinner *ngIf=\\\"tableChosen && showSpinner\\\"></app-spinner>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {ExtendedFilterModel} from '../shared/table.model';\nimport {Observable} from 'rxjs/Observable';\nimport {DataStorageService} from '../shared/data-storage.service';\nimport * as fromAppReducers from '../shared/store/app.reducers';\nimport * as fromTableReducers from '../shared/store/table/tables.reducers';\nimport * as TablesActions from '../shared/store/table/tables.actions';\nimport * as UsersAction from '../shared/store/user/users.actions';\nimport {SortModel} from '../shared/sort/sort.model';\n\n@Component({\n  selector: 'app-tables',\n  templateUrl: './tables.component.html',\n  styleUrls: ['./tables.component.css']\n})\nexport class TablesComponent implements OnInit {\n  tableState: Observable<fromTableReducers.TableState>;\n  tableChosen = false;\n  taskDetailsMode: Observable<boolean>;\n  // extendedFilterContentState: Observable<ExtendedFilterModel>;\n  extendedFilterContent: ExtendedFilterModel;\n  filterSelect: boolean;\n  sortContent: Observable<SortModel>;\n  sortContentValue: SortModel;\n\n  showSpinner = true;\n\n\n  constructor(private contentStore: Store<fromAppReducers.AppState>,\n              private dss: DataStorageService) {\n  }\n\n  ngOnInit() {\n    this.dss.getTableNames();\n    this.tableState = this.contentStore.select('tables');\n    this.tableState.subscribe(() => {\n      this.showSpinner = false;\n    });\n    this.taskDetailsMode = this.contentStore.select('tasks', 'taskDetailsMode');\n    this.contentStore.select('tables', 'extendedFilterContent').subscribe((extendedFilterContent: ExtendedFilterModel) => {\n      this.extendedFilterContent = extendedFilterContent;\n    });\n    this.contentStore.select('tables', 'filterSelect').subscribe((filterSelect: boolean) => {\n      this.filterSelect = filterSelect;\n    });\n    this.sortContent = this.contentStore.select('tables', 'sortContent');\n    this.sortContent.subscribe((sortContent: SortModel) => {\n      this.sortContentValue = sortContent;\n    });\n  }\n\n  // onToggleRowEditMode() {\n  //   this.contentStore.dispatch(new TablesActions.SetEditRowMode(false));\n  // }\n\n  setTable(tableName) {// TODO: RESET STANU PO ZMIANIE STOLU\n    this.showSpinner = true;\n    this.contentStore.dispatch(new TablesActions.SwitchTableReset());\n    this.contentStore.dispatch(new UsersAction.SwitchTableReset());\n    this.dss.getTableHeaderByName(tableName);\n    this.dss.getTableRowsByName(tableName);\n    this.tableChosen = true;\n  }\n}\n","module.exports = \".form-control {\\n  background-color: rgba(200,200,200,0.05);\\n  border: none;\\n  color: gray !important;\\n}\\n\\nli, .list-group-item {\\n  border: 1px solid #32383e;\\n  background-color: rgba(200, 200, 200, 0.05);\\n  color: gray !important;\\n}\\n\"","module.exports = \"<div *ngIf=\\\"(showedTask | async)\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item text-white text-center\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">\\n      <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onHideTaskDetails()\\\">Hide Details</button>\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"list-group-item d-flex justify-content-between\\\">\\n        <span class=\\\"text-info\\\">ID: </span>\\n        <span>{{(showedTask | async)?.id}}</span>\\n      </div>\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"list-group-item d-flex justify-content-between\\\">\\n        <span class=\\\"text-info\\\">Name:</span>\\n        <span>{{ (showedTask | async)?.name}}</span>\\n      </div>\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"list-group-item d-flex justify-content-between\\\">\\n        <span class=\\\"text-info\\\">Description:</span>\\n        <span>{{ (showedTask | async)?.description }}</span>\\n      </div>\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"list-group-item d-flex justify-content-between\\\">\\n        <span class=\\\"text-info\\\">Status:</span>\\n        <span>{{(showedTask | async)?.status}}</span>\\n      </div>\\n    </li>\\n    <li class=\\\"list-group-item text-white text-center\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">\\n      <form class=\\\"form-group\\\">\\n        <div class=\\\"form-group d-flex justify-content-between align-items-center\\\" style=\\\"margin-top: 5px\\\">\\n          <div class=\\\"input-group\\\">\\n            <select #userContol class=\\\"form-control\\\">\\n              <option>{{(tableUsers| async).length != 0 ? 'Assign user' : 'No available users to assign'}}</option>\\n              <option *ngFor=\\\"let tableUser of (tableUsers| async)\\\"> {{ tableUser }}</option>\\n            </select>\\n            <div class=\\\"input-group-append\\\" *ngIf=\\\"(tableUsers| async).length != 0\\\">\\n              <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onAssignUserToTask(userContol.value)\\\">+</button>\\n              <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onRemoveUserFromTask(userContol.value)\\\">-</button>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </li>\\n    <li class=\\\"list-group-item text-white text-center\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\"><p\\n      style=\\\"margin-bottom: 3px\\\">{{ (showedTask | async)?.userNames.length <= 0 ? 'No assigned users' : 'Assigned\\n      Users:'}}</p></li>\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\" let username of (showedTask | async)?.userNames\\\">\\n      <span class=\\\"text-info\\\">{{username}}</span>\\n    </li>\\n    <li class=\\\"list-group-item text-white text-center\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">\\n      {{ (showedTask | async)?.taskDtos.length <= 0 ? 'No tasks' : 'Assigned Tasks:'}}\\n    </li>\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let taskDto of (showedTask | async)?.taskDtos\\\">\\n      <!--<app-task></app-task>-->\\n    </li>\\n  </ul>\\n</div>\\n\\n<div *ngIf=\\\"(showedTask | async) == null\\\">\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"text-info\\\">Name:</label>\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" #nameEl>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"text-info\\\">Description:</label>\\n      <textarea rows=\\\"20\\\" class=\\\"form-control\\\" #descriptionEl></textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"text-info\\\">Status:</label>\\n      <select class=\\\"form-control\\\" #statusEl>\\n        <option> {{status[0]}}</option>\\n        <option> {{status[1]}}</option>\\n        <option> {{status[2]}}</option>\\n        <option> {{status[3]}}</option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-dark text-white\\\"\\n              (click)=\\\"onSaveRowNewTask({name: nameEl.value,description: descriptionEl.value,status: statusEl.value})\\\">\\n        Submit\\n      </button>\\n      <button class=\\\"btn btn-dark text-white\\\" (click)=\\\"onHideTaskDetails()\\\">Abort</button>\\n    </div>\\n  </form>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {RowContentModel, Status, TableDefinitionModel, TaskModel} from '../../shared/table.model';\nimport {Store} from '@ngrx/store';\nimport * as fromAppReducers from '../../shared/store/app.reducers';\nimport * as TaskActions from '../../shared/store/task/tasks.actions';\nimport {Observable} from 'rxjs/Observable';\nimport {DataStorageService} from '../../shared/data-storage.service';\nimport {UserModel} from '../../user/user.model';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n  // @Input() task: TaskModel;\n  showedTask: Observable<TaskModel>;\n  task: TaskModel;\n  // showedInnerTask: Observable<TaskModel>;\n  status = Status;\n  editedRow: Observable<RowContentModel>;\n  row: RowContentModel;\n  tableUsers: Observable<UserModel[]>;\n  tableDefinition: Observable<TableDefinitionModel>;\n  tableName: string;\n\n\n  constructor(private store: Store<fromAppReducers.AppState>,\n              private dss: DataStorageService) { }\n\n\n  ngOnInit() {\n    this.showedTask = this.store.select('tasks', 'showedTask');\n    this.showedTask.forEach((task) => {\n      this.task = task;\n    });\n    this.editedRow = this.store.select('tables', 'editedRow');\n    this.editedRow.forEach((row: RowContentModel) => {\n      this.row = row;\n    });\n    this.tableDefinition = this.store.select('tables', 'tableDefinition');\n    this.tableDefinition.subscribe((tableDefinition: TableDefinitionModel) => {\n      // console.log( 'setTableUsers');\n      // console.log(tableDefinition);\n\n      if (tableDefinition) { // TODO: ???\n        this.tableName = tableDefinition[0].name;\n        this.dss.setTableUsers(this.tableName);\n      }\n    });\n    this.tableUsers = this.store.select('tables', 'tableUsers');\n  }\n\n  onHideTaskDetails() {\n    this.store.dispatch(new TaskActions.SetTaskDetailsModeAction(false));\n    this.store.dispatch(new TaskActions.SetShowedTaskAction(null));\n  }\n\n  onSaveRowNewTask(newTaskDetails: { name: string, description: string, status: Status }) {\n    const task: TaskModel = {\n      id: null,\n      name: newTaskDetails.name,\n      description: newTaskDetails.description,\n      status: newTaskDetails.status,\n      userNames: [],\n      taskDtos: []\n    };\n    this.dss.saveNewTask(this.tableName, task, this.row.id);\n  }\n\n  onAssignUserToTask(username: string ) {\n    console.log('onAssignUserToTask username >' + username + '<');\n    this.dss.onAssignUserToTask(this.tableName, this.row.id, this.task.id , username);\n  }\n\n  onRemoveUserFromTask(username: string) {\n    this.dss.onRemoveUserFromTask(this.tableName, this.row.id, this.task.id , username);\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title style=\\\"text-align: center\\\">{{passedData?.message || 'Are you sure?'}}</h1>\\n<mat-dialog-actions>\\n  <button mat-button [mat-dialog-close]=\\\"true\\\">Yes</button>\\n  <button mat-button [mat-dialog-close]=\\\"false\\\">No</button>\\n</mat-dialog-actions>\\n\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from \"@angular/material\";\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public passedData: any) { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Component, EmbeddedViewRef, Inject} from \"@angular/core\";\nimport {MAT_SNACK_BAR_DATA, MatSnackBarRef} from \"@angular/material\";\n\n@Component({\n  selector: 'app-snack-bar',\n  template: `\n    <section class=\"form\"\n             fxLayout\n             fxLayoutAlign=\"center\">\n      <mat-card fxFlex.xs=\"100%\" fxFlex=\"100%\">\n        <mat-card-title fxLayoutAlign=\"center\">{{message || 'What!!!'}}</mat-card-title>\n        <mat-card-content fxLayoutAlign=\"center\">\n          <button mat-button color=\"primary\" (click)=\"dismiss()\">{{action || 'Dismiss'}}</button>\n          <button mat-button color=\"primary\" (click)=\"dismissWithAction()\">{{action || 'Dismiss '}} with action</button>\n        </mat-card-content>\n      </mat-card>\n    </section>\n  `,\n  styles: [`\n    ::ng-deep .styled-snack {\n      padding: 0;\n      margin: 0;\n    }\n  `],\n})\nexport class SnackBarComponent {\n  public ref: MatSnackBarRef<SnackBarComponent>;\n  message: string;\n  action: string;\n\n\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: { message: string, action: string }) {\n    this.message = data.message;\n    this.action = data.action;\n  }\n\n  dismiss() {\n\n    this.ref.dismiss();\n  }\n\n  dismissWithAction() {\n    this.ref.dismissWithAction();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div fxLayoutAlign=\\\"center center\\\">\\n  <mat-form-field fxFlex=\\\"100%\\\">\\n    <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n  </mat-form-field>\\n</div>\\n<mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n  <ng-container matColumnDef=\\\"date\\\" >\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{element.date | date}}</mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"name\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</mat-cell>\\n  </ng-container>\\n\\n  <ng-container matColumnDef=\\\"number\\\">\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Number</mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let element\\\">{{element.number | number}}</mat-cell>\\n  </ng-container>\\n\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\n</mat-table>\\n\\n<mat-paginator #paginator [pageSize]=\\\"1\\\" [pageSizeOptions]=\\\"[5,10,20]\\\">\\n</mat-paginator>\\n\"","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css']\n})\nexport class TableComponent implements OnInit, AfterViewInit {\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  displayedColumns = ['date', 'name', 'number'];\n  dataSource = new MatTableDataSource<Element>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.dataSource.data = [\n      {date: new Date(), name: '1', number: 5},\n      {date: new Date(), name: '2', number: 2},\n      {date: new Date(), name: '4', number: 3},\n      {date: new Date(), name: '3', number: 4},\n      {date: new Date(), name: '5', number: 1},\n      {date: new Date(), name: '1', number: 5},\n      {date: new Date(), name: '2', number: 2},\n      {date: new Date(), name: '4', number: 3},\n      {date: new Date(), name: '3', number: 4},\n      {date: new Date(), name: '5', number: 1},\n      {date: new Date(), name: '1', number: 5},\n      {date: new Date(), name: '2', number: 2},\n      {date: new Date(), name: '4', number: 3},\n      {date: new Date(), name: '3', number: 4},\n      {date: new Date(), name: '5', number: 1},\n      {date: new Date(), name: '1', number: 5},\n      {date: new Date(), name: '2', number: 2},\n      {date: new Date(), name: '4', number: 3},\n      {date: new Date(), name: '3', number: 4},\n      {date: new Date(), name: '5', number: 1}\n    ]\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  doFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n\nexport interface Element {\n  date: Date;\n  name: string;\n  number: number\n}\n","module.exports = \"/*mat-form-field {*/\\n  /*width: 400px;*/\\n  /*}*/\\n  mat-sidenav-container, mat-sidenav-container, mat-sidenav {\\n  height: 100%;\\n}\\n  mat-sidenav {\\n  width: 250px;\\n}\\n  a {\\n  text-decoration: none;\\n  color: white;\\n}\\n  a:hover,\\na:active {\\n  color: lightgray;\\n}\\n  .navigation-items {\\n  list-style: none;\\n  padding: 0;\\n  margin: 0;\\n}\\n  .nav-caption {\\n  display: inline-block;\\n  padding-left: 6px;\\n}\\n  section {\\n  padding: 10px;\\n}\\n\"","module.exports = \"<div [ngClass]=\\\"theme ? 'my-themed':'candy-themed'\\\">\\n  <mat-sidenav-container>\\n    <mat-sidenav #sidenav role=\\\"navigation\\\">\\n      <mat-nav-list>\\n        <a mat-list-item (click)=\\\"sidenav.close()\\\">\\n          <mat-icon>face</mat-icon>\\n          <span class=\\\"nav-caption\\\">Sign up</span></a>\\n        <a mat-list-item routerLink=\\\"\\\" (click)=\\\"sidenav.close()\\\">\\n          <mat-icon>person pin</mat-icon>\\n          <span class=\\\"nav-caption\\\">Login</span></a>\\n        <a mat-list-item routerLink=\\\"\\\" (click)=\\\"sidenav.close()\\\">\\n          <mat-icon>adb</mat-icon>\\n          <span class=\\\"nav-caption\\\">Training</span></a>\\n      </mat-nav-list>\\n    </mat-sidenav>\\n    <mat-sidenav-content>\\n      <mat-toolbar color=\\\"primary\\\">\\n        <div>\\n          <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\n            <mat-icon>menu</mat-icon>\\n          </button>\\n        </div>\\n        <div><a routerLink=\\\"/\\\">Project Manager</a></div>\\n        <div fxFlex\\n             fxLayout\\n             fxLayoutAlign=\\\"flex-end\\\" fxHide.xs>\\n          <ul fxLayout fxLayoutGap=\\\"10px\\\" class=\\\"navigation-items\\\">\\n            <li (click)=\\\"toggleTheme()\\\">Change color</li>\\n            <li><a routerLink=\\\"\\\">SignUp</a></li>\\n            <li><a routerLink=\\\"\\\">Login</a></li>\\n            <li><a routerLink=\\\"\\\">Training</a></li>\\n          </ul>\\n        </div>\\n      </mat-toolbar>\\n      <main>\\n        <section class=\\\"new-card\\\"\\n                 fxLayout\\n                 fxLayoutAlign=\\\"center\\\">\\n          <mat-card fxFlex.xs=\\\"100%\\\" fxFlex=\\\"50%\\\">\\n            <mat-card-title fxLayoutAlign=\\\"center\\\">Main</mat-card-title>\\n            <mat-card-content fxLayoutAlign=\\\"center\\\">\\n              <mat-form-field>\\n                <mat-select placeholder=\\\"Abc\\\">\\n                  <mat-option value=\\\"a\\\">A</mat-option>\\n                  <mat-option value=\\\"c\\\">C</mat-option>\\n                  <mat-option value=\\\"a\\\">B</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </mat-card-content>\\n            <mat-card-actions fxLayoutAlign=\\\"center\\\">\\n              <button type=\\\"submit\\\" mat-button (click)=\\\"sidenav.toggle()\\\" color=\\\"accent\\\">Toggle SideNav</button>\\n            </mat-card-actions>\\n          </mat-card>\\n        </section>\\n        <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"50px\\\" fxLayoutAlign=\\\"center center\\\">\\n          <div fxLayout fxLayoutGap=\\\"50px\\\" fxLayoutAlign=\\\"center center\\\">\\n            <p>Determinate: {{progress}}%</p>\\n            <mat-progress-spinner mode=\\\"determinate\\\" [value]=\\\"progress\\\"></mat-progress-spinner>\\n            <mat-form-field>\\n              <input #infoMessage matInput>\\n            </mat-form-field>\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"onRerunTimer(infoMessage.value)\\\">Restart</button>\\n          </div>\\n          <div fxLayout fxLayoutGap=\\\"50px\\\" fxLayoutAlign=\\\"center center\\\">\\n            <p>Indeterminate:</p>\\n            <mat-progress-spinner mode=\\\"indeterminate\\\"></mat-progress-spinner>\\n          </div>\\n        </section>\\n\\n        <section class=\\\"form\\\"\\n                 fxLayout\\n                 fxLayoutAlign=\\\"center\\\">\\n          <mat-card fxFlex.xs=\\\"100%\\\" fxFlex=\\\"50%\\\">\\n            <mat-card-content fxLayoutAlign=\\\"center\\\">\\n              <mat-form-field>\\n                <input matInput value=\\\"Message?\\\" placeholder=\\\"Message\\\" #message>\\n              </mat-form-field>\\n              <mat-form-field>\\n                <input matInput value=\\\"Close\\\" placeholder=\\\"Action\\\" #action>\\n              </mat-form-field>\\n            </mat-card-content>\\n            <mat-card-actions fxLayoutAlign=\\\"center\\\">\\n              <button mat-button (click)=\\\"showSnackBar(message.value, action.value)\\\">Show snack-bar</button>\\n            </mat-card-actions>\\n          </mat-card>\\n        </section>\\n\\n        <section class=\\\"form\\\"\\n                 fxLayout\\n                 fxLayoutAlign=\\\"center\\\">\\n          <mat-card fxFlex.xs=\\\"100%\\\" fxFlex=\\\"50%\\\">\\n            <mat-card-title fxLayoutAlign=\\\"center\\\">Form</mat-card-title>\\n            <mat-card-content fxLayoutAlign=\\\"center\\\">\\n              <form fxLayout=\\\"column\\\"\\n                    fxLayoutAlign=\\\"center center\\\"\\n                    fxLayoutGap=\\\"10px\\\"\\n                    #f=\\\"ngForm\\\"\\n                    (submit)=\\\"onSubmit(f)\\\">\\n                <mat-form-field color=\\\"accent\\\">\\n                  <input\\n                    type=\\\"email\\\"\\n                    matInput\\n                    placeholder=\\\"Your email\\\"\\n                    ngModel\\n                    name=\\\"email\\\"\\n                    email\\n                    required\\n                    #mailInput=\\\"ngModel\\\"\\n                  >\\n                  <mat-error *ngIf=\\\"mailInput.hasError('required')\\\">Email is required</mat-error>\\n                  <mat-error *ngIf=\\\"!mailInput.hasError('required')\\\">Email is invalid</mat-error>\\n                </mat-form-field>\\n                <mat-form-field color=\\\"accent\\\"\\n                                hintLabel=\\\"Min 2 characters.\\\">\\n                  <input\\n                    type=\\\"password\\\"\\n                    matInput\\n                    placeholder=\\\"Your password\\\"\\n                    ngModel\\n                    name=\\\"password\\\"\\n                    required\\n                    minlength=\\\"2\\\"\\n                    #pwInput=\\\"ngModel\\\"\\n                  >\\n                  <mat-hint align=\\\"end\\\">{{pwInput.value?.length}} / 2</mat-hint>\\n                </mat-form-field>\\n                <mat-form-field>\\n                  <input matInput\\n                         [matDatepicker]=\\\"picker\\\"\\n                         placeholder=\\\"Your Birthdate\\\"\\n                         [max]=\\\"maxDate\\\"\\n                         ngModel\\n                         required\\n                         name=\\\"bday\\\">\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #picker></mat-datepicker>\\n                </mat-form-field>\\n                <mat-checkbox\\n                  ngModel\\n                  name=\\\"terms\\\"\\n                  required\\n                  labelPosition=\\\"before\\\"\\n                  color=\\\"primary\\\"\\n                >Terms Agreement\\n                </mat-checkbox>\\n                <button mat-icon-button color=\\\"accent\\\">\\n                  <mat-icon>home</mat-icon>\\n                </button>\\n                <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"f.invalid\\\">\\n                  <span>Hit</span>\\n                </button>\\n              </form>\\n            </mat-card-content>\\n            <mat-card-actions fxLayoutAlign=\\\"center\\\">\\n            </mat-card-actions>\\n          </mat-card>\\n        </section>\\n\\n        <section class=\\\"form\\\"\\n                 fxLayout\\n                 fxLayoutAlign=\\\"center\\\">\\n          <mat-card fxFlex.xs=\\\"100%\\\" fxFlex=\\\"70%\\\">\\n            <mat-card-title fxLayoutAlign=\\\"center\\\">Table</mat-card-title>\\n            <mat-card-content fxLayoutAlign=\\\"center\\\">\\n              <app-table fxFlex=\\\"100%\\\"></app-table>\\n            </mat-card-content>\\n          </mat-card>\\n        </section>\\n\\n      </main>\\n    </mat-sidenav-content>\\n  </mat-sidenav-container>\\n</div>\\n\\n\"","import {Component, EmbeddedViewRef, OnInit, ViewChild} from '@angular/core';\nimport {NgForm} from \"@angular/forms\";\nimport {MatDialog, MatSnackBar, MatSnackBarConfig, MatSnackBarRef} from \"@angular/material\";\nimport {DialogComponent} from \"./dialog/dialog.component\";\nimport {SnackBarComponent} from \"./snack-bar/snack-bar.component\";\n\n@Component({\n  selector: 'app-training',\n  templateUrl: './training.component.html',\n  styleUrls: ['./training.component.css']\n})\nexport class TrainingComponent implements OnInit {\n  maxDate;\n  shouldRun = false;\n  openSidenav = false;\n  progress = 0;\n  timer: number;\n  theme: boolean;\n  snackBarRef: MatSnackBarRef<SnackBarComponent>;\n\n  constructor(private dialog: MatDialog, public snackBar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    this.maxDate = new Date();\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\n    this.shouldRun = true;\n    this.openSidenav = false;\n    this.restartTimer()\n  }\n\n  toggleTheme() {\n    this.theme = !this.theme;\n  }\n\n  onRerunTimer(message: string) {\n    const dialogRef = this.dialog.open(DialogComponent, {data: {message: message}});\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.restartTimer();\n      }\n    })\n  }\n\n  private restartTimer() {\n    clearInterval(this.timer);\n    this.progress = 0;\n    this.timer = setInterval(() => {\n      this.progress += 1;\n      if (this.progress >= 100) {\n        clearInterval(this.timer)\n      }\n    }, 100);\n  }\n\n  onSubmit(f: NgForm) {\n    console.log(f);\n  }\n\n  showSnackBar(message: string, action: string) {\n    this.snackBarRef = this.snackBar.openFromComponent(SnackBarComponent, {\n      panelClass: ['styled-snack'],\n      data: {\n        message: message,\n        action: action\n      }\n    });\n    this.snackBarRef.afterDismissed().subscribe((data) => console.log(data));\n    this.snackBarRef.instance.ref = this.snackBarRef;\n  }\n}\n","module.exports = \"table {\\n  background-color: rgba(0,0,0,0.05);\\n}\\ntd {\\n  border: 1px solid #32383e;\\n  padding: 30px;\\n}\\nli {\\n  border: 1px solid #32383e;\\n  background-color: rgba(200, 200, 200, 0.05);\\n  color: gray !important;\\n  padding: 30px;\\n}\\n.form-control {\\n  background-color: rgba(0,0,0,0.05);\\n  border: 1px solid #32383e;\\n}\\n.jumbotron {\\n  background: none;\\n}\\n\"","module.exports = \"<div *ngIf=\\\"(usernameState| async)\\\">\\n  <div class=\\\"jumbotron bg-transparent\\\">\\n    <div class=\\\"row d-flex justify-content-center\\\">\\n      <div class=\\\"col-6\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12 d-flex justify-content-center\\\">\\n            <div *ngIf=\\\"!editMode && !resetPasswordMode\\\">\\n              <table class=\\\"table border-secondary table-striped\\\">\\n                <tbody>\\n                <tr>\\n                  <td><span class=\\\"text-info\\\">USERNAME:</span></td>\\n                  <td><span class=\\\"text-white\\\"> {{(usernDetailsState | async)?.username}}</span></td>\\n                </tr>\\n                <tr>\\n                  <td><span class=\\\"text-info\\\">EMAIL:</span></td>\\n                  <td><span class=\\\"text-white\\\"> {{ (usernDetailsState | async)?.email }}</span></td>\\n                </tr>\\n                <tr>\\n                  <td><span class=\\\"text-info\\\">FIRSTNAME:</span></td>\\n                  <td><span class=\\\"text-white\\\">{{ (usernDetailsState | async)?.firstName }}</span></td>\\n                </tr>\\n                <tr>\\n                  <td><span class=\\\"text-info\\\">LASTNAME:</span></td>\\n                  <td><span class=\\\"text-white\\\">{{ (usernDetailsState | async)?.lastName }}</span></td>\\n                </tr>\\n                <tr>\\n                  <td><span class=\\\"text-info\\\">ENABLED:</span></td>\\n                  <td><span class=\\\"text-white\\\">{{ (usernDetailsState | async)?.enabled }}</span></td>\\n                </tr>\\n                </tbody>\\n              </table>\\n            </div>\\n\\n            <div *ngIf=\\\"editMode\\\">\\n              <form #updateDetailsForm=\\\"ngForm\\\">\\n                <ul class=\\\"list-group bg-transparent\\\">\\n                  <li class=\\\"list-group-item\\\">\\n                    <span class=\\\"text-info\\\">USERNAME:</span>\\n                    <span class=\\\"text-white\\\"> {{(usernDetailsState | async)?.username}}</span>\\n                  </li>\\n                  <li class=\\\"list-group-item\\\">\\n                    <span class=\\\"text-info\\\">EMAIL:</span>\\n                    <input class=\\\"text-white form-control\\\" ngModel=\\\"{{ (usernDetailsState | async)?.email }}\\\" name=\\\"email\\\">\\n                  </li>\\n                  <li class=\\\"list-group-item\\\">\\n                    <span class=\\\"text-info\\\">FIRSTNAME:</span>\\n                    <input class=\\\"text-white form-control\\\" ngModel=\\\"{{ (usernDetailsState | async)?.firstName }}\\\" name=\\\"firstName\\\">\\n                  </li>\\n                  <li class=\\\"list-group-item\\\">\\n                    <span class=\\\"text-info\\\">LASTNAME:</span>\\n                    <input class=\\\"text-white form-control\\\" ngModel=\\\"{{ (usernDetailsState | async)?.lastName }}\\\" name=\\\"lastName\\\">\\n                  </li>\\n                  <li class=\\\"list-group-item\\\">\\n                    <span class=\\\"text-info\\\">ENABLED:</span>\\n                    <span class=\\\"text-white\\\">{{ (usernDetailsState | async)?.enabled }}</span>\\n                  </li>\\n                </ul>\\n                <div *ngIf=\\\"editMode\\\" class=\\\"btn-group\\\" style=\\\"margin-top: 30px\\\">\\n                  <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"toggleEdidMode()\\\"> Close</button>\\n                  <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"updateUser(updateDetailsForm.value)\\\" *ngIf=\\\"editMode\\\"> Save</button>\\n                </div>\\n              </form>\\n            </div>\\n\\n            <div *ngIf=\\\"resetPasswordMode\\\">\\n              <form #updatePasswordForm=\\\"ngForm\\\">\\n\\n                <ul class=\\\"list-group bg-transparent\\\">\\n\\n                  <li class=\\\"list-group-item\\\">\\n                    <span class=\\\"text-info\\\">Old password</span>\\n                    <input type=\\\"password\\\" class=\\\"text-white form-control\\\" ngModel name=\\\"oldPassword\\\">\\n                  </li>\\n\\n                  <li class=\\\"list-group-item\\\">\\n                    <span class=\\\"text-info\\\">Password</span>\\n                    <input type=\\\"password\\\" class=\\\"text-white form-control\\\" ngModel name=\\\"newPassword\\\">\\n                  </li>\\n\\n                  <li class=\\\"list-group-item\\\">\\n                    <span class=\\\"text-info\\\">Confirm password</span>\\n                    <input type=\\\"password\\\" class=\\\"text-white form-control\\\" ngModel name=\\\"confirmPassword\\\">\\n                  </li>\\n                </ul>\\n                <div class=\\\"btn-group\\\" style=\\\"margin-top: 30px\\\">\\n                  <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"togglePasswordResetMode()\\\"> Close</button>\\n                  <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"updatePassword(updatePasswordForm.value)\\\"> Save</button>\\n                </div>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12 d-flex justify-content-center\\\">\\n            <div class=\\\"btn-group\\\" *ngIf=\\\"!editMode && !resetPasswordMode\\\">\\n              <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"toggleEdidMode()\\\"> Edit</button>\\n              <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"togglePasswordResetMode()\\\">Reset Password</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Store} from '@ngrx/store';\nimport * as fromAppReducers from '../shared/store/app.reducers';\nimport {DataStorageService} from '../shared/data-storage.service';\nimport {UserModel} from '../user/user.model';\n\n@Component({\n  selector: 'app-user-info',\n  templateUrl: './user-info.component.html',\n  styleUrls: ['./user-info.component.css']\n})\nexport class UserInfoComponent implements OnInit {\n  usernameState: Observable<string>;\n  usernDetailsState: Observable<UserModel>;\n  userDetails: UserModel;\n  editMode = false;\n  resetPasswordMode = false;\n\n  constructor(private store: Store<fromAppReducers.AppState>,\n              private dss: DataStorageService) {\n  }\n\n  ngOnInit() {\n    this.usernameState = this.store.select('users', 'currentUser');\n    this.usernDetailsState = this.store.select('users', 'currentUserDetails');\n    this.usernDetailsState.subscribe((user: UserModel) => {\n      console.log('user', user);\n      this.userDetails = user;\n    });\n    this.usernameState.subscribe((username: string) => {\n      this.dss.getCurrentUser(username);\n    });\n  }\n\n  toggleEdidMode() {\n    this.editMode = !this.editMode;\n  }\n\n  togglePasswordResetMode() {\n    this.resetPasswordMode = !this.resetPasswordMode;\n  }\n\n  updateUser(formValue: { firstName, lastName, email }) {\n\n    this.dss.updateUser({\n      username: this.userDetails.username,\n      firstName: formValue.firstName,\n      lastName: formValue.lastName,\n      passowrd: '', // TODO: remove password from user details on Tickets!\n      email: formValue.email,\n      enabled: false,\n      roleNames: [],\n      taskDtos: [],\n    });\n  }\n\n  updatePassword(formValue: { oldPassword, newPassword, confirmPassword }) {\n    if (formValue.newPassword === formValue.confirmPassword && formValue.newPassword.length > 1) {\n      this.dss.updatePassword(formValue.oldPassword, formValue.newPassword, this.userDetails.username);\n    } else {\n      console.log('Passwords do not match!');\n    }\n  }\n}\n","module.exports = \"li, td {\\n  border: 1px solid #32383e;\\n  background-color: rgba(200, 200, 200, 0.05);\\n  color: gray !important;\\n}\\n\\n.bg-light {\\n  background-color: rgba(200, 200, 200, 0.2) !important;\\n}\\n\\nselect, input, textarea {\\n  background-color: rgba(0, 0, 0, 0.05) !important;\\n}\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-6\\\">\\n    <div *ngIf=\\\"user && !(newUserMode | async)\\\">\\n      <table class=\\\"table table-bordered table-striped\\\">\\n        <tbody>\\n        <tr>\\n          <td><span class=\\\"text-info\\\">USERNAME:</span></td>\\n          <td>\\n            <div class=\\\"d-flex justify-content-between\\\">\\n              <span> {{ user.username }} </span>\\n              <button class=\\\"btn btn-outline-secondary text-danger\\\" data-toggle=\\\"modal\\\"\\n                      data-target=\\\"#deleteConfirmModal\\\"> Delete User\\n              </button>\\n            </div>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td><span class=\\\"text-info\\\">EMAIL:</span></td>\\n          <td> {{ user.email }}</td>\\n        </tr>\\n        <tr>\\n          <td><span class=\\\"text-info\\\">FIRSTNAME:</span></td>\\n          <td>{{ user.firstName }}</td>\\n        </tr>\\n        <tr>\\n          <td><span class=\\\"text-info\\\">LASTNAME:</span></td>\\n          <td>{{ user.lastName }}</td>\\n        </tr>\\n        <tr>\\n          <td><span class=\\\"text-info\\\">ENABLED:</span></td>\\n          <td>{{ user.enabled }}</td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <p class=\\\"text-info\\\">ROLES:</p>\\n            <div *ngIf=\\\"editRoleMode && !(newUserMode | async)\\\">\\n              <form [formGroup]=\\\"roleForm\\\" class=\\\"form-group\\\">\\n                <select class=\\\"form-control border-secondary\\\" formControlName=\\\"role\\\">\\n                  <option selected>- Select -</option>\\n                  <option *ngFor=\\\"let role of (roles|async)\\\"> {{ role.name }}</option>\\n                </select>\\n                <div class=\\\"btn-group\\\" style=\\\"margin-top: 5px\\\">\\n                  <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"postAddRole()\\\">+</button>\\n                  <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"postRemove()\\\">-</button>\\n                  <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"abortAddRole()\\\">Abort</button>\\n                </div>\\n              </form>\\n            </div>\\n            <div *ngIf=\\\"!editRoleMode\\\">\\n              <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onEditRoleMode()\\\">Edit</button>\\n            </div>\\n          </td>\\n          <td>\\n            <ul class=\\\"list-group\\\">\\n              <li class=\\\"list-group-item\\\"\\n                  *ngFor=\\\"let roleName of user.roleNames\\\"\\n                  style=\\\"background-color: rgba(0, 0, 0, 0.05) !important\\\">\\n                {{roleName}}\\n              </li>\\n            </ul>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">\\n          <span class=\\\"text-info\\\">{{user.taskDtos.length > 0 ? 'TASKS' : 'NO TASKS'}}</span>\\n        </li>\\n        <li class=\\\"list-group-item list-group-item-action\\\"\\n            *ngFor=\\\"let taskDto of user.taskDtos\\\" (click)=\\\"onSelectTask(taskDto)\\\"\\n            [ngClass]=\\\"(userDisplayedTask|async)?.id == taskDto.id ? 'bg-light' : ''\\\"\\n        > {{ taskDto.name }}\\n        </li>\\n      </ul>\\n    </div>\\n\\n    <div *ngIf=\\\"(newUserMode | async)\\\">\\n      <form [formGroup]=\\\"newUserForm\\\" #f>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"text-info\\\">Username:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control border-secondary\\\" formControlName=\\\"username\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"text-info\\\">Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control border-secondary\\\" formControlName=\\\"password\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"text-info\\\">First name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control border-secondary\\\" formControlName=\\\"firstName\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"text-info\\\">Last name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control border-secondary\\\" formControlName=\\\"lastName\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"text-info\\\">Email</label>\\n          <input type=\\\"text\\\" class=\\\"form-control border-secondary\\\" formControlName=\\\"email\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"text-info\\\">Enabled</label>\\n          <select class=\\\"form-control border-secondary\\\" formControlName=\\\"enabled\\\" required>\\n            <option [value]=\\\"true\\\"  [selected]=\\\"true\\\" >Yes</option>\\n            <option [value]=\\\"false\\\" >No</option>\\n          </select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button (click)=\\\"onSubmitUser()\\\" class=\\\"btn btn-outline-secondary\\\" [disabled]=\\\"!newUserForm.valid\\\">Submit</button>\\n          <button (click)=\\\"onAbortSubmitUser()\\\" class=\\\"btn btn-outline-secondary\\\">Close</button>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"col-6\\\">\\n    <div *ngIf=\\\"(userDisplayedTask | async)\\\">\\n      <app-user-task [task]=\\\"(userDisplayedTask | async)\\\"></app-user-task>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"deleteConfirmModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\n     aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">User removal</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        Whhaaaaaatt??!!\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onRemoveUser(user.username)\\\">Confirm</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {UserModel} from '../user.model';\nimport {DataStorageService} from '../../shared/data-storage.service';\nimport {RoleModel} from '../../roles/role.model';\nimport {Store} from '@ngrx/store';\nimport * as fromAppReducers from '../../shared/store/app.reducers';\nimport {Observable} from 'rxjs/Observable';\nimport {FormArray, FormControl, FormGroup, Validators} from '@angular/forms';\nimport * as UsersActions from '../../shared/store/user/users.actions';\nimport {TaskModel} from '../../shared/table.model';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n  userState: Observable<UserModel>;\n  user: UserModel;\n  editRoleMode = false;\n  roles: Observable<RoleModel[]>;\n  roleForm: FormGroup;\n  newUserMode: Observable<boolean>;\n  newUserForm: FormGroup;\n  userDisplayedTask: Observable<TaskModel>;\n\n  constructor(private store: Store<fromAppReducers.AppState>,\n              private dss: DataStorageService) {\n  }\n\n  ngOnInit() {\n    this.userState = this.store.select('users', 'selectedUser');\n    this.userState.subscribe((user: UserModel) => {\n      this.user = user;\n    });\n    this.userDisplayedTask = this.store.select('users', 'userDisplayedTask');\n    this.newUserMode = this.store.select('users', 'newUserMode');\n    this.roles = this.store.select('users', 'roles');\n    this.dss.getRoles();\n    this.roleForm =\n      new FormGroup({\n        'role': new FormControl('Select option')\n      });\n    this.newUserMode.subscribe(() => {\n      this.createForm();\n    });\n  }\n\n  postRemove() {\n    this.dss.removeRoleFromUser({user: this.user, rolename: <string>this.roleForm.value.role});\n  }\n\n  onEditRoleMode() {\n    this.editRoleMode = true;\n  }\n\n  postAddRole() {\n    if (this.dss.addRoleToUser({username: this.user.username, rolename: <string>this.roleForm.value.role})) {\n      this.user.roleNames.push(<string>this.roleForm.value.role);\n    }\n  }\n\n  abortAddRole() {\n    this.editRoleMode = false;\n  }\n\n  onAbortSubmitUser() {\n    this.store.dispatch(new UsersActions.SetNewUserModeAction(false));\n  }\n\n  createForm() {\n    this.newUserForm =\n      new FormGroup({\n        'username': new FormControl(null, [Validators.required]),\n        'firstName': new FormControl(null, [Validators.required]),\n        'lastName': new FormControl(null, [Validators.required]),\n        'password': new FormControl(null, [Validators.required]),\n        'email': new FormControl(null, [Validators.required]),\n        'enabled': new FormControl(true, [Validators.required]),\n        'roleNames': new FormArray([]),\n        'taskDtos': new FormArray([])\n      });\n  }\n\n  onRemoveUser(username: string) {\n    this.dss.deleteUser(username);\n  }\n\n\n// onSubmitRole(name, description) {\n//   console.log(name, description);\n//   this.dss.saveNewRole({name: name, description: description});\n// }\n\n  onSubmitUser() {\n    alert(\"this.newUserForm\" + this.newUserForm.value);\n    // this.dss.saveNewUser(this.newUserForm.value);\n  }\n\n  onSelectTask(taskDto: TaskModel) {\n    this.store.dispatch(new UsersActions.SetUserDisplayedTask(taskDto));\n  }\n}\n","module.exports = \"li, td {\\n  border: 1px solid #32383e;\\n  background-color: rgba(200, 200, 200, 0.05);\\n  color: gray !important;\\n}\\n\\n.bg-light {\\n  background-color: rgba(200, 200, 200, 0.2) !important;\\n}\\n\\nselect, input, textarea {\\n  background-color: rgba(0, 0, 0, 0.05) !important;\\n}\\n\"","module.exports = \"<div *ngIf=\\\"task && !editTaskMode\\\">\\n  <li class=\\\"list-group-item d-flex justify-content-between\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">\\n    <span>Name: {{task.name}}</span>\\n    <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onEditTaskMode(true)\\\">Edit</button>\\n  </li>\\n  <li class=\\\"list-group-item\\\"> ID: {{task.id}}</li>\\n  <li class=\\\"list-group-item\\\"> Description: {{task.description}}</li>\\n  <li class=\\\"list-group-item\\\"> Status: {{task.status}}</li>\\n  <li class=\\\"list-group-item\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">{{task.userNames.length <= 0 ? 'No users' : 'Assigned Users:'}}</li>\\n  <li *ngFor=\\\" let username of task.userNames\\\" class=\\\"list-group-item\\\"> {{username}}</li>\\n  <li class=\\\"list-group-item\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">{{ task.taskDtos.length <= 0 ? 'No tasks' : 'Assigned Tasks:' }}</li>\\n  <li class=\\\"list-group-item\\\" *ngFor=\\\"let taskDto of task.taskDtos\\\">\\n    <app-user-task [task]=\\\"taskDto\\\"></app-user-task>\\n  </li>\\n</div>\\n\\n<div *ngIf=\\\"task && editTaskMode\\\">\\n  <form [formGroup]=\\\"editedTaskForm\\\" #f>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"text-info\\\">Name:</label>\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"text-info\\\">Description:</label>\\n      <textarea rows=\\\"20\\\" class=\\\"form-control\\\"  formControlName=\\\"description\\\"></textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"text-info\\\">Status:</label>\\n      <select class=\\\"form-control\\\"  formControlName=\\\"status\\\">\\n        <option [selected]=\\\"task.status == status[0]\\\" value=\\\"{{ status[0] }}\\\"> {{ status[0] }} </option>\\n        <option [selected]=\\\"task.status == status[1]\\\" value=\\\"{{ status[1] }}\\\"> {{ status[1] }} </option>\\n        <option [selected]=\\\"task.status == status[2]\\\" value=\\\"{{ status[2] }}\\\"> {{ status[2] }} </option>\\n        <option [selected]=\\\"task.status == status[3]\\\" value=\\\"{{ status[3] }}\\\"> {{ status[3] }} </option>\\n      </select>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onSaveEditedTask(f)\\\">\\n        Submit\\n      </button>\\n      <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onEditTaskMode(false)\\\">Abort</button>\\n    </div>\\n  </form>\\n</div>\\n\"","import {Component, Input, OnInit} from '@angular/core';\nimport {Status, TaskModel} from '../../shared/table.model';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {DataStorageService} from '../../shared/data-storage.service';\n\n@Component({\n  selector: 'app-user-task',\n  templateUrl: './user-task.component.html',\n  styleUrls: ['./user-task.component.css']\n})\nexport class UserTaskComponent implements OnInit {\n  @Input() task: TaskModel;\n  editedTaskForm: FormGroup;\n  editTaskMode = false;\n  status = Status;\n\n  constructor(private dss: DataStorageService) {\n  }\n\n  ngOnInit() {\n  }\n\n  onEditTaskMode(mode: boolean) {\n    this.editTaskMode = mode;\n    if (this.task) {\n      this.editedTaskForm = new FormGroup({\n        name: new FormControl(this.task.name),\n        description: new FormControl(this.task.description),\n        status: new FormControl(this.task.status),\n      });\n    }\n  }\n\n  onSaveEditedTask() { //(payload: { name: string, description: string, status: Status }) {\n    const task: TaskModel = {\n      id: this.task.id,\n      name: this.editedTaskForm.value.name,\n      description: this.editedTaskForm.value.description,\n      status: this.editedTaskForm.value.status,\n      userNames: this.task.userNames,\n      taskDtos: this.task.taskDtos\n    };\n    this.dss.updateTask(task);\n  }\n}\n","module.exports = \"li {\\n  border: 1px solid #32383e;\\n  background-color: rgba(200, 200, 200, 0.05);\\n  color: gray !important;\\n}\\n\\nli:hover {\\n  background-color: rgba(200, 200, 200, 0.2);\\n}\\n\\n.bg-light {\\n  background-color: rgba(200, 200, 200, 0.2) !important;\\n}\\n\\n.jumbotron {\\n  background: none;\\n}\\n\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <div class=\\\"row\\\" style=\\\"padding: 30px\\\">\\n    <div class=\\\"col-4 align-self-start\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item border-dark\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">Users:</li>\\n        <li class=\\\"list-group-item list-group-item-action d-flex justify-content-end\\\"\\n            *ngFor=\\\"let user of (users | async)\\\" (click)=\\\"onSelectUser(user)\\\"\\n            [ngClass]=\\\"(selectedUser | async)?.username == user.username ? 'bg-light' : ''\\\">\\n          <td class=\\\"mr-auto p-2\\\">{{ user.username }}</td>\\n        </li>\\n        <button class=\\\"btn text-white\\\" style=\\\"background-color: rgba(0,0,0,0.05) !important;\\\" (click)=\\\"onNewUser()\\\">New user</button>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-8 align-self-center\\\">\\n      <app-user-details></app-user-details>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {UserModel} from './user.model';\nimport {Store} from '@ngrx/store';\nimport {DataStorageService} from '../shared/data-storage.service';\nimport * as fromAppReducers from '../shared/store/app.reducers';\nimport * as UsersActions from '../shared/store/user/users.actions';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n  users: Observable<UserModel[]>;\n  selectedUser: Observable<UserModel>;\n\n  constructor(private contentStore: Store<fromAppReducers.AppState>,\n              private dss: DataStorageService) {\n  }\n\n  ngOnInit() {\n    this.users = this.contentStore.select('users', 'users');\n    this.contentStore.select('users', 'selectedUser');\n    this.dss.getUsers();\n  }\n\n  onSelectUser(user: UserModel) {\n    this.contentStore.dispatch(new UsersActions.SetSelectedUser(user));\n    this.contentStore.dispatch(new UsersActions.SetUserDisplayedTask(null));\n  }\n\n  onNewUser() {\n    this.contentStore.dispatch(new UsersActions.SetNewUserModeAction(true));\n    this.contentStore.dispatch(new UsersActions.SetUserDisplayedTask(null));\n  }\n  // // onNewRole() {\n  // //   this.roleStore.dispatch(new TablesActions.SetNewRoleModeAction(true));\n  // // }\n  //\n  // onRemoveRole(name: string) {\n  //   this.dss.deleteRole(name);\n  //   this.roleStore.dispatch(new TablesActions.SetNewRoleModeAction(false))\n  //   this.selectedRole = null;\n  // }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}