{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat/chat.component.css","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/definition/definition.component.css","webpack:///./src/app/definition/definition.component.html","webpack:///./src/app/definition/definition.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/roles/role-details/role-details.component.css","webpack:///./src/app/roles/role-details/role-details.component.html","webpack:///./src/app/roles/role-details/role-details.component.ts","webpack:///./src/app/roles/role.model.ts","webpack:///./src/app/roles/roles.component.css","webpack:///./src/app/roles/roles.component.html","webpack:///./src/app/roles/roles.component.ts","webpack:///./src/app/shared/auth-cookies-handler.ts","webpack:///./src/app/shared/auth.interceptor.ts","webpack:///./src/app/shared/chat-message.model.ts","webpack:///./src/app/shared/clear-array-pipe.ts","webpack:///./src/app/shared/constants.service.ts","webpack:///./src/app/shared/data-storage.service.ts","webpack:///./src/app/shared/filter/extended-filter.pipe.ts","webpack:///./src/app/shared/filter/filter.service.ts","webpack:///./src/app/shared/modules/material/app-material.module.ts","webpack:///./src/app/shared/modules/routing/app-routing-module.ts","webpack:///./src/app/shared/oauth.service.ts","webpack:///./src/app/shared/reverse.pipe.ts","webpack:///./src/app/shared/server.model.ts","webpack:///./src/app/shared/snack-bar/action-snack-bar.component.ts","webpack:///./src/app/shared/snack-bar/info-snack-bar.component.ts","webpack:///./src/app/shared/snack-bar/snack-bar.service.ts","webpack:///./src/app/shared/socket/task-info.service.ts","webpack:///./src/app/shared/socket/web-socket.service.ts","webpack:///./src/app/shared/sort/sort-by.pipe.ts","webpack:///./src/app/shared/statistics/statistics.service.ts","webpack:///./src/app/shared/store-reset.service.ts","webpack:///./src/app/shared/store/chat/chat.actions.ts","webpack:///./src/app/shared/store/chat/chat.reducers.ts","webpack:///./src/app/shared/store/statistics/statistics.actions.ts","webpack:///./src/app/shared/store/statistics/statistics.reducers.ts","webpack:///./src/app/shared/store/table/tables.actions.ts","webpack:///./src/app/shared/store/table/tables.reducers.ts","webpack:///./src/app/shared/store/task/tasks.actions.ts","webpack:///./src/app/shared/store/task/tasks.reducers.ts","webpack:///./src/app/shared/store/user/users.actions.ts","webpack:///./src/app/shared/store/user/users.reducers.ts","webpack:///./src/app/shared/table.model.ts","webpack:///./src/app/signin/signin.component.css","webpack:///./src/app/signin/signin.component.html","webpack:///./src/app/signin/signin.component.ts","webpack:///./src/app/spinner/spinner.component.css","webpack:///./src/app/spinner/spinner.component.html","webpack:///./src/app/spinner/spinner.component.ts","webpack:///./src/app/statistics/statistics.component.css","webpack:///./src/app/statistics/statistics.component.html","webpack:///./src/app/statistics/statistics.component.ts","webpack:///./src/app/statistics/table-stats/table-statistics.component.css","webpack:///./src/app/statistics/table-stats/table-statistics.component.html","webpack:///./src/app/statistics/table-stats/table-statistics.component.ts","webpack:///./src/app/tables/key.pipe.ts","webpack:///./src/app/tables/menu/menu.component.css","webpack:///./src/app/tables/menu/menu.component.html","webpack:///./src/app/tables/menu/menu.component.ts","webpack:///./src/app/tables/row-details/row-details.component.css","webpack:///./src/app/tables/row-details/row-details.component.html","webpack:///./src/app/tables/row-details/row-details.component.ts","webpack:///./src/app/tables/row/question-control.service.ts","webpack:///./src/app/tables/row/row.component.css","webpack:///./src/app/tables/row/row.component.html","webpack:///./src/app/tables/row/row.component.ts","webpack:///./src/app/tables/row/value-types/question-base.model.ts","webpack:///./src/app/tables/table-header/table-header.component.css","webpack:///./src/app/tables/table-header/table-header.component.html","webpack:///./src/app/tables/table-header/table-header.component.ts","webpack:///./src/app/tables/tables.component.css","webpack:///./src/app/tables/tables.component.html","webpack:///./src/app/tables/tables.component.ts","webpack:///./src/app/tables/task/task.component.css","webpack:///./src/app/tables/task/task.component.html","webpack:///./src/app/tables/task/task.component.ts","webpack:///./src/app/training/dialog/dialog.component.css","webpack:///./src/app/training/dialog/dialog.component.html","webpack:///./src/app/training/dialog/dialog.component.ts","webpack:///./src/app/training/table/table.component.css","webpack:///./src/app/training/table/table.component.html","webpack:///./src/app/training/table/table.component.ts","webpack:///./src/app/training/training.component.css","webpack:///./src/app/training/training.component.html","webpack:///./src/app/training/training.component.ts","webpack:///./src/app/user-info/user-info.component.css","webpack:///./src/app/user-info/user-info.component.html","webpack:///./src/app/user-info/user-info.component.ts","webpack:///./src/app/user/user-details/user-details.component.css","webpack:///./src/app/user/user-details/user-details.component.html","webpack:///./src/app/user/user-details/user-details.component.ts","webpack:///./src/app/user/user-task/user-task.component.css","webpack:///./src/app/user/user-task/user-task.component.html","webpack:///./src/app/user/user-task/user-task.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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AE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YACxC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,EAAC;YAC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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-header *ngIf=\\\"currentUser | async\\\"></app-header>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {AuthCookie} from './shared/auth-cookies-handler';\r\nimport {Store} from '@ngrx/store';\r\nimport * as fromAppReducers from './shared/store/app.reducers';\r\nimport {TaskInfoService} from './shared/socket/task-info.service';\r\nimport {Client} from 'stompjs/lib/stomp.js';\r\nimport * as UserActions from './shared/store/user/users.actions';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Router} from '@angular/router';\r\nimport {StoreResetService} from './shared/store-reset.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  stompClient: Client;\r\n  currentUser: Observable<string>;\r\n\r\n  constructor(private cookie: AuthCookie,\r\n              private store: Store<fromAppReducers.AppState>,\r\n              private taskInfo: TaskInfoService,\r\n              private router: Router,\r\n              private resetService: StoreResetService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.store.select('users', 'currentUser');\r\n    this.currentUser.subscribe((user: string) => {\r\n        if (user.length > 0) {\r\n          this.store.dispatch(new UserActions.SetNewWebSocketClient(this.stompClient = this.taskInfo.getClient()));\r\n        } else {\r\n          this.router.navigate(['/signin']);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.resetService.resetStore();\r\n  }\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {AppComponent} from './app.component';\r\nimport {HeaderComponent} from './header/header.component';\r\nimport {SigninComponent} from './signin/signin.component';\r\nimport {DefinitionComponent} from './definition/definition.component';\r\nimport {UserComponent} from './user/user.component';\r\nimport {RolesComponent} from './roles/roles.component';\r\nimport {TablesComponent} from './tables/tables.component';\r\nimport {HomeComponent} from './home/home.component';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {RowComponent} from './tables/row/row.component';\r\nimport {StoreModule} from '@ngrx/store';\r\nimport {KeyPipe} from './tables/key.pipe';\r\nimport {QuestionControlService} from './tables/row/question-control.service';\r\nimport {TableHeaderComponent} from './tables/table-header/table-header.component';\r\nimport {UserDetailsComponent} from './user/user-details/user-details.component';\r\nimport {RoleDetailsComponent} from './roles/role-details/role-details.component';\r\nimport {DataStorageService} from './shared/data-storage.service';\r\nimport {MenuComponent} from './tables/menu/menu.component';\r\nimport {OauthService} from './shared/oauth.service';\r\nimport {AuthInterceptor} from './shared/auth.interceptor';\r\nimport {AuthCookie} from './shared/auth-cookies-handler';\r\nimport {RowDetailsComponent} from './tables/row-details/row-details.component';\r\nimport {FilterService} from './shared/filter/filter.service';\r\nimport {TaskComponent} from './tables/task/task.component';\r\n\r\nimport {tablesReducers} from './shared/store/table/tables.reducers';\r\nimport {usersReducers} from './shared/store/user/users.reducers';\r\nimport {tasksReducers} from './shared/store/task/tasks.reducers';\r\nimport {chatReducers} from './shared/store/chat/chat.reducers';\r\nimport {statisticsReducers} from './shared/store/statistics/statistics.reducers';\r\n\r\nimport {StoreRouterConnectingModule} from '@ngrx/router-store';\r\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\r\nimport {environment} from '../environments/environment';\r\nimport {UserTaskComponent} from './user/user-task/user-task.component';\r\nimport {TaskInfoService} from './shared/socket/task-info.service';\r\nimport {WebSocketService} from './shared/socket/web-socket.service';\r\nimport {ChatComponent} from './chat/chat.component';\r\nimport {StoreResetService} from './shared/store-reset.service';\r\nimport {ReversePipe} from './shared/reverse.pipe';\r\nimport {ExtendedFilterPipe} from './shared/filter/extended-filter.pipe';\r\nimport {SortByPipe} from './shared/sort/sort-by.pipe';\r\nimport {StatisticsComponent} from './statistics/statistics.component';\r\nimport {UserInfoComponent} from './user-info/user-info.component';\r\nimport {StatisticsService} from './shared/statistics/statistics.service';\r\nimport {ChartsModule} from 'ng4-charts';\r\nimport {ClearArrayPipe} from './shared/clear-array-pipe';\r\nimport {SpinnerComponent} from './spinner/spinner.component';\r\nimport {TableStatisticsComponent} from \"./statistics/table-stats/table-statistics.component\";\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {AppMaterialModule} from \"./shared/modules/material/app-material.module\";\r\nimport {TrainingComponent} from './training/training.component';\r\nimport {AppRoutingModule} from \"./shared/modules/routing/app-routing-module\";\r\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\r\nimport { DialogComponent } from './training/dialog/dialog.component';\r\nimport { TableComponent } from './training/table/table.component';\r\nimport {OverlayContainer} from \"@angular/cdk/overlay\";\r\nimport {ActionSnackBarComponent} from \"./shared/snack-bar/action-snack-bar.component\";\r\nimport {ConstantsService} from \"./shared/constants.service\";\r\nimport {InfoSnackBarComponent} from \"./shared/snack-bar/info-snack-bar.component\";\r\nimport {SnackBarService} from \"./shared/snack-bar/snack-bar.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TableStatisticsComponent,\r\n    HeaderComponent,\r\n    SigninComponent,\r\n    DefinitionComponent,\r\n    UserComponent,\r\n    RolesComponent,\r\n    TablesComponent,\r\n    RowComponent,\r\n    HomeComponent,\r\n    KeyPipe,\r\n    ReversePipe,\r\n    ClearArrayPipe,\r\n    TableHeaderComponent,\r\n    UserDetailsComponent,\r\n    RoleDetailsComponent,\r\n    MenuComponent,\r\n    RowDetailsComponent,\r\n    TaskComponent,\r\n    UserTaskComponent,\r\n    ChatComponent,\r\n    ExtendedFilterPipe,\r\n    SortByPipe,\r\n    StatisticsComponent,\r\n    UserInfoComponent,\r\n    SpinnerComponent,\r\n    TrainingComponent,\r\n    DialogComponent,\r\n    TableComponent,\r\n    ActionSnackBarComponent,\r\n    InfoSnackBarComponent\r\n  ],\r\n  imports: [\r\n    ChartsModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    FlexLayoutModule,\r\n    AppMaterialModule,\r\n    AppRoutingModule,\r\n    StoreModule.forRoot({\r\n      tables: tablesReducers,\r\n      users: usersReducers,\r\n      tasks: tasksReducers,\r\n      chat: chatReducers,\r\n      statistics: statisticsReducers\r\n    }),\r\n    StoreRouterConnectingModule,\r\n    !environment.production ? StoreDevtoolsModule.instrument() : []\r\n  ],\r\n  providers: [\r\n    QuestionControlService,\r\n    DataStorageService,\r\n    FilterService,\r\n    OauthService,\r\n    AuthCookie,\r\n    TaskInfoService,\r\n    WebSocketService,\r\n    StoreResetService,\r\n    StatisticsService,\r\n    ConstantsService,\r\n    SnackBarService,\r\n    Location,\r\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}\r\n    // {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi:true}\r\n  ],\r\n  exports: [\r\n    ExtendedFilterPipe,\r\n    SortByPipe\r\n  ],\r\n  entryComponents: [DialogComponent, InfoSnackBarComponent, ActionSnackBarComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  constructor(overlayContainer: OverlayContainer) {\r\n    overlayContainer.getContainerElement().classList.add('candy-themed');\r\n    overlayContainer.getContainerElement().classList.add('my-themed');\r\n  }\r\n}\r\n\r\n","module.exports = \"li {\\r\\n  border: 1px solid #32383e;\\r\\n  background-color: rgba(200, 200, 200, 0.05);\\r\\n  color: gray !important;\\r\\n}\\r\\n\\r\\nli:hover {\\r\\n  background-color: rgba(0, 0, 0, 0.2);\\r\\n}\\r\\n\\r\\ninput, select, textarea {\\r\\n  background-color: rgba(0, 0, 0, 0.05) !important;\\r\\n}\\r\\n\\r\\n.jumbotron {\\r\\n  background: none;\\r\\n}\\r\\n\\r\\n/* width */\\r\\n\\r\\n::-webkit-scrollbar {\\r\\n  width: 20px;\\r\\n}\\r\\n\\r\\n/* Track */\\r\\n\\r\\n::-webkit-scrollbar-track {\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\n/* Handle */\\r\\n\\r\\n::-webkit-scrollbar-thumb {\\r\\n  background: grey;\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\n/* Handle on hover */\\r\\n\\r\\n::-webkit-scrollbar-thumb:hover {\\r\\n  background: darkgrey;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-4\\\">\\r\\n      <ul class=\\\"list-group\\\" style=\\\"padding: 50px 30px\\\">\\r\\n        <li class=\\\"list-group-item list-group-item-dark bg-dark text-white\\\">Active Users:</li>\\r\\n        <li class=\\\"list-group-item list-group-item-action list-group-item-light\\\"\\r\\n            (click)=\\\"setChat('global')\\\">\\r\\n          Global chat\\r\\n          <span *ngIf=\\\"unreadMessages.get('global')\\\" class=\\\"badge badge-danger\\\">New</span>\\r\\n        </li>\\r\\n        <div *ngFor=\\\"let activeWsUser of (activeWsUsers | async)\\\">\\r\\n          <li *ngIf=\\\"activeWsUser != (currentUser |async)\\\"\\r\\n              class=\\\"list-group-item list-group-item-action list-group-item-light\\\"\\r\\n              (click)=\\\"setChat(activeWsUser)\\\"\\r\\n          >{{activeWsUser}}\\r\\n            <span *ngIf=\\\"unreadMessages.get(activeWsUser)\\\" class=\\\"badge badge-primary\\\">New</span>\\r\\n          </li>\\r\\n        </div>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-8\\\" style=\\\"padding: 50px 70px 0 0;\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item bg-dark text-info\\\">{{chatNameState | async}} chat:</li>\\r\\n        <li class=\\\"list-group-item\\\">\\r\\n          <div #chatDiv style=\\\"min-height: 600px; max-height: 600px; overflow-y: scroll;\\\">\\r\\n            <div *ngFor=\\\"let message of messagesMap.get(chatNameState | async)\\\">\\r\\n              <div *ngIf=\\\"(message.senderName) === (currentUser |async)\\\" class=\\\"alert border-primary text-primary\\\"\\r\\n                   style=\\\"width: 70%; margin-bottom: 5px;\\\">{{message.senderName}} : {{message.message}}\\r\\n              </div>\\r\\n              <div *ngIf=\\\"(message.senderName) !== (currentUser |async)\\\" class=\\\"alert border-success text-success\\\"\\r\\n                   style=\\\"width: 70%; margin: 0 0 5px 30%\\\">{{message.senderName}} : {{message.message}}\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item bg-dark\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <input class=\\\"form-control border-secondary\\\" type=\\\"text\\\" #messageContent\\r\\n                   (keyup.enter)=\\\"post.click()\\\">\\r\\n            <div class=\\\"input-group-append\\\">\\r\\n              <button #post (click)=\\\"postMessage(messageContent.value);messageContent.value = '';\\\"\\r\\n                      class=\\\"btn btn-default\\\">Post\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {\r\n  AfterViewChecked,\r\n  Component,\r\n  ElementRef, OnDestroy,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport {Store} from '@ngrx/store';\r\nimport * as fromAppReducers from '../shared/store/app.reducers';\r\nimport {TaskInfoService} from '../shared/socket/task-info.service';\r\nimport {Client} from 'stompjs/lib/stomp.js';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {ChatMessageModel} from '../shared/chat-message.model';\r\nimport {DataStorageService} from '../shared/data-storage.service';\r\nimport * as ChatActions from \"../shared/store/chat/chat.actions\";\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.css']\r\n})\r\nexport class ChatComponent implements OnInit, AfterViewChecked, OnDestroy {\r\n  @ViewChild('chatDiv') private chatDiv: ElementRef;\r\n  chatContent: Observable<ChatMessageModel[]>;\r\n  currentUser: Observable<string>;\r\n  activeWsUsers: Observable<string[]>;\r\n  public unreadMessages = new Map<string, boolean>();\r\n  public messagesMap = new Map<string, ChatMessageModel[]>();\r\n  username: string;\r\n  chatName: string;\r\n  chatNameState: Observable<string>;\r\n\r\n\r\n  constructor(private store: Store<fromAppReducers.AppState>,\r\n              private ws: TaskInfoService,\r\n              private dss: DataStorageService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dss.getActiveWsUsers();\r\n    this.unreadMessages.set('global', false);\r\n    this.messagesMap.set('global', []);\r\n    this.store.dispatch(new ChatActions.SelectChat('global'));\r\n    this.chatContent = this.store.select('chat', 'chatContent');\r\n    this.chatNameState = this.store.select('chat', 'selectedChat');\r\n    this.chatNameState.subscribe(chatName => {\r\n      this.chatName = chatName\r\n    });\r\n    this.activeWsUsers = this.store.select('chat', 'activeUsers');\r\n    this.activeWsUsers.subscribe(users => {\r\n      users.forEach(user => {\r\n        if (!this.unreadMessages.has(user)) {\r\n          this.unreadMessages.set(user, false);\r\n          this.messagesMap.set(user, []);\r\n        }\r\n      })\r\n    });\r\n    this.chatContent.subscribe(chat => {\r\n      this.mapLastToRespectiveChat(chat);\r\n      if (chat.length > 0) {\r\n        if (chat[chat.length - 1].recipientName === 'global' && this.chatName !== 'global') {\r\n          this.unreadMessages.set('global', true);\r\n        }\r\n        if (chat[chat.length - 1].recipientName !== 'global'\r\n          && this.chatName !== chat[chat.length - 1].senderName) {\r\n          this.unreadMessages.set(chat[chat.length - 1].senderName, true);\r\n        }\r\n      }\r\n    });\r\n    this.currentUser = this.store.select('users', 'currentUser');\r\n    this.currentUser.subscribe((username) => {\r\n      this.username = username;\r\n    });\r\n    this.store.select('chat', 'chatContent')\r\n      .subscribe(chat => {\r\n        this.fillInitially(chat)\r\n      }).unsubscribe();\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    if (this.chatDiv) {\r\n      this.chatDiv.nativeElement.scrollTop = this.chatDiv.nativeElement.scrollHeight + 20;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.store.dispatch(new ChatActions.SelectChat(''))\r\n  }\r\n\r\n  setChat(chatName: string) {\r\n    this.unreadMessages.set(chatName, false);\r\n    this.store.dispatch(new ChatActions.SelectChat(chatName));\r\n  }\r\n\r\n  postMessage(messageContent: string) {\r\n    if (messageContent) {\r\n      if (this.chatName === 'global') {\r\n        this.ws.stompClient.send('/app/chat', {}, messageContent);\r\n      } else {\r\n        this.store.dispatch(new ChatActions.AppendChatWithMessage(new ChatMessageModel(this.username, messageContent, this.chatName)));\r\n        this.ws.stompClient.send('/app/chat/' + this.chatName, {}, messageContent);\r\n      }\r\n    }\r\n  }\r\n\r\n  private fillInitially(chat: ChatMessageModel[]) {\r\n    this.messagesMap.forEach((value, key) => this.messagesMap.set(key, []));\r\n    if (chat.length > 0) {\r\n      chat.forEach((value) => {\r\n        const chatName = value.recipientName === 'global'\r\n          ? 'global'\r\n          : value.senderName === this.username\r\n            ? value.recipientName\r\n            : value.senderName;\r\n        this.messagesMap.set(chatName, [...this.messagesMap.get(chatName), value]);\r\n      })\r\n    }\r\n  }\r\n\r\n  private mapLastToRespectiveChat(chat: ChatMessageModel[]) {\r\n    if (chat.length > 0) {\r\n      const chatName = chat[chat.length - 1].recipientName === 'global'\r\n        ? 'global'\r\n        : chat[chat.length - 1].senderName === this.username\r\n          ? chat[chat.length - 1].recipientName\r\n          : chat[chat.length - 1].senderName;\r\n      this.messagesMap.set(chatName, [...(this.messagesMap.get(chatName) || []), chat[chat.length - 1]]);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"li {\\r\\n  border: 1px solid #32383e;\\r\\n  background-color: rgba(200, 200, 200, 0.05);\\r\\n  color: gray !important;\\r\\n}\\r\\n\\r\\nli:hover {\\r\\n  background-color: rgba(200, 200, 200, 0.2);\\r\\n}\\r\\n\\r\\ninput, select, textarea {\\r\\n  background-color: rgba(0, 0, 0, 0.05) !important;\\r\\n}\\r\\n\\r\\n.jumbotron {\\r\\n  background: none;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-12\\\">\\r\\n        <h3 class=\\\"text-center text-info\\\">Table Definition</h3>\\r\\n        <form [formGroup]=\\\"definitionForm\\\" style=\\\"margin-top: 10px\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <input type=\\\"text\\\"\\r\\n                   id=\\\"table-name\\\"\\r\\n                   formControlName=\\\"name\\\"\\r\\n                   placeholder=\\\"Table Name\\\"\\r\\n                   class=\\\"form-control  border-secondary\\\" ngModel\\r\\n                   required\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"row justify-content-center\\\">\\r\\n            <div class=\\\"col-12\\\" formArrayName=\\\"columnDetailDefinitionDtoList\\\">\\r\\n              <div class=\\\"row justify-content-center\\\"\\r\\n                   *ngFor=\\\"let columnDetailDefinitionDto of getData().controls; let i = index;\\\"\\r\\n                   [formGroupName]=\\\"i\\\">\\r\\n                <div class=\\\"col-12 col-sm-5 col-md-3\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <label class=\\\"btn btn-outline-secondary\\\">Type:</label>\\r\\n                    </div>\\r\\n                    <select type=\\\"text\\\" class=\\\"form-control  border-secondary\\\" formControlName=\\\"type\\\" required>\\r\\n                      <option *ngFor=\\\"let option of options;\\\" [selected]=\\\"option.name\\\" [value]=\\\"option.shortcut\\\">{{\\r\\n                        option.name }}\\r\\n                      </option>\\r\\n                    </select>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"definitionForm.value.columnDetailDefinitionDtoList[i].type=='EN'\\\">\\r\\n                    <div class=\\\"col-12\\\" formArrayName=\\\"optionList\\\">\\r\\n                      <div *ngFor=\\\"let option of columnDetailDefinitionDto.get('optionList').controls;let j = index\\\" class=\\\"row\\\">\\r\\n                        <div class=\\\"input-group\\\" style=\\\"margin-top: 3px;\\\">\\r\\n                          <input type=\\\"text\\\" class=\\\"form-control  border-secondary\\\"\\r\\n                                 [value]=\\\"definitionForm.value.columnDetailDefinitionDtoList[i].optionList[j]\\\" formControlName=\\\"{{j}}\\\"\\r\\n                                 placeholder=\\\"Option...\\\"\\r\\n                                 required>\\r\\n                          <div class=\\\"input-group-append\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary text-danger\\\" (click)=\\\"onDeleteOption(i,j)\\\">X</button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"form-group\\\" style=\\\"margin: 5px 0\\\">\\r\\n                          <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary text-primary\\\" (click)=\\\"onAddOptions(i)\\\">\\r\\n                            Add option\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-11 col-sm-6 col-md-5\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <div class=\\\"input-group-prepend\\\">\\r\\n                      <label class=\\\"btn btn-outline-secondary\\\">Name:</label>\\r\\n                    </div>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control border-secondary\\\" formControlName=\\\"name\\\" required style=\\\"height: 38px;\\\">\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-1\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary text-danger\\\" (click)=\\\"onDeleteColumn(i)\\\">X</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <br>\\r\\n          <div class=\\\"row justify-content-center\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary text-primary\\\" (click)=\\\"onAddColumn()\\\">Add column</button>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary text-danger\\\" (click)=\\\"onResetForm()\\\">Reset form</button>\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-outline-secondary text-success\\\" [disabled]=\\\"!definitionForm.valid\\\" (click)=\\\"postCommonTableForm()\\\">Define in common table</button>\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-outline-secondary text-success\\\" [disabled]=\\\"!definitionForm.valid\\\" (click)=\\\"postSepareteTableForm()\\\">Define in separate table</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormArray, FormControl, FormGroup} from '@angular/forms';\r\nimport * as fromDefinitionModel from '../shared/table.model';\r\nimport {DataStorageService} from '../shared/data-storage.service';\r\n\r\nexport const COMMON_TABLE_ENVIRONMENT = \"COMMON_TABLE_ENVIRONMENT\";\r\nexport const SEPARATE_TABLE_ENVIRONMENT = \"SEPARATE_TABLE_ENVIRONMENT\";\r\n\r\n@Component({\r\n  selector: 'app-definition',\r\n  templateUrl: './definition.component.html',\r\n  styleUrls: ['./definition.component.css']\r\n})\r\nexport class DefinitionComponent implements OnInit {\r\n  definitionForm: FormGroup;\r\n  options = fromDefinitionModel.options;\r\n\r\n\r\n  constructor(private dss: DataStorageService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    // this.options = fromDefinitionModel.options;\r\n  }\r\n\r\n  private initForm() {\r\n\r\n    this.definitionForm = new FormGroup({\r\n      'name': new FormControl(),\r\n      'columnDetailDefinitionDtoList': new FormArray([])\r\n    });\r\n  }\r\n\r\n  onAddColumn() {\r\n    (<FormArray>this.definitionForm.get('columnDetailDefinitionDtoList')).push(\r\n      new FormGroup({\r\n        'type': new FormControl('IN'),\r\n        'name': new FormControl(''),\r\n        'optionList': new FormArray([])\r\n      })\r\n    );\r\n  }\r\n\r\n  onAddOptions(i: number) {\r\n    (<FormArray>(<FormArray>this.definitionForm.get('columnDetailDefinitionDtoList')).at(i).get('optionList')).push(\r\n      new FormControl()\r\n    );\r\n  }\r\n\r\n  onDeleteOption(typeIndex: number, optionNumber: number) {\r\n    (<FormArray>(<FormArray>this.definitionForm.get('columnDetailDefinitionDtoList'))\r\n      .at(typeIndex)\r\n      .get('optionList'))\r\n      .removeAt(optionNumber);\r\n  }\r\n\r\n  onDeleteColumn(i) {\r\n    (<FormArray>this.definitionForm.get('columnDetailDefinitionDtoList')).removeAt(i);\r\n  }\r\n\r\n  onResetForm() {\r\n    this.initForm();\r\n  }\r\n\r\n  postSepareteTableForm() {\r\n    this.postTableForm(SEPARATE_TABLE_ENVIRONMENT);\r\n  }\r\n\r\n  postCommonTableForm() {\r\n    this.postTableForm(COMMON_TABLE_ENVIRONMENT);\r\n  }\r\n\r\n  private postTableForm(databaseEnviroment: string){\r\n    const formValue = this.definitionForm.value;\r\n    formValue['id'] = null;\r\n    this.dss.postTableDefinition(formValue, databaseEnviroment);\r\n  }\r\n\r\n  getData() {\r\n    return <FormArray>this.definitionForm.get('columnDetailDefinitionDtoList');\r\n  }\r\n}\r\n","module.exports = \"nav {\\r\\n  background-color: rgba(0,0,0,0.1);\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark\\\" style=\\\"margin-bottom: 0\\\">\\r\\n  <!--*ngIf=\\\"(token | async)\\\"-->\\r\\n  <a class=\\\"navbar-brand text-info\\\" href=\\\"/\\\">MY JIRA</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavDropdown\\\" aria-controls=\\\"navbarNavDropdown\\\"\\r\\n          aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavDropdown\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\" *ngIf=\\\"(token | async)\\\">\\r\\n      <li class=\\\"nav-item \\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse.show\\\" routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{exact: true}\\\"><a class=\\\"nav-link text-info\\\" routerLink=\\\"/home\\\">Home</a></li>\\r\\n      <li class=\\\"nav-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse.show\\\" routerLinkActive=\\\"active\\\"><a class=\\\"nav-link text-info\\\" routerLink=\\\"/tables\\\">Tables</a></li>\\r\\n      <li class=\\\"nav-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse.show\\\" routerLinkActive=\\\"active\\\"><a class=\\\"nav-link text-info\\\" routerLink=\\\"/users\\\">Users</a></li>\\r\\n      <li *ngIf=\\\"(isAdmin | async)\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse.show\\\" class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\"><a class=\\\"nav-link text-info\\\" routerLink=\\\"/definitions\\\">Definition</a></li>\\r\\n      <li *ngIf=\\\"(isAdmin | async)\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse.show\\\" class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\"><a class=\\\"nav-link text-info\\\" routerLink=\\\"/roles\\\">Roles</a></li>\\r\\n      <li *ngIf=\\\"(isAdmin | async)\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse.show\\\" class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\"><a class=\\\"nav-link text-info\\\" routerLink=\\\"/statistics\\\">Statistics</a></li>\\r\\n      <li class=\\\"nav-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse.show\\\" routerLinkActive=\\\"active\\\"><a class=\\\"nav-link text-info\\\" routerLink=\\\"/chat\\\">Chat</a></li>\\r\\n      <li class=\\\"nav-item\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse.show\\\" routerLinkActive=\\\"active\\\"><a class=\\\"nav-link text-info\\\" routerLink=\\\"/training\\\">Training</a></li>\\r\\n    </ul>\\r\\n\\r\\n    <h4><span *ngIf=\\\"chatChanged\\\" (click)=\\\"toChat()\\\" style=\\\"margin-right: 20px\\\" class=\\\"nav badge badge-primary\\\">Chat</span></h4>\\r\\n    <h4><span *ngIf=\\\"(newTaskState | async)\\\" (click)=\\\"onNewTasksSeen()\\\" style=\\\"margin-right: 20px\\\" class=\\\"nav badge badge-danger\\\">Tasks</span></h4>\\r\\n    <span class=\\\"nav navbar-text font-weight-bold\\\" style=\\\"margin-right: 20px\\\" *ngIf=\\\"(token | async)\\\">\\r\\n      <a class=\\\"text-info\\\" routerLink=\\\"/user-info\\\">Welcome : {{ username | async }}</a>\\r\\n    </span>\\r\\n    <span class=\\\"navbar-text\\\">\\r\\n      <a class=\\\"nav-link text-info\\\" routerLink=\\\"/signin\\\" *ngIf=\\\"!(token | async)\\\">Login</a>\\r\\n    </span>\\r\\n    <span class=\\\"navbar-text\\\">\\r\\n      <a class=\\\"nav-link text-info\\\" (click)=\\\"onLogout()\\\" *ngIf=\\\"(token | async)\\\" routerLink=\\\"/\\\">Logout</a>\\r\\n    </span>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Store} from '@ngrx/store';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport * as fromAppReducers from '../shared/store/app.reducers';\r\nimport {OauthService} from '../shared/oauth.service';\r\nimport {DataStorageService} from '../shared/data-storage.service';\r\nimport {Token} from '../shared/auth.model';\r\nimport {Client} from 'stompjs/lib/stomp.js';\r\nimport * as UserActions from '../shared/store/user/users.actions';\r\nimport {StoreResetService} from '../shared/store-reset.service';\r\nimport {ActivatedRoute, Params, Router} from '@angular/router';\r\nimport {ChatMessageModel} from \"../shared/chat-message.model\";\r\nimport {Location} from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  token: Observable<Token>;\r\n  username: Observable<string>;\r\n  currentUserRoles: Observable<string[]>;\r\n  isAdmin: Observable<boolean>;\r\n  newTaskState: Observable<boolean>;\r\n  currentUsername: string;\r\n  chatChanged = false;\r\n  chatModel: ChatMessageModel[] = [];\r\n  private params: Params;\r\n  private chatName: string;\r\n\r\n  constructor(private store: Store<fromAppReducers.AppState>,\r\n              private oauth: OauthService,\r\n              private dss: DataStorageService,\r\n              private resetService: StoreResetService,\r\n              private router: Router,\r\n              private route: ActivatedRoute,\r\n              private location: Location) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.newTaskState = this.store.select('users', 'newTaskInfo');\r\n    this.token = this.store.select('users', 'token');\r\n    this.username = this.store.select('users', 'currentUser');\r\n    this.username.subscribe((username: string) => {\r\n      if(username){\r\n        this.dss.getCurrentUserRoles(username);\r\n        this.currentUsername = username;\r\n      }\r\n    });\r\n    this.currentUserRoles = this.store.select('users', 'currentUserRoles');\r\n    this.isAdmin = this.currentUserRoles.map(roles => {\r\n      let condition = false;\r\n      roles.forEach(role => {\r\n        if (role === 'ROLE_ADMIN') {\r\n          condition = true;\r\n        }\r\n      });\r\n      return condition;\r\n    });\r\n    this.store.select('chat', 'selectedChat').subscribe(chatName => this.chatName = chatName);\r\n    this.route.params.subscribe(params => this.params = params)\r\n    this.store.select('chat', 'chatContent').subscribe((chatModel: ChatMessageModel[]) => {\r\n      this.chatModel = chatModel;\r\n      if (chatModel.length <= 0 || chatModel[chatModel.length -1].senderName === this.currentUsername) {\r\n        return;\r\n      }\r\n      if (this.location.path() === '/chat') {\r\n        return;\r\n      }\r\n      this.chatChanged = true;\r\n    });\r\n  }\r\n\r\n  onLogout() {\r\n    this.resetService.resetStore();\r\n    this.router.navigate(['/signin']);\r\n    this.store.dispatch(new UserActions.SetLogoutInfo('You have been successfully logged out!'));\r\n  }\r\n\r\n  onNewTasksSeen() {\r\n    this.store.dispatch(new UserActions.SetTaskInfoAction(false));\r\n    this.router.navigate(['/users']);\r\n  }\r\n\r\n  toChat() {\r\n    this.chatChanged = false;\r\n    this.router.navigate(['/chat']);\r\n  }\r\n}\r\n","module.exports = \".jumbotron {\\r\\n  width: auto;\\r\\n  background-color: transparent;\\r\\n  color: #ecf0f1;\\r\\n  height: 80%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <h3 class=\\\"display-3 text-white\\\">Welcome !</h3>\\r\\n    <p class=\\\"lead text-white\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit.\\r\\n      Fusce ullamcorper a ipsum nec feugiat. Quisque viverra quis nulla eu pharetra.\\r\\n      Morbi blandit, quam vehicula semper hendrerit, ante urna vulputate justo, vitae venenatis\\r\\n      massa tellus ac risus. Aliquam consequat libero quis aliquet posuere. Etiam imperdiet interdum accumsan.\\r\\n      Etiam sodales suscipit dui, sit amet finibus augue aliquam quis.\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"li, td {\\r\\n  border: 1px solid #32383e;\\r\\n  background-color: rgba(200, 200, 200, 0.05);\\r\\n  color: gray !important;\\r\\n}\\r\\n\\r\\n.bg-light {\\r\\n  background-color: rgba(200, 200, 200, 0.2) !important;\\r\\n}\\r\\n\\r\\nselect, input, textarea {\\r\\n  background-color: rgba(0, 0, 0, 0.05) !important;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<div *ngIf=\\\"role && !(newRoleMode | async)\\\">\\r\\n  <table class=\\\"table table-bordered table-striped\\\">\\r\\n    <tbody>\\r\\n    <tr>\\r\\n      <td><span class=\\\"text-info\\\">ID:</span></td>\\r\\n      <td>\\r\\n        <div class=\\\"d-flex justify-content-between\\\">\\r\\n          <span> {{ role.id }} </span>\\r\\n          <button class=\\\"btn btn-outline-secondary text-danger\\\" mat-button (click)=\\\"showSnackBar('Really?')\\\">Delete Role</button>\\r\\n        </div>\\r\\n      </td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td><span class=\\\"text-info\\\">NAME:</span></td>\\r\\n      <td>{{ role.name }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td><span class=\\\"text-info\\\">DESCRIPTION:</span></td>\\r\\n      <td> {{ role.description }}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td><span class=\\\"text-info\\\">USERS</span></td>\\r\\n      <td>\\r\\n        <ul class=\\\"list-group\\\">\\r\\n          <li class=\\\"list-group-item\\\" *ngFor=\\\"let user of role.userDtos\\\" style=\\\"background-color: rgba(0, 0, 0, 0.05) !important;\\\">{{user.username}}</li>\\r\\n        </ul>\\r\\n      </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n  <div *ngIf=\\\"editUserMode && !(newRoleMode | async)\\\">\\r\\n    <form [formGroup]=\\\"userForm\\\" class=\\\"form-group\\\">\\r\\n      <div class=\\\"input-group\\\">\\r\\n        <select class=\\\"form-control border-secondary\\\" formControlName=\\\"user\\\">\\r\\n          <option selected>- Select -</option>\\r\\n          <option *ngFor=\\\"let user of (users|async)\\\"> {{ user.username }}</option>\\r\\n        </select>\\r\\n        <div class=\\\"input-group-append\\\">\\r\\n          <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"postAddUser()\\\">Add</button>\\r\\n          <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"postRemoveUser()\\\">Remove</button>\\r\\n          <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"abortAddUser()\\\">Abort</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!editUserMode\\\">\\r\\n    <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onEditUserMode()\\\">Edit Role</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"(newRoleMode | async)\\\">\\r\\n  <form>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"text-info\\\">Role name:</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control border-secondary\\\" #name>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"text-info\\\">Role description:</label>\\r\\n      <textarea rows=\\\"6\\\" class=\\\"form-control border-secondary\\\" #description></textarea>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button (click)=\\\"onSubmitRole(name.value, description.value)\\\" class=\\\"btn btn-outline-secondary\\\">Submit</button>\\r\\n      <button (click)=\\\"onAbortSubmitRole()\\\" class=\\\"btn btn-outline-secondary\\\">Close</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {RoleModel} from '../role.model';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {UserModel} from '../../user/user.model';\r\nimport {Store} from '@ngrx/store';\r\nimport {DataStorageService} from '../../shared/data-storage.service';\r\nimport * as fromAppReducers from '../../shared/store/app.reducers';\r\nimport * as UsersActions from '../../shared/store/user/users.actions';\r\nimport {ActionSnackBarComponent} from \"../../shared/snack-bar/action-snack-bar.component\";\r\nimport {MatSnackBar, MatSnackBarRef} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: 'app-role-details',\r\n  templateUrl: './role-details.component.html',\r\n  styleUrls: ['./role-details.component.css']\r\n})\r\nexport class RoleDetailsComponent implements OnInit {\r\n  @Input() role: RoleModel;\r\n  editUserMode = false;\r\n  users: Observable<UserModel[]>;\r\n  userForm: FormGroup;\r\n  newRoleMode: Observable<boolean>;\r\n  snackBarRef: MatSnackBarRef<ActionSnackBarComponent>;\r\n\r\n  constructor(private store: Store<fromAppReducers.AppState>,\r\n              private dss: DataStorageService,\r\n              public snackBar: MatSnackBar) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.newRoleMode = this.store.select('users', 'newRoleMode');\r\n    this.users = this.store.select('users', 'users');\r\n    this.dss.getUsers();\r\n    this.userForm =\r\n      new FormGroup({\r\n        'user': new FormControl('Select option')\r\n      });\r\n  }\r\n\r\n  postRemoveUser() {\r\n    this.dss.removeUserFromRole({role: this.role, username: <string>this.userForm.value.user});\r\n  }\r\n\r\n  onEditUserMode() {\r\n    this.editUserMode = true;\r\n  }\r\n\r\n  postAddUser() {\r\n    if (this.dss.addRoleToUser({rolename: this.role.name, username: <string>this.userForm.value.user})) {\r\n      this.users.subscribe((users: UserModel[]) => {\r\n        users.forEach((user) => {\r\n            if (user.username === this.userForm.value.user) {\r\n              this.role.userDtos.push(user);\r\n            }\r\n        });\r\n      }).unsubscribe();\r\n    }\r\n  }\r\n\r\n  abortAddUser() {\r\n    this.editUserMode = false;\r\n  }\r\n\r\n  onSubmitRole(name, description) {\r\n    this.dss.saveNewRole({name: name, description: description});\r\n  }\r\n\r\n  onAbortSubmitRole() {\r\n    this.store.dispatch(new UsersActions.SetNewRoleModeAction(false));\r\n  }\r\n\r\n  showSnackBar(message: string) {\r\n    this.snackBarRef = this.snackBar.openFromComponent(ActionSnackBarComponent, {\r\n      panelClass: ['styled-snack'],\r\n      data: {\r\n        message: message,\r\n        action: null\r\n      }\r\n    });\r\n\r\n    this.snackBarRef.afterDismissed().subscribe((data) => {\r\n      if(data.dismissedByAction){\r\n        this.dss.deleteRole(this.role.name);\r\n      }\r\n    });\r\n    this.snackBarRef.instance.ref = this.snackBarRef;\r\n  }\r\n}\r\n","export class RoleModel {\r\n  public name: string;\r\n  public id: number;\r\n  public userDtos: [{\r\n    username: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    password?: string,\r\n    email: string,\r\n    enabled: boolean,\r\n    roleNames: any[]\r\n  }];\r\n  public description: string;\r\n}\r\n","module.exports = \"li {\\r\\n  border: 1px solid #32383e;\\r\\n  background-color: rgba(200, 200, 200, 0.05);\\r\\n  color: gray !important;\\r\\n}\\r\\n\\r\\nli:hover {\\r\\n  background-color: rgba(200, 200, 200, 0.2);\\r\\n}\\r\\n\\r\\n.bg-light {\\r\\n  background-color: rgba(200, 200, 200, 0.2) !important;\\r\\n}\\r\\n\\r\\n.jumbotron {\\r\\n  background: none;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n  <div class=\\\"row\\\" style=\\\"padding: 30px\\\">\\r\\n    <div class=\\\"col-4 align-self-start\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item active border-dark\\\" style=\\\"background-color: rgba(0,0,0,0.05) !important;\\\">Roles:</li>\\r\\n        <li class=\\\"list-group-item list-group-item-action d-flex justify-content-end\\\"\\r\\n            *ngFor=\\\"let role of (roles | async)\\\" (click)=\\\"onSelectRole(role)\\\"\\r\\n            [ngClass]=\\\"selectedRole?.id == role.id ? 'bg-light' : ''\\\">\\r\\n          <td class=\\\"mr-auto p-2\\\">{{ role.name }}</td>\\r\\n        </li>\\r\\n        <button class=\\\"btn text-white\\\" style=\\\"background-color: rgba(0,0,0,0.05) !important;\\\" (click)=\\\"onNewRole()\\\">New role</button>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-8 align-self-center\\\">\\r\\n      <app-role-details [role]=\\\"selectedRole\\\"></app-role-details>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Store} from '@ngrx/store';\r\nimport {RoleModel} from './role.model';\r\nimport * as fromAppReducers from '../shared/store/app.reducers';\r\nimport {DataStorageService} from '../shared/data-storage.service';\r\nimport * as UsersActions from '../shared/store/user/users.actions';\r\n\r\n@Component({\r\n  selector: 'app-roles',\r\n  templateUrl: './roles.component.html',\r\n  styleUrls: ['./roles.component.css']\r\n})\r\nexport class RolesComponent implements OnInit {\r\n  roles: Observable<RoleModel[]>;\r\n  selectedRole: RoleModel;\r\n\r\n\r\n  constructor(private roleStore: Store<fromAppReducers.AppState>,\r\n              private dss: DataStorageService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.roles = this.roleStore.select('users', 'roles');\r\n    this.dss.getRoles();\r\n  }\r\n\r\n  onSelectRole(role: RoleModel) {\r\n    this.selectedRole = role;\r\n  }\r\n\r\n  onNewRole() {\r\n    this.roleStore.dispatch(new UsersActions.SetNewRoleModeAction(true));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Cookie} from 'ng2-cookies/ng2-cookies';\r\n\r\n@Injectable()\r\nexport class AuthCookie {\r\n  constructor() {\r\n  }\r\n\r\n  static getAuth(): string {\r\n    return Cookie.get('sticky');\r\n  }\r\n\r\n  static setAuth(value: string, expires: number): void {\r\n    // 0.0138889//this accept day not minuts\r\n    Cookie.set('sticky', value, expires);\r\n  }\r\n\r\n  static deleteAuth(): void {\r\n    Cookie.delete('sticky');\r\n  }\r\n}\r\n","import {\r\n  HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest,\r\n} from '@angular/common/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Injectable} from '@angular/core';\r\nimport {AuthCookie} from './auth-cookies-handler';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor() {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<any> {\r\n    if (!req.url.includes('oauth/token')) {\r\n      if (req.method === 'GET') {\r\n        const headers = new HttpHeaders({'Content-type': 'multipart/form-data', 'Authorization': 'Bearer ' + AuthCookie.getAuth()});\r\n        // TODO'multipart/form-data' -> urlencoded??\r\n        const updatedReq = req.clone({headers: headers});\r\n        return next.handle(updatedReq);\r\n      } else {\r\n        const headers = new HttpHeaders({'Content-type': 'application/json', 'Authorization': 'Bearer ' + AuthCookie.getAuth()});\r\n        const updatedReq = req.clone({headers: headers});\r\n        return next.handle(updatedReq);\r\n      }\r\n    } else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n","export class ChatMessageModel {\r\n  senderName: string;\r\n  message: string;\r\n  recipientName: string;\r\n\r\n  constructor(senderName: string,\r\n              message: string,\r\n              recipientName: string) {\r\n    this.senderName = senderName;\r\n    this.message = message;\r\n    this.recipientName = recipientName;\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'clearArray'\r\n})\r\nexport class ClearArrayPipe implements PipeTransform {\r\n  transform(array: any[]) {\r\n    const newArray = [];\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (typeof array[i] !== 'undefined') { // TODO only undefined??\r\n        newArray.push(array[i]);\r\n      }\r\n    }\r\n    return newArray;\r\n  }\r\n}\r\n\r\n","export class ConstantsService {\r\n  public shortcuts = new Map();\r\n\r\n  constructor(){\r\n    this.shortcuts.set('COMMON_TABLE_ENVIRONMENT', \"C\");\r\n    this.shortcuts.set('SEPARATE_TABLE_ENVIRONMENT', \"S\");\r\n  }\r\n\r\n  getShortcut(environment): string{\r\n    return this.shortcuts.get(environment);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport 'rxjs/add/operator/map';\r\nimport {RowContentModel, TableDefinitionModel, TablesDetails, TaskModel} from './table.model';\r\nimport {Store} from '@ngrx/store';\r\nimport * as UsersActions from './store/user/users.actions';\r\nimport * as TablesActions from './store/table/tables.actions';\r\nimport * as fromAppReducers from './store/app.reducers';\r\nimport * as fromServerModel from './server.model';\r\nimport {UserModel} from '../user/user.model';\r\nimport {RoleModel} from '../roles/role.model';\r\nimport * as TaskActions from './store/task/tasks.actions';\r\nimport {Client} from 'stompjs/lib/stomp.js';\r\nimport {TaskInfoService} from './socket/task-info.service';\r\nimport * as ChatActions from './store/chat/chat.actions';\r\nimport {SnackBarService, SnackBarTheme} from \"./snack-bar/snack-bar.service\";\r\n\r\n@Injectable()\r\nexport class DataStorageService {\r\n  // stompClientState: Observable<Client>;\r\n  // stompClient: Client;\r\n  basehost = fromServerModel.baseUrl;\r\n\r\n\r\n  constructor(private httpClient: HttpClient,\r\n              private store: Store<fromAppReducers.AppState>,\r\n              private taskInfoService: TaskInfoService,\r\n              private snackBarService: SnackBarService) {\r\n  }\r\n\r\n  getCurrentUser(username: string) {\r\n    this.httpClient.get<UserModel>(this.basehost + '/v1/users/' + username)\r\n      .subscribe((user: UserModel) => {\r\n        this.store.dispatch(new UsersActions.SetCurrntUserDetails(user));\r\n      }, response => {\r\n        this.snackBarService.showSnackBar(response.error.message);\r\n      });\r\n  }\r\n\r\n  updateUser(user: UserModel) {\r\n    this.httpClient.put<UserModel>(this.basehost + '/v1/users/' + user.username, user)\r\n      .subscribe(\r\n        (updatedUser: UserModel) => {\r\n          this.store.dispatch(new UsersActions.SetCurrntUserDetails(updatedUser));\r\n          this.snackBarService.showSnackBar('DONE!', SnackBarTheme.success);\r\n        }, response => {\r\n          this.snackBarService.showSnackBar(response.error.message);\r\n        });\r\n  }\r\n\r\n  updatePassword(oldPassword, newPassword, username) {\r\n    this.httpClient.put<boolean>(this.basehost + '/v1/users/' + username + '/pass', {\r\n      oldPassword: oldPassword,\r\n      newPassword: newPassword\r\n    })\r\n      .subscribe(\r\n        (done: boolean) => {\r\n          this.snackBarService.showSnackBar('DONE!', SnackBarTheme.success);\r\n        }, response => {\r\n          this.snackBarService.showSnackBar(response.error.message);\r\n        }\r\n      );\r\n  }\r\n\r\n  getActiveWsUsers() {\r\n    this.httpClient.get<string[]>(this.basehost + '/v1/users/ws-active')\r\n      .subscribe((activeUsers: string[]) => {\r\n        console.log('activeUsers',activeUsers)\r\n        this.store.dispatch(new ChatActions.SetActiveWsUsers(activeUsers));\r\n      }, response => {\r\n        this.snackBarService.showSnackBar(response.error.message);\r\n      });\r\n  }\r\n\r\n  getTableHeaderBy(tableId: number) {\r\n    return this.httpClient.get<TableDefinitionModel>(this.basehost + '/v1/projects/tables/' + tableId + '/definition')\r\n      .subscribe((definition: TableDefinitionModel) => {\r\n        this.store.dispatch(new TablesActions.SetTableDefinitionAction(definition));\r\n      }, response => {\r\n        this.snackBarService.showSnackBar(response.error.message);\r\n      });\r\n  }\r\n\r\n  getTableRowsBy(tableId: number) {\r\n    return this.httpClient.get<RowContentModel[]>(this.basehost + '/v1/projects/tables/' + tableId + '/rows')\r\n      .subscribe((rows: RowContentModel[]) => {\r\n        this.store.dispatch(new TablesActions.SetRowsAction(rows));\r\n      }, response => {\r\n        this.snackBarService.showSnackBar(response.error.message);\r\n      });\r\n  }\r\n\r\n  getTablesDetails() {\r\n    this.httpClient.get<TablesDetails[]>(this.basehost + '/v1/projects/tables/details')\r\n      .subscribe(\r\n        (names) => {\r\n          console.log(names)\r\n          this.store.dispatch(new TablesActions.SetNamesAction(names));\r\n        }, response => {\r\n          this.snackBarService.showSnackBar(response.error.message);\r\n        }\r\n      );\r\n  }\r\n\r\n  postTableDefinition(definition: TableDefinitionModel, databaseEnvironment) {\r\n    this.httpClient.post(this.basehost + '/v1/projects/tables/definition/' + databaseEnvironment, definition)\r\n      .subscribe(() => {\r\n          this.snackBarService.showSnackBar(\"Done!\", SnackBarTheme.success);\r\n        }, response => {\r\n          this.snackBarService.showSnackBar(response.error.message);\r\n        }\r\n      );\r\n  }\r\n\r\n  getUsers() {\r\n    this.httpClient.get<UserModel[]>(this.basehost + '/v1/users')\r\n      .subscribe((users: UserModel[]) => {\r\n        this.store.dispatch(new UsersActions.SetUsersAction(users));\r\n      }, response => {\r\n        this.snackBarService.showSnackBar(response.error.message);\r\n      });\r\n  }\r\n\r\n  getRoles() {\r\n    this.httpClient.get<RoleModel[]>(this.basehost + '/v1/roles/details')\r\n      .subscribe((roles: RoleModel[]) => {\r\n        this.store.dispatch(new UsersActions.SetRolesAction(roles));\r\n      }, response => {\r\n        this.snackBarService.showSnackBar(response.error.message);\r\n      });\r\n  }\r\n\r\n  addRoleToUser(data: { username: string, rolename: string }) {\r\n    this.httpClient.post(this.basehost + '/v1/users/' + data.username + '/roles/' + data.rolename, null)\r\n      .subscribe((user: UserModel) => {\r\n        this.store.dispatch(new UsersActions.AddRoleToUser(user));\r\n      }, response => {\r\n        this.snackBarService.showSnackBar(response.error.message);\r\n      });\r\n  }\r\n\r\n  removeRoleFromUser(data: { user: UserModel, rolename: string }) {\r\n    this.httpClient.delete<boolean>(this.basehost + '/v1/users/' + data.user.username + '/roles/' + data.rolename)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          data.user.roleNames.splice(data.user.roleNames.indexOf(data.rolename), 1);\r\n          this.store.dispatch(new UsersActions.RemoveRoleFromUser(data.user));\r\n        }\r\n      }, response => {\r\n        this.snackBarService.showSnackBar(response.error.message);\r\n      });\r\n  }\r\n\r\n  removeUserFromRole(data: { role: RoleModel, username: string }) {\r\n    this.httpClient.delete<boolean>(this.basehost + '/v1/roles/' + data.role.name + '/users/' + data.username)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          let usertoRemove = null;\r\n          data.role.userDtos.forEach(user => {\r\n            if (user.username === data.username) {\r\n              usertoRemove = user;\r\n            }\r\n          });\r\n          data.role.userDtos.splice(data.role.userDtos.indexOf(usertoRemove), 1);\r\n          this.store.dispatch(new UsersActions.RemoveUserFromRole(data.role));\r\n        }\r\n      }, response => {\r\n        this.snackBarService.showSnackBar(response.error.message)\r\n      });\r\n  }\r\n\r\n  addNewRow(tableId: number, newRow: RowContentModel) {\r\n    this.httpClient.post<RowContentModel>(this.basehost + '/v1/projects/tables/' + tableId + '/row', newRow)\r\n      .subscribe((savedRow: RowContentModel) => {\r\n          // console.log('addNewRow dss OK: ', savedRow)\r\n          this.store.dispatch(new TablesActions.AddRowAction(savedRow));\r\n        },\r\n        response => {\r\n          this.snackBarService.showSnackBar(response.error.message);\r\n        });\r\n  }\r\n\r\n  updateRow(tableId: number, updatedRow: RowContentModel) {\r\n    this.httpClient.put<RowContentModel>(this.basehost + '/v1/projects/tables/' + tableId + '/row', updatedRow)\r\n      .subscribe(\r\n        (savedRow: RowContentModel) => {\r\n          // console.log(\"updateRow dss OK: \", savedRow);\r\n          this.store.dispatch(new TablesActions.UpdateRowAction(savedRow));\r\n        }, response => {\r\n          this.snackBarService.showSnackBar(response.error.message);\r\n        }\r\n      );\r\n  }\r\n\r\n  getCurrentUserRoles(username: string) {\r\n    this.httpClient.get<string[]>(this.basehost + '/v1/roles/user/' + username)\r\n      .subscribe((roles: string[]) => {\r\n          this.store.dispatch(new UsersActions.SetCurrentUserRolenames(roles));\r\n        },\r\n        response => {\r\n          this.snackBarService.showSnackBar(response.error.message);\r\n        }\r\n      );\r\n  }\r\n\r\n  saveNewRole(role: { name: string, description: string }) {\r\n    this.httpClient.post<RoleModel>(this.basehost + '/v1/roles/' + role.name, role.description)\r\n      .subscribe((savedRole: RoleModel) => {\r\n          this.store.dispatch(new UsersActions.AddRoleAction(savedRole));\r\n        },\r\n        response => {\r\n          this.snackBarService.showSnackBar(response.error.message);\r\n        });\r\n  }\r\n\r\n  deleteUser(username: string): boolean | void {\r\n    this.httpClient.delete<boolean>(this.basehost + '/v1/users/' + username)\r\n      .subscribe((status: boolean) => {\r\n          if (status) {\r\n            this.store.dispatch(new UsersActions.DeleteUserAction(username));\r\n            this.store.dispatch(new UsersActions.SetNewUserModeAction(false));\r\n            this.store.dispatch(new UsersActions.SetUserDisplayedTask(null));\r\n          }\r\n          return true;\r\n        },\r\n        response => {\r\n          this.snackBarService.showSnackBar(response.error.message);\r\n        });\r\n  }\r\n\r\n  saveNewUser(user: UserModel) {\r\n    this.httpClient.post<UserModel>(this.basehost + '/v1/users', user)\r\n      .subscribe((savedUser: UserModel) => {\r\n          console.log('saveNewUser dss OK: ', savedUser)\r\n          this.store.dispatch(new UsersActions.AddUserAction(savedUser));\r\n          this.store.dispatch(new UsersActions.SetNewUserModeAction(false));\r\n        },\r\n        response => {\r\n          this.snackBarService.showSnackBar(response.error.message);\r\n        });\r\n  }\r\n\r\n  saveNewTask(tableId: number, newTask: TaskModel, rowId: number) {\r\n    this.httpClient.post<TaskModel>(this.basehost + '/v1/projects/tables/' + tableId + '/rows/' + rowId + '/tasks', newTask)\r\n      .subscribe((task: TaskModel) => {\r\n          this.store.dispatch(new TablesActions.AddTaskAction({task: task, rowId: rowId}));\r\n        },\r\n        response => {\r\n          this.snackBarService.showSnackBar(response.error.message);\r\n        });\r\n  }\r\n\r\n  setTableUsers(tableId: number) {\r\n    // console.log(tableName);\r\n    this.httpClient.get<UserModel[]>(this.basehost + '/v1/users/table/' + tableId)\r\n      .subscribe((users: UserModel[]) => {\r\n          this.store.dispatch(new TablesActions.SetTableUsers(users));\r\n        },\r\n        response => {\r\n          this.snackBarService.showSnackBar(response.error.message);\r\n        }\r\n      );\r\n  }\r\n\r\n  onAssignUserToTask(tableId: number, rowId: number, taskId: number, username: string) {\r\n    this.httpClient.post<TaskModel>(this.basehost + '/v1/projects/tables/' + tableId + '/rows/tasks/' + taskId, username)\r\n      .subscribe((task: TaskModel) => {\r\n          this.store.dispatch(new TablesActions.UpdateRowsTaskAction({rowId: rowId, task: task}));\r\n          this.taskInfoService.stompClient.send('/app/newTasks/' + username, {});\r\n        },\r\n        response => {\r\n          this.snackBarService.showSnackBar(response.error.message);\r\n        });\r\n  }\r\n\r\n  onRemoveUserFromTask(tableId: number, rowId: number, taskId: number, username: string) {\r\n    this.httpClient.delete<TaskModel>(this.basehost + '/v1/projects/tables/' + tableId + '/rows/tasks/' + taskId + '/user/' + username)\r\n      .subscribe((task: TaskModel) => {\r\n          // console.log('onRemoveUserFromTask dss OK: ', task)\r\n          this.store.dispatch(new TablesActions.UpdateRowsTaskAction({rowId: rowId, task: task}));\r\n          this.taskInfoService.stompClient.send('/app/newTasks/' + username, {});\r\n        },\r\n        response => {\r\n          this.snackBarService.showSnackBar(response.error.message);\r\n        });\r\n  }\r\n\r\n  updateTask(task: TaskModel) {\r\n    this.httpClient.put<TaskModel>(this.basehost + '/v1/projects/tables/' + task.tableId + '/rows/tasks', task)\r\n      .subscribe(\r\n        (updatedTask: TaskModel) => {\r\n          console.log('updateTask dss OK: ', updatedTask);\r\n          this.store.dispatch(new TablesActions.UpdateTaskAction(updatedTask));\r\n          this.store.dispatch(new UsersActions.UpdateTaskAction(updatedTask));\r\n        }, response => {\r\n          this.snackBarService.showSnackBar(response.error.message);\r\n        }\r\n      );\r\n  }\r\n\r\n  deleteTask(tableId: number, taskId: number, rowId: number) {\r\n    this.httpClient.delete<boolean>(this.basehost + '/v1/projects/tables/' + tableId + '/rows/tasks/' + taskId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.store.dispatch(new TaskActions.OnDeleteTask(taskId));\r\n          this.store.dispatch(new TablesActions.DeleteTask({rowId: rowId, taskId: taskId}));\r\n        }\r\n      }, response => {\r\n        this.snackBarService.showSnackBar(response.error.message);\r\n      });\r\n  }\r\n\r\n  deleteRow(tableId: number, rowId: number) {\r\n    this.httpClient.delete<boolean>(this.basehost + '/v1/projects/tables/' + tableId + '/rows/' + rowId)\r\n      .subscribe((response) => {\r\n        if (response) {\r\n          this.store.dispatch(new TablesActions.DeleteRow(rowId));\r\n        }\r\n      }, response => {\r\n        this.snackBarService.showSnackBar(response.error.message);\r\n      });\r\n  }\r\n\r\n  deleteRole(roleName: string) {\r\n    this.httpClient.delete<boolean>(this.basehost + '/v1/roles/' + roleName)\r\n      .subscribe((status: boolean) => {\r\n          if (status) {\r\n            this.store.dispatch(new UsersActions.DeleteRoleAction(roleName));\r\n          }\r\n        },\r\n        response => {\r\n          this.snackBarService.showSnackBar(response.error.message);\r\n        });\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {ExtendedFilterModel, RowContentModel} from '../table.model';\r\n\r\nimport {FilterService} from './filter.service';\r\n\r\n@Pipe({name: 'extendedFilter'})\r\nexport class ExtendedFilterPipe implements PipeTransform {\r\n  constructor(private filterService: FilterService) {\r\n\r\n  }\r\n\r\n  transform(rows: RowContentModel[], extendedFilterContent: ExtendedFilterModel, filterSelect: boolean) {\r\n    return rows.filter(row => this.filterService.runExtendedRowFilter(row, extendedFilterContent, filterSelect));\r\n  }\r\n}\r\n","import {ExtendedFilterModel, RowContentModel} from '../table.model';\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class FilterService {\r\n  constructor() {\r\n\r\n  }\r\n\r\n  runExtendedRowFilter(row: RowContentModel, filter, filterSelect: boolean): boolean {\r\n    if (this.isEmptyFilter(filter)) {\r\n      return true;\r\n    } else {\r\n      if (filterSelect) {\r\n        return this.anyFilter(row, filter);\r\n      } else {\r\n        return FilterService.andFilter(row, filter);\r\n      }\r\n    }\r\n  }\r\n\r\n  static andFilter(row: RowContentModel, filter): boolean {\r\n    if (!FilterService.containsAll(row.id, filter.id)) {\r\n      return false;    }\r\n    if (!FilterService.containsAll(row.name || '', filter.name)) {\r\n      return false;  }\r\n    if (!FilterService.containsAll(row.createdOn, filter.createdOn)) {\r\n      return false;    }\r\n    if (!FilterService.containsAll(row.createdBy, filter.createdBy)) {\r\n      return false;    }\r\n    if (!FilterService.containsAll(row.lastModifiedOn, filter.lastModifiedOn)) {\r\n      return false;    }\r\n    if (!FilterService.containsAll(row.lastModifiedBy, filter.lastModifiedBy)) {\r\n      return false;    }\r\n    if (!FilterService.containsAll(row.taskDtos.length, filter.taskDtos)) {\r\n      return false;    }\r\n    for (let i = 0; i < row.columnValueDtos.length; i++) {\r\n        if (!FilterService.containsAll(FilterService.getMappedValue(row.columnValueDtos[i]), filter.columnValueDtos[i].value)) {\r\n          return false;\r\n        }\r\n      }\r\n    return true;\r\n  }\r\n\r\n  static containsAll(rowValue, filterValue): boolean {\r\n    if (!filterValue) {\r\n      return true;\r\n    }\r\n    return rowValue.toString().includes(filterValue);\r\n  }\r\n\r\n\r\n  anyFilter(row: RowContentModel, filter): boolean {\r\n    let condition = true;\r\n\r\n    if (FilterService.containsAny(row.id, filter.id)) {\r\n      condition = false;\r\n    }\r\n    if (FilterService.containsAny(row.name || '', filter.name)) {\r\n      condition = false;\r\n    }\r\n    if (FilterService.containsAny(row.createdOn, filter.createdOn)) {\r\n      condition = false;\r\n    }\r\n    if (FilterService.containsAny(row.createdBy, filter.createdBy)) {\r\n      condition = false;\r\n    }\r\n    if (FilterService.containsAny(row.lastModifiedOn, filter.lastModifiedOn)) {\r\n      condition = false;\r\n    }\r\n    if (FilterService.containsAny(row.lastModifiedBy, filter.lastModifiedBy)) {\r\n      condition = false;\r\n    }\r\n    if (row.taskDtos.length === filter.taskDtos) {\r\n      condition = false;\r\n    }\r\n    row.columnValueDtos.forEach((value, i) => {\r\n      if (FilterService.containsAny(FilterService.getMappedValue(value), filter.columnValueDtos[i].value)) {\r\n        condition = false;\r\n      }\r\n    });\r\n    return !condition;\r\n  }\r\n\r\n  runFilterTable(row: RowContentModel, filter: string): boolean { // TODO extend filter to unmodifiable fields\r\n    let condition = false;\r\n    row.columnValueDtos.forEach(value => {\r\n      if (FilterService.containsAny(FilterService.getMappedValue(value), filter)) {\r\n        condition = true;\r\n      }\r\n    });\r\n    return condition;\r\n  }\r\n\r\n  static containsAny(rowValue, filterValue): boolean {\r\n    if (!filterValue) {\r\n      return false;\r\n    }\r\n    return rowValue.toString().includes(filterValue);\r\n  }\r\n\r\n  static getMappedValue(object): string {\r\n    return object[Object.keys(object)[0]].value.toString();\r\n  }\r\n\r\n  isEmptyFilter(filter: ExtendedFilterModel): boolean {\r\n    let isFilterEmpty = true;\r\n    if (!filter) {\r\n      return true;\r\n    }\r\n    if (filter.id) {\r\n      isFilterEmpty = false;\r\n    }\r\n    if (filter.name) {\r\n      isFilterEmpty = false;\r\n    }\r\n    if (filter.createdOn) {\r\n      isFilterEmpty = false;\r\n    }\r\n    if (filter.createdBy) {\r\n      isFilterEmpty = false;\r\n    }\r\n    if (filter.lastModifiedOn) {\r\n      isFilterEmpty = false;\r\n    }\r\n    if (filter.lastModifiedBy) {\r\n      isFilterEmpty = false;\r\n    }\r\n    if (filter.taskDtos) {\r\n      isFilterEmpty = false;\r\n    }\r\n    filter.columnValueDtos.forEach((value) => {\r\n      if (value.value) {\r\n        isFilterEmpty = false;\r\n      }\r\n    });\r\n    return isFilterEmpty;\r\n\r\n  }\r\n}\r\n","import {NgModule} from \"@angular/core\";\r\nimport {\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatDatepickerModule, MatNativeDateModule,\r\n  MatCheckboxModule,\r\n  MatSidenavModule,\r\n  MatToolbarModule,\r\n  MatListModule,\r\n  MatCardModule,\r\n  MatSelectModule,\r\n  MatProgressSpinnerModule,\r\n  MatDialogModule,\r\n  MatTableModule, MatSortModule, MatPaginatorModule, MatSnackBarModule\r\n} from \"@angular/material\";\r\n\r\nconst MATERIAL_MODULES = [\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatCheckboxModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatSnackBarModule\r\n];\r\n\r\n@NgModule({\r\n  imports: [...MATERIAL_MODULES],\r\n  exports: [...MATERIAL_MODULES]\r\n})\r\nexport class AppMaterialModule {\r\n}\r\n","import {NgModule} from \"@angular/core\";\r\nimport {UserComponent} from \"../../../user/user.component\";\r\nimport {ChatComponent} from \"../../../chat/chat.component\";\r\nimport {TrainingComponent} from \"../../../training/training.component\";\r\nimport {SigninComponent} from \"../../../signin/signin.component\";\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\nimport {HomeComponent} from \"../../../home/home.component\";\r\nimport {StatisticsComponent} from \"../../../statistics/statistics.component\";\r\nimport {RolesComponent} from \"../../../roles/roles.component\";\r\nimport {TablesComponent} from \"../../../tables/tables.component\";\r\nimport {DefinitionComponent} from \"../../../definition/definition.component\";\r\nimport {UserInfoComponent} from \"../../../user-info/user-info.component\";\r\n\r\nexport const appRoutes: Routes = [\r\n  {path: 'home', component: HomeComponent},\r\n  {path: 'roles', component: RolesComponent},\r\n  {path: 'users', component: UserComponent},\r\n  {path: 'tables', component: TablesComponent},\r\n  {path: 'signin', component: SigninComponent},\r\n  {path: 'definitions', component: DefinitionComponent},\r\n  {path: 'statistics', component: StatisticsComponent},\r\n  {path: 'chat', component: ChatComponent},\r\n  {path: 'user-info', component: UserInfoComponent},\r\n  {path: 'user-info', component: UserInfoComponent},\r\n  {path: 'training', component: TrainingComponent},\r\n];\r\n\r\n@NgModule({\r\nimports: [RouterModule.forRoot(appRoutes)],\r\nexports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import {Injectable} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport {Store} from '@ngrx/store';\r\nimport * as fromAppReducers from './store/app.reducers';\r\nimport * as fromServerModel from '../shared/server.model';\r\nimport {AuthCookie} from './auth-cookies-handler';\r\nimport * as UserActions from './store/user/users.actions';\r\nimport {Token} from './auth.model';\r\n\r\n@Injectable()\r\nexport class OauthService {\r\n  basehost = fromServerModel.baseUrl;\r\n  token: string;\r\n  isAuthenticated: boolean;\r\n\r\n  constructor(private router: Router,\r\n              private httpClient: HttpClient,\r\n              private store: Store<fromAppReducers.AppState>) {\r\n    this.store.select('users', 'token').forEach(token => {\r\n      if (token !== null) {\r\n        AuthCookie.setAuth(token.access_token, token.expires_in);\r\n        this.token = token.access_token;\r\n        this.isAuthenticated = true;\r\n      } else {\r\n        this.isAuthenticated = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  obtainAccessToken(loginData: { username: string, password: string }) {\r\n    const params = new HttpParams()\r\n      .append('username', loginData.username)\r\n      .append('password', loginData.password)\r\n      .append('grant_type', 'password')\r\n      .append('client_id', 'live-test');\r\n    const headers = new HttpHeaders({\r\n      'Content-type': 'application/x-www-form-urlencoded; charset=utf-8',\r\n      'Authorization': 'Basic ' + btoa('live-test:bG2ZS10ZXN0')\r\n    });\r\n\r\n    this.httpClient.post<Token>(this.basehost + '/oauth/token', null, {\r\n      observe: 'body',\r\n      headers: headers,\r\n      params: params\r\n    })\r\n      .subscribe(\r\n        (data: Token) => {\r\n          this.saveToken(data, loginData.username);\r\n          this.router.navigate(['/home']);\r\n        },\r\n        err => {\r\n          console.log(err.message);\r\n          const errorMessage = err.message;\r\n          if (errorMessage.includes('live-test')) {\r\n            this.store.dispatch(new UserActions.SetLoginFailureInfo('Invalid credentials!'));\r\n          } else {\r\n            switch (errorMessage) {\r\n              case 'Http failure response for (unknown url): 0 Unknown Error':\r\n                this.store.dispatch(new UserActions.SetLoginFailureInfo('Connection problem'));\r\n                return;\r\n              default:\r\n                this.store.dispatch(new UserActions.SetLoginFailureInfo(errorMessage));\r\n                return;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n      );\r\n  }\r\n\r\n  // getResource(resourceUrl) : Observable<any> {\r\n  //   var headers = new HttpHeaders({'Content-type': 'application/x-www-form-urlencoded; charset=utf-8',\r\n  //     'Authorization': 'Bearer ' + this.cookie.getAuth()});\r\n  //   return this.httpClient.get(resourceUrl, { headers: headers }).subscribe({})\r\n  //   //.catch((error:any) => Observable.throw('Server error',error));\r\n  // }\r\n\r\n  saveToken(token: Token, username: string) {\r\n    // const expireDate = new Date().getTime() + (1000 * token.expires_in); // TODO remove??\r\n    this.store.dispatch(new UserActions.SetTokenAction(token));\r\n    this.store.dispatch(new UserActions.SetCurrentUserAction(username));\r\n    AuthCookie.setAuth(token.access_token, token.expires_in);\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'reverse'\r\n})\r\nexport class ReversePipe implements PipeTransform {\r\n  transform(value) {\r\n    return value.slice().reverse();\r\n  }\r\n}\r\n","export const baseUrl = 'https://my-jira.herokuapp.com';\r\n// export const baseUrl = 'http://localhost:8080';\r\n","import {Component, EmbeddedViewRef, Inject} from \"@angular/core\";\r\nimport {MAT_SNACK_BAR_DATA, MatSnackBarRef} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: 'app-snack-bar',\r\n  template: `\r\n    <section class=\"form\"\r\n             fxLayout\r\n             fxLayoutAlign=\"center\">\r\n        <mat-card fxFlex.xs=\"100%\" fxFlex=\"100%\" style=\"background-color: transparent !important;\">\r\n          <mat-card-title fxLayoutAlign=\"center\" class=\"text-info\">{{message || 'What!!!'}}</mat-card-title>\r\n          <mat-card-content  class=\"d-flex justify-content-between align-items-center\">\r\n            <button class=\"btn btn-outline-info\" (click)=\"dismiss()\">No</button>\r\n            <button class=\"btn btn-outline-danger\" (click)=\"dismissWithAction()\">Yes</button>\r\n          </mat-card-content>\r\n        </mat-card>\r\n    </section>\r\n  `,\r\n  styles: [`\r\n    ::ng-deep .styled-snack {\r\n      padding: 0;\r\n      margin: 0;\r\n      border: 1px solid #17a2b8!important;\r\n      background-color: transparent !important;\r\n    }\r\n    mat-card-content {\r\n      \r\n    }\r\n  `],\r\n})\r\nexport class ActionSnackBarComponent {\r\n  public ref: MatSnackBarRef<ActionSnackBarComponent>;\r\n  message: string;\r\n  action: string;\r\n\r\n\r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: { message: string, action: string }) {\r\n    this.message = data.message;\r\n    this.action = data.action;\r\n    setTimeout(() => {\r\n      this.dismiss();\r\n    }, 5000)\r\n\r\n  }\r\n\r\n  dismiss() {\r\n    this.ref.dismiss();\r\n  }\r\n\r\n  dismissWithAction() {\r\n    this.ref.dismissWithAction();\r\n  }\r\n}\r\n","import {Component, Inject} from \"@angular/core\";\r\nimport {MAT_SNACK_BAR_DATA, MatSnackBarRef} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: 'app-snack-bar',\r\n  template: `\r\n    <section class=\"form\"\r\n             fxLayout\r\n             fxLayoutAlign=\"center\">\r\n      <mat-card fxFlex.xs=\"100%\" fxFlex=\"100%\" style=\"background-color: transparent !important;\">\r\n        <mat-card-content fxLayoutAlign=\"center\">\r\n          <span class=\"text-{{className}} h5\" style=\"margin: 5px 30px 0 0\">{{(message | json) || 'Error'}}</span>\r\n          <button class=\"btn btn-outline-{{className}}\" (click)=\"dismiss()\">Close</button>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </section>\r\n  `,\r\n  styles: [`    \r\n    ::ng-deep .info {\r\n      padding: 0;\r\n      margin: 0;\r\n      background-color: transparent !important;\r\n      color: #17a2b8 !important;\r\n    }\r\n\r\n    ::ng-deep .danger {\r\n      padding: 0;\r\n      margin: 0;\r\n      background-color: transparent !important;\r\n      color: #dc3545 !important;\r\n    }\r\n\r\n    ::ng-deep .success {\r\n      padding: 0;\r\n      margin: 0;\r\n      background-color: transparent !important;\r\n      color: #28a745 !important;\r\n    }\r\n\r\n    ::ng-deep .primary {\r\n      padding: 0;\r\n      margin: 0;\r\n      background-color: transparent !important;\r\n      color: #007bff !important;\r\n    }\r\n  `],\r\n})\r\nexport class InfoSnackBarComponent {\r\n  public ref: MatSnackBarRef<InfoSnackBarComponent>;\r\n  message: string;\r\n  className: string;\r\n\r\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: { message: string, className: string }) {\r\n    this.message = data.message;\r\n    this.className = data.className;\r\n    setTimeout(() => {\r\n      this.dismiss();\r\n    }, 5000)\r\n  }\r\n\r\n  dismiss() {\r\n    this.ref.dismiss();\r\n  }\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {InfoSnackBarComponent} from \"./info-snack-bar.component\";\r\nimport {MatSnackBar, MatSnackBarRef} from \"@angular/material\";\r\n\r\nexport enum SnackBarTheme {\r\n  danger = 'danger',\r\n  info = 'info',\r\n  primary = 'primary',\r\n  success = 'success',\r\n}\r\n@Injectable()\r\nexport class SnackBarService {\r\n  snackBarRef: MatSnackBarRef<InfoSnackBarComponent>;\r\n\r\n  constructor(public snackBar: MatSnackBar) {\r\n  }\r\n\r\n  public showSnackBar(message: string, color: SnackBarTheme = SnackBarTheme.danger): void {\r\n    this.snackBarRef = this.snackBar.openFromComponent(InfoSnackBarComponent, {\r\n      panelClass: [color],\r\n      data: {\r\n        message: message,\r\n        className: color\r\n      }\r\n    });\r\n    this.snackBarRef.instance.ref = this.snackBarRef;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {WebSocketService} from './web-socket.service';\r\nimport {Client} from 'stompjs/lib/stomp.js';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class TaskInfoService {\r\n  public stompClient: Client;\r\n  constructor(private wsService: WebSocketService) {\r\n  }\r\n\r\n  getClient(): Client {\r\n    this.stompClient = this.wsService.connect();\r\n      return this.stompClient;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport * as SockJS from 'sockjs-client';\r\nimport {AuthCookie} from '../auth-cookies-handler';\r\nimport {Stomp, Client, Frame} from 'stompjs/lib/stomp.js';\r\nimport {Store} from '@ngrx/store';\r\nimport * as fromAppReducers from '../store/app.reducers';\r\nimport * as UserActions from '../store/user/users.actions';\r\nimport * as ChatActions from '../store/chat/chat.actions';\r\nimport {baseUrl} from \"../server.model\";\r\n\r\n\r\n@Injectable()\r\nexport class WebSocketService {\r\n  stompClient: Client;\r\n\r\n  constructor(private cookie: AuthCookie,\r\n              private store: Store<fromAppReducers.AppState>) {\r\n  }\r\n\r\n  public connect(): Client {\r\n    return this.connectWS();\r\n  }\r\n\r\n  private connectWS(): Subject<any> {\r\n    const socket = new SockJS(baseUrl + '/newTasks?access_token=' + AuthCookie.getAuth()) as WebSocket;\r\n    this.stompClient = Stomp.over(socket);\r\n    this.stompClient.connect({}, () => {\r\n      // console.log('CONNECT CONNECT', frame);\r\n      this.store.select('users', 'currentUser').subscribe((username: string) => {\r\n        this.stompClient.subscribe('/topic/newTasks/' + username, () => { // (messageOutput) =>\r\n          // console.log(messageOutput);\r\n          this.store.dispatch(new UserActions.SetTaskInfoAction(true));\r\n        });\r\n        this.stompClient.subscribe('/topic/chat', (messageOutput: Frame) => {\r\n          // console.log('/topic/chat/',messageOutput.body);\r\n          this.store.dispatch(new ChatActions.AppendChatWithMessage(JSON.parse(messageOutput.body)));\r\n        });\r\n        this.stompClient.subscribe('/topic/chat/' + username, (messageOutput: Frame) => {\r\n          // console.log('/topic/chat/',messageOutput.body);\r\n          this.store.dispatch(new ChatActions.AppendChatWithMessage(JSON.parse(messageOutput.body)));\r\n        });\r\n        this.stompClient.subscribe('/topic/people/chat', (messageOutput: Frame) => {\r\n          // console.log('/topic/people/chat/',messageOutput.body);\r\n          this.store.dispatch(new ChatActions.SetActiveWsUsers(JSON.parse(messageOutput.body)));\r\n        });\r\n      });\r\n    });\r\n    return this.stompClient;\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {RowContentModel} from '../table.model';\r\nimport {SortModel} from './sort.model';\r\n\r\n@Pipe({name: 'orderBy'})\r\nexport class SortByPipe implements PipeTransform {\r\n\r\n  transform(rows: RowContentModel[], sortContent: SortModel): RowContentModel[] {\r\n    if (sortContent == null) {\r\n      return rows;\r\n    } else {\r\n      switch (sortContent.dataType) {\r\n        case 'ST':\r\n        case 'DE':\r\n        case 'EN':\r\n          return this.textSort(rows, sortContent.asc, sortContent.name, sortContent.index);\r\n        case 'IN':\r\n          return this.numberSort(rows, sortContent.asc, sortContent.name, sortContent.index);\r\n        case 'DT':\r\n          return this.dateSort(rows, sortContent.asc, sortContent.name, sortContent.index);\r\n        default:\r\n          return rows;\r\n      }\r\n    }\r\n  }\r\n\r\n  textSort(rows: RowContentModel[], asc: boolean, name: string, index: number): RowContentModel[] {\r\n    switch (name) {\r\n      case 'id':\r\n        return this.sortNumber(rows, name, index, asc); // TODO toremove?\r\n      case 'name':\r\n        return this.sortText(rows, name, index, asc);\r\n      case 'createdBy':\r\n        return this.sortText(rows, name, index, asc);\r\n      case 'createdOn':\r\n        return this.sortDate(rows, name, index, asc); // TODO toremove?\r\n      case 'lastModifiedBy':\r\n        return this.sortText(rows, name, index, asc);\r\n      case 'lastModifiedOn':\r\n        return this.sortDate(rows, name, index, asc); // todo toremove?\r\n      case 'taskDtos':\r\n        return this.sortByArrayLength(rows, name, index, asc); // todo toremove?\r\n      case 'column':\r\n        return this.sortText(rows, name, index, asc);\r\n    }\r\n  }\r\n\r\n  numberSort(rows: RowContentModel[], asc: boolean, name: string, index: number): RowContentModel[] {\r\n    switch (name) {\r\n      case 'id':\r\n        return this.sortNumber(rows, name, index, asc);\r\n      case 'name':\r\n        return this.sortText(rows, name, index, asc); // todo toremove?\r\n      case 'createdBy':\r\n        return this.sortText(rows, name, index, asc); // todo toremove?\r\n      case 'createdOn':\r\n        return this.sortDate(rows, name, index, asc); // todo toremove?\r\n      case 'lastModifiedBy':\r\n        return this.sortText(rows, name, index, asc); // todo toremove?\r\n      case 'lastModifiedOn':\r\n        return this.sortDate(rows, name, index, asc); // todo toremove?\r\n      case 'taskDtos':\r\n        return this.sortByArrayLength(rows, name, index, asc);\r\n      case 'column':\r\n        return this.sortNumber(rows, name, index, asc);\r\n    }\r\n  }\r\n\r\n  dateSort(rows: RowContentModel[], asc: boolean, name: string, index: number): RowContentModel[] {\r\n    switch (name) {\r\n      case 'id':\r\n        return this.sortNumber(rows, name, index, asc);\r\n      case 'name':\r\n        return this.sortText(rows, name, index, asc);\r\n      case 'createdBy':\r\n        return this.sortText(rows, name, index, asc);\r\n      case 'createdOn':\r\n        return this.sortDate(rows, name, index, asc); // todo toremove?\r\n      case 'lastModifiedBy':\r\n        return this.sortText(rows, name, index, asc);\r\n      case 'lastModifiedOn':\r\n        return this.sortDate(rows, name, index, asc); // todo toremove?\r\n      case 'taskDtos':\r\n        return this.sortByArrayLength(rows, name, index, asc);\r\n      case 'column':\r\n        return this.sortDate(rows, name, index, asc);\r\n    }\r\n  }\r\n\r\n  sortText(rows: RowContentModel[], field: string, index: number, asc: boolean) {\r\n    if (field !== 'column') {\r\n      rows.sort((a, b) => {\r\n        return a[field].localeCompare(b[field]);\r\n      });\r\n    } else {\r\n      rows.sort((a, b) => {\r\n        return a.columnValueDtos[index][Object.keys(a.columnValueDtos[index])[0]].value\r\n          .localeCompare(b.columnValueDtos[index][Object.keys(a.columnValueDtos[index])[0]].value);\r\n      });\r\n    }\r\n    if (!asc) {\r\n      return rows;\r\n    } else {\r\n      return rows.reverse();\r\n    }\r\n  }\r\n\r\n  sortNumber(rows: RowContentModel[], field: string, index: number, asc: boolean): RowContentModel[] {\r\n    if (field !== 'column') {\r\n      rows.sort((a, b) => {\r\n        return a[field] - b[field];\r\n      });\r\n    } else {\r\n      rows.sort((a, b) => {\r\n        return parseInt(a.columnValueDtos[index][Object.keys(a.columnValueDtos[index])[0]].value, 0)\r\n          - parseInt(b.columnValueDtos[index][Object.keys(a.columnValueDtos[index])[0]].value, 0);\r\n      });\r\n    }\r\n    return asc ? rows : rows.reverse();\r\n  }\r\n\r\n  sortByArrayLength(rows: RowContentModel[], field: string, index: number, asc: boolean): RowContentModel[] {\r\n    rows.sort((a, b) => {\r\n      return a[field].length - b[field].length;\r\n    });\r\n    return asc ? rows : rows.reverse();\r\n  }\r\n\r\n  sortDate(rows: RowContentModel[], field: string, index: number, asc: boolean): RowContentModel[] {\r\n    if (field !== 'column') {\r\n      rows.sort((a, b) => {\r\n        return Date.parse(a[field]) - Date.parse(b[field]);\r\n      });\r\n    } else {\r\n      rows.sort((a, b) => {\r\n        return Date.parse(a.columnValueDtos[index][Object.keys(a.columnValueDtos[index])[0]].value)\r\n          - Date.parse(b.columnValueDtos[index][Object.keys(a.columnValueDtos[index])[0]].value);\r\n      });\r\n    }\r\n    return asc ? rows : rows.reverse();\r\n  }\r\n}\r\n","import {RowContentModel, Status, TaskModel} from '../table.model';\r\nimport {\r\n  ColumnInfoModel, DescriptionInfoModel, EnumInfoModel, NumberInfoModel, ShortTextInfoModel,\r\n  TableInfoModel\r\n} from './table-info.model';\r\n\r\nexport class StatisticsService {\r\n  mapToRowsInfo(rowList: RowContentModel[]): TableInfoModel {\r\n    const rows: RowContentModel[] = [];\r\n    const doneRows: RowContentModel[] = [];\r\n    const undoneRows: RowContentModel[] = [];\r\n    const columnInfo: ColumnInfoModel = {\r\n      numberInfo: [],\r\n      enumInfo: [],\r\n      dateInfo: [],\r\n      shortTextInfo: [],\r\n      descriptionInfo: []\r\n    };\r\n    let numberInfoIndex = 0;\r\n    let enumInfoIndex = 0;\r\n    let dateInfoIndex = 0;\r\n    let shortTextIndex = 0;\r\n    let descriptionInfoIndex = 0;\r\n\r\n    rowList.forEach((row: RowContentModel, rowIdx) => {\r\n      rows.push(row);\r\n      if (this.containsUndoneTasks(row)) {\r\n        doneRows.push(row);\r\n      } else {\r\n        undoneRows.push(row);\r\n      }\r\n      row.columnValueDtos.forEach((value, j) => { // TODO ZASTĄPIć J ARRAY_LENGTH+1  => USUNAC CLEAN ARRAY\r\n        const string = Object.keys(value)[0];\r\n        if (string === 'IN') { // TODO if index==0 podstaw do obu (min i max) i zamien <=, >= na <,>\r\n          if (typeof columnInfo.numberInfo[j] === 'undefined') { // TODO only undefined??\r\n            columnInfo.numberInfo[j] = {\r\n              columnNumber: j,\r\n              sum: 0,\r\n              avg: 0,\r\n              min: Number.POSITIVE_INFINITY,\r\n              max: Number.NEGATIVE_INFINITY\r\n            };\r\n          }\r\n          columnInfo.numberInfo[j].sum += parseFloat(value[Object.keys(value)[0]].value);\r\n          columnInfo.numberInfo[j].avg += parseFloat(value[Object.keys(value)[0]].value);\r\n          if (columnInfo.numberInfo[j].min >= parseFloat(value[Object.keys(value)[0]].value)) {\r\n            columnInfo.numberInfo[j].min = parseFloat(value[Object.keys(value)[0]].value);\r\n          }\r\n          if (columnInfo.numberInfo[j].max <= parseFloat(value[Object.keys(value)[0]].value)) {\r\n            columnInfo.numberInfo[j].max = parseFloat(value[Object.keys(value)[0]].value);\r\n          }\r\n          numberInfoIndex++;\r\n          return;\r\n        } else if (string === 'EN') {\r\n          if (typeof columnInfo.enumInfo[j] === 'undefined') { // todo only undefined???\r\n            columnInfo.enumInfo[j] = [];\r\n          }\r\n          let exist = false;\r\n\r\n          columnInfo.enumInfo[j].forEach((columnStats: EnumInfoModel, columnInfoIdx) => {\r\n            if (columnStats.name === value[Object.keys(value)[0]].value) {\r\n              columnInfo.enumInfo[j][columnInfoIdx].sum++;\r\n              exist = true;\r\n            }\r\n          });\r\n\r\n          if (!exist) {\r\n            columnInfo.enumInfo[j][rowIdx] = {columnNumber: j, name: value[Object.keys(value)[0]].value, sum: 1};\r\n          }\r\n\r\n          enumInfoIndex++;\r\n          return;\r\n        } else if (string === 'DT') {\r\n          if (typeof columnInfo.dateInfo[j] === 'undefined') { // TODO only undefined??\r\n            columnInfo.dateInfo[j] = {\r\n              columnNumber: j,\r\n              min: Date.parse(new Date(8640000000000000).toString()),\r\n              max: Date.parse(new Date(-8640000000000000).toString())\r\n            };\r\n          }\r\n\r\n          if (columnInfo.dateInfo[j].min >= Date.parse(value[Object.keys(value)[0]].value)) {\r\n            columnInfo.dateInfo[j].min = Date.parse(value[Object.keys(value)[0]].value);\r\n          }\r\n\r\n          if (columnInfo.dateInfo[j].max <= Date.parse(value[Object.keys(value)[0]].value)) {\r\n            columnInfo.dateInfo[j].max = Date.parse(value[Object.keys(value)[0]].value);\r\n          }\r\n          dateInfoIndex++;\r\n          return;\r\n        } else if (string === 'ST') {\r\n          if (typeof columnInfo.shortTextInfo[j] === 'undefined') { // TODO only undefined??\r\n            columnInfo.shortTextInfo[j] = {columnNumber: j, avgLength: 0};\r\n          }\r\n\r\n          columnInfo.shortTextInfo[j].avgLength += value[Object.keys(value)[0]].value.length;\r\n          shortTextIndex++;\r\n          return;\r\n        } else if (string === 'DE') {\r\n          if (typeof columnInfo.descriptionInfo[j] === 'undefined') { // TODO only undefined??\r\n            columnInfo.descriptionInfo[j] = {columnNumber: j, avgLength: 0};\r\n          }\r\n          columnInfo.descriptionInfo[j].avgLength += value[Object.keys(value)[0]].value.length;\r\n          descriptionInfoIndex++;\r\n          return;\r\n        }\r\n      });\r\n    });\r\n\r\n    columnInfo.numberInfo.forEach((value: NumberInfoModel, i) => {\r\n      columnInfo.numberInfo[i]['avg'] = value.avg / rows.length;\r\n    });\r\n\r\n    columnInfo.shortTextInfo.forEach((value: ShortTextInfoModel, i) => {\r\n      columnInfo.shortTextInfo[i].avgLength = value.avgLength / rows.length;\r\n    });\r\n\r\n    columnInfo.descriptionInfo.forEach((value: DescriptionInfoModel, i) => {\r\n      columnInfo.descriptionInfo[i].avgLength = value.avgLength / rows.length;\r\n    });\r\n\r\n    return {rows: rows, doneRows: doneRows, undoneRows: undoneRows, columnInfo: StatisticsService.cleanColumnInfo(columnInfo)};\r\n  }\r\n\r\n  static cleanColumnInfo(columnInfo): ColumnInfoModel {\r\n    const cleanColumnInfo: ColumnInfoModel = {\r\n      dateInfo: [],\r\n      shortTextInfo: [],\r\n      enumInfo: [],\r\n      numberInfo: [],\r\n      descriptionInfo: []\r\n    };\r\n    cleanColumnInfo.dateInfo = StatisticsService.cleanArray(columnInfo.dateInfo);\r\n    cleanColumnInfo.shortTextInfo = StatisticsService.cleanArray(columnInfo.shortTextInfo);\r\n    cleanColumnInfo.enumInfo = StatisticsService.cleanArray(columnInfo.enumInfo);\r\n    cleanColumnInfo.numberInfo = StatisticsService.cleanArray(columnInfo.numberInfo);\r\n    cleanColumnInfo.descriptionInfo = StatisticsService.cleanArray(columnInfo.descriptionInfo);\r\n    return cleanColumnInfo;\r\n  }\r\n\r\n  static cleanArray(actual) {\r\n    const newArray = [];\r\n    for (let i = 0; i < actual.length; i++) {\r\n      if (typeof actual[i] !== 'undefined') { // TODO only undefined??\r\n        newArray.push(actual[i]);\r\n      }\r\n    }\r\n    return newArray;\r\n  }\r\n\r\n\r\n  containsUndoneTasks(row: RowContentModel) {\r\n    let rowStatus = true;\r\n    row.taskDtos.forEach((task: TaskModel) => {\r\n      if (task.status.toString() !== 'DONE') {\r\n        rowStatus = false;\r\n      }\r\n    });\r\n    return rowStatus;\r\n  }\r\n\r\n  mapToTaskInfo(rows: RowContentModel[]): { tasks, unassignedTasks, assignedTasks, inProgressTasks, doneTasks } {\r\n    const tasks: TaskModel[] = [];\r\n    const unassignedTasks: TaskModel[] = [];\r\n    const assignedTasks: TaskModel[] = [];\r\n    const inProgressTasks: TaskModel[] = [];\r\n    const doneTasks: TaskModel[] = [];\r\n\r\n    rows.forEach((row) => {\r\n      row.taskDtos.forEach((task: TaskModel) => {\r\n        console.log(task.status);\r\n        switch (task.status) {\r\n          case (Status.UNASSIGNED):\r\n            tasks.push(task);\r\n            unassignedTasks.push(task);\r\n            return;\r\n          case (Status.ASSIGNED):\r\n            tasks.push(task);\r\n            assignedTasks.push(task);\r\n            return;\r\n          case (Status.IN_PROGRESS):\r\n            tasks.push(task);\r\n            inProgressTasks.push(task);\r\n            return;\r\n          case (Status.DONE):\r\n            tasks.push(task);\r\n            doneTasks.push(task);\r\n            return;\r\n          default:\r\n            throw new Error('Unknown task status: ' + task.status);\r\n        }\r\n      });\r\n    });\r\n    return {\r\n      tasks: tasks,\r\n      unassignedTasks: unassignedTasks,\r\n      assignedTasks: assignedTasks,\r\n      inProgressTasks: inProgressTasks,\r\n      doneTasks: doneTasks\r\n    };\r\n  }\r\n\r\n}\r\n","import {Store} from '@ngrx/store';\r\nimport {Injectable} from '@angular/core';\r\nimport * as fromAppReducers from './store/app.reducers';\r\nimport * as TableActions from './store/table/tables.actions';\r\nimport * as UserActions from './store/user/users.actions';\r\nimport * as ChatActions from './store/chat/chat.actions';\r\nimport * as TaskActions from './store/task/tasks.actions';\r\nimport {AuthCookie} from './auth-cookies-handler';\r\nimport {TaskInfoService} from './socket/task-info.service';\r\n\r\n\r\n@Injectable()\r\nexport class StoreResetService {\r\n\r\n  constructor(private store: Store<fromAppReducers.AppState>,\r\n              private cookie: AuthCookie,\r\n              private ws: TaskInfoService) {\r\n  }\r\n\r\n  public resetStore() {\r\n    this.ws.stompClient.disconnect();\r\n    this.store.dispatch(new TableActions.ResetStore());\r\n    this.store.dispatch(new UserActions.ResetStore());\r\n    this.store.dispatch(new ChatActions.ResetStore());\r\n    this.store.dispatch(new TaskActions.ResetTaskStore());\r\n    AuthCookie.deleteAuth();\r\n  }\r\n}\r\n","import {Action} from '@ngrx/store';\r\nimport {ChatMessageModel} from '../../chat-message.model';\r\n\r\nexport const APPEND_CHAT_WITH_MESSAGE = 'APPEND_CHAT_WITH_MESSAGE';\r\nexport const SET_ACTIVE_USERS = 'SET_ACTIVE_USERS';\r\nexport const SELECT_CHAT = 'SELECT_CHAT';\r\nexport const RESET_STORE = 'RESET_CHAT_STORE';\r\n\r\nexport class AppendChatWithMessage implements Action {\r\n  readonly type = APPEND_CHAT_WITH_MESSAGE;\r\n\r\n  constructor(public payload: ChatMessageModel) {\r\n  }\r\n}\r\n\r\nexport class SetActiveWsUsers implements Action {\r\n  readonly type = SET_ACTIVE_USERS;\r\n\r\n  constructor(public payload: string[]) {\r\n  }\r\n}\r\n\r\nexport class SelectChat implements Action {\r\n  readonly type = SELECT_CHAT;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class ResetStore implements Action {\r\n  readonly type = RESET_STORE;\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\r\nexport type ChatActions =\r\n  AppendChatWithMessage |\r\n  SetActiveWsUsers |\r\n  SelectChat |\r\n  ResetStore;\r\n","import * as ChatActions from './chat.actions';\r\nimport {ChatMessageModel} from '../../chat-message.model';\r\n\r\nexport interface ChatState {\r\n  chatContent: ChatMessageModel[];\r\n  activeUsers: string[];\r\n  selectedChat: string;\r\n}\r\n\r\nconst initialChatState: ChatState = {\r\n  chatContent: [],\r\n  activeUsers: [],\r\n  selectedChat: ''\r\n};\r\n\r\nexport function chatReducers(state: ChatState = initialChatState, action: ChatActions.ChatActions) {\r\n  switch (action.type) {\r\n    case ChatActions.APPEND_CHAT_WITH_MESSAGE:\r\n      return {\r\n        ...state,\r\n        chatContent: [...state.chatContent, action.payload]\r\n      };\r\n    case ChatActions.SET_ACTIVE_USERS:\r\n      return {\r\n        ...state,\r\n        activeUsers: [...action.payload]\r\n      };\r\n    case ChatActions.SELECT_CHAT:\r\n      return {\r\n        ...state,\r\n        selectedChat: action.payload\r\n      };\r\n    case ChatActions.RESET_STORE:\r\n      return {\r\n        ...initialChatState,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {Action} from '@ngrx/store';\r\n\r\nexport const SET_SELECTED_TABLE_NAME = 'SET_SELECTED_TABLE_NAME';\r\n\r\nexport class SetSelectedTableName implements Action {\r\n  readonly type = SET_SELECTED_TABLE_NAME;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport type StatisticsActions = SetSelectedTableName;\r\n","import * as StatisticsActions from './statistics.actions';\r\n\r\nexport interface StatisticsState {\r\n  selectedTableName: string;\r\n}\r\n\r\nconst initialStatisticState: StatisticsState = {\r\n  selectedTableName: null\r\n};\r\n\r\nexport function statisticsReducers(state: StatisticsState = initialStatisticState, action: StatisticsActions.StatisticsActions) {\r\n  switch (action.type) {\r\n    case StatisticsActions.SET_SELECTED_TABLE_NAME:\r\n      return {\r\n        ...state,\r\n        selectedTableName: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {Action} from '@ngrx/store';\r\nimport {ExtendedFilterModel, RowContentModel, TableDefinitionModel, TaskModel} from '../../table.model';\r\nimport {UserModel} from '../../../user/user.model';\r\nimport {SortModel} from '../../sort/sort.model';\r\n\r\nexport const RESET_TABLE_STORE = 'RESET_TABLE_STORE';\r\n\r\nexport const ADD_ROW = 'ADD_ROW';\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const SHOW_ROW = 'SHOW_ROW';\r\nexport const UPDATE_ROW = 'UPDATE_ROW';\r\nexport const EDIT_ROW_MODE = 'EDIT_ROW_MODE';\r\nexport const EDITED_ROW = 'EDITED_ROW';\r\nexport const DELETE_ROW = 'DELETE_ROW';\r\n\r\nexport const SET_ROWS = 'SET_ROWS';\r\n\r\nexport const SET_DEFINITION = 'SET_DEFINITION';\r\n\r\nexport const SET_NAMES = 'SET_NAMES';\r\nexport const ADD_NAMES = 'ADD_NAMES';\r\n\r\nexport const NEW_ROW_MODE = 'NEW_ROW_MODE';\r\n\r\nexport const SET_FILTER = 'SET_FILTER';\r\nexport const EXTENDED_FILTER_MODE = 'EXTENDED_FILTER_MODE';\r\nexport const SET_EXTENDED_TABLE_VIEW = 'SET_EXTENDED_TABLE_VIEW';\r\nexport const SET_EXTENDED_ROW_VIEW = 'SET_EXTENDED_ROW_VIEW';\r\nexport const RUN_EXTENDED_FILTER = 'RUN_EXTENDED_FILTER';\r\nexport const SET_EXTENDED_FILTER = 'SET_EXTENDED_FILTER';\r\nexport const SET_EXTENDED_FILTER_SELECT = 'SET_EXTENDED_FILTER_SELECT';\r\n\r\nexport const SET_SORT_CONTENT = 'SET_SORT_CONTENT';\r\n\r\nexport const SWITCH_TABLE_RESET = 'SWITCH_TABLE_RESET';\r\n\r\nexport const SET_ROW_TASKS = 'SET_ROW_TASKS';\r\nexport const SET_TABLE_USERS = 'SET_TABLE_USERS';\r\nexport const UPDATE_ROWS_TASK = 'UPDATE_ROWS_TASK';\r\nexport const UPDATE_TASK = 'UPDATE_TASK';\r\nexport const DELETE_ROWS_TASK = 'DELETE_ROWS_TASK';\r\n\r\n\r\nexport class SetNewRowModeAction implements Action {\r\n  readonly type = NEW_ROW_MODE;\r\n\r\n  constructor(public payload: boolean) {\r\n  }\r\n}\r\n\r\nexport class SetSortContent implements Action {\r\n  readonly type = SET_SORT_CONTENT;\r\n\r\n  constructor(public payload: SortModel) {\r\n  }\r\n}\r\n\r\nexport class AddRowAction implements Action {\r\n  readonly type = ADD_ROW;\r\n\r\n  constructor(public payload: RowContentModel) {\r\n  }\r\n}\r\n\r\nexport class ShowRowDetailsAction implements Action {\r\n  readonly type = SHOW_ROW;\r\n\r\n  constructor(public payload: RowContentModel) {\r\n  }\r\n}\r\n\r\nexport class UpdateRowAction implements Action {\r\n  readonly type = UPDATE_ROW;\r\n\r\n  constructor(public payload: RowContentModel) {\r\n  }\r\n}\r\n\r\nexport class SetRowsAction implements Action {\r\n  readonly type = SET_ROWS;\r\n\r\n  constructor(public payload: RowContentModel[]) {\r\n  }\r\n}\r\n\r\nexport class SetTableDefinitionAction implements Action {\r\n  readonly type = SET_DEFINITION;\r\n\r\n  constructor(public payload: TableDefinitionModel) {\r\n  }\r\n}\r\n\r\nexport class SetNamesAction implements Action {\r\n  readonly type = SET_NAMES;\r\n\r\n  constructor(public payload: { id: number, name: string }[]) {\r\n  }\r\n}\r\n\r\nexport class AddNamesAction implements Action {\r\n  readonly type = ADD_NAMES;\r\n\r\n  constructor(public payload: string[]) {\r\n  }\r\n}\r\n\r\nexport class SetEditRowMode implements Action {\r\n  readonly type = EDIT_ROW_MODE;\r\n\r\n  constructor(public payload: boolean) {\r\n  }\r\n}\r\n\r\nexport class SetEditedRow implements Action {\r\n  readonly type = EDITED_ROW;\r\n\r\n  constructor(public payload: RowContentModel) {\r\n  }\r\n}\r\n\r\nexport class ResetStore implements Action {\r\n  readonly type = RESET_TABLE_STORE;\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\r\nexport class TableFilter implements Action {\r\n  readonly type = SET_FILTER;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class SetExtendedFilterMode implements Action {\r\n  readonly type = EXTENDED_FILTER_MODE;\r\n\r\n  constructor(public payload: boolean) {\r\n  }\r\n}\r\n\r\nexport class RunExtendedFilter implements Action {\r\n  readonly type = RUN_EXTENDED_FILTER;\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\r\nexport class SetExtendedFilterSelect implements Action {\r\n  readonly type = SET_EXTENDED_FILTER_SELECT;\r\n\r\n  constructor(public payload: boolean) {\r\n  }\r\n}\r\n\r\nexport class SetExtendedFilter implements Action {\r\n  readonly type = SET_EXTENDED_FILTER;\r\n\r\n  constructor(public payload: ExtendedFilterModel) {\r\n  }\r\n}\r\n\r\nexport class SwitchTableReset implements Action {\r\n  readonly type = SWITCH_TABLE_RESET;\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\r\nexport class SetRowsTasksAction implements Action {\r\n  readonly type = SET_ROW_TASKS;\r\n\r\n  constructor(public payload: { tasks: TaskModel[], rowId } ) {\r\n  }\r\n}\r\n\r\nexport class SetTableUsers implements Action {\r\n  readonly type = SET_TABLE_USERS;\r\n\r\n  constructor(public payload: UserModel[] ) {\r\n  }\r\n}\r\n\r\nexport class UpdateRowsTaskAction implements Action {\r\n  readonly type = UPDATE_ROWS_TASK;\r\n\r\n  constructor(public payload: { rowId: number, task: TaskModel } ) {\r\n  }\r\n}\r\n\r\nexport class UpdateTaskAction implements Action {\r\n  readonly type = UPDATE_TASK;\r\n\r\n  constructor(public payload: TaskModel ) {\r\n  }\r\n}\r\n\r\nexport class DeleteTask implements Action {\r\n  readonly type = DELETE_ROWS_TASK;\r\n\r\n  constructor(public payload: { taskId: number, rowId: number } ) {\r\n  }\r\n}\r\n\r\nexport class SetExtendedTableView implements Action {\r\n  readonly type = SET_EXTENDED_TABLE_VIEW;\r\n\r\n  constructor(public payload: boolean) {\r\n  }\r\n}\r\n\r\nexport class SetExtendedRowView implements Action {\r\n  readonly type = SET_EXTENDED_ROW_VIEW;\r\n\r\n  constructor(public payload: boolean) {\r\n  }\r\n}\r\n\r\nexport class DeleteRow implements Action {\r\n  readonly type = DELETE_ROW;\r\n\r\n  constructor(public payload: number) {\r\n  }\r\n}\r\n\r\nexport class AddTaskAction implements Action {\r\n  readonly type = ADD_TASK;\r\n\r\n  constructor(public payload: {task: TaskModel, rowId: number}) {\r\n  }\r\n}\r\n\r\nexport type TableActions =\r\n  AddRowAction |\r\n  SetNamesAction |\r\n  AddNamesAction |\r\n  SetRowsAction |\r\n  SetTableDefinitionAction |\r\n  SetNewRowModeAction |\r\n  UpdateRowAction |\r\n  ResetStore |\r\n  ShowRowDetailsAction |\r\n  SetEditRowMode |\r\n  SetEditedRow |\r\n  TableFilter |\r\n  SetExtendedFilterMode |\r\n  RunExtendedFilter |\r\n  SetExtendedFilter |\r\n  SetExtendedFilterSelect |\r\n  SwitchTableReset|\r\n  SetRowsTasksAction |\r\n  SetTableUsers |\r\n  UpdateRowsTaskAction |\r\n  UpdateTaskAction |\r\n  DeleteTask |\r\n  SetExtendedTableView |\r\n  SetExtendedRowView |\r\n  SetSortContent |\r\n  DeleteRow |\r\n  AddTaskAction;\r\n","import * as TableActions from './tables.actions';\r\nimport {ExtendedFilterModel, RowContentModel, TableDefinitionModel, TablesDetails, TaskModel} from '../../table.model';\r\nimport {UserModel} from '../../../user/user.model';\r\nimport {SortModel} from '../../sort/sort.model';\r\n\r\nexport interface TableState {\r\n  editRowMode: boolean;\r\n  newRowMode: boolean;\r\n  editedRow: RowContentModel;\r\n  tableDefinition: TableDefinitionModel;\r\n  tableContent: RowContentModel[];\r\n  tableUsers: UserModel[];\r\n  tablesDetails: TablesDetails[];\r\n  tableFilter: string;\r\n  extendedFilterMode: boolean;\r\n  extendedFilterAction: boolean;\r\n  extendedFilterContent: ExtendedFilterModel;\r\n  filterSelect: boolean;\r\n  extendedTableView: boolean;\r\n  extendedRowView: boolean;\r\n  sortContent: SortModel;\r\n}\r\n\r\nconst initialTableState: TableState = {\r\n  editRowMode: false,\r\n  newRowMode: false,\r\n  editedRow: null,\r\n  tableDefinition: null,\r\n  tableContent: [],\r\n  tableUsers: [],\r\n  tablesDetails: [],\r\n  tableFilter: '',\r\n  extendedFilterMode: false,\r\n  extendedFilterAction: false,\r\n  extendedFilterContent: null,\r\n  filterSelect: false,\r\n  extendedTableView: false,\r\n  extendedRowView: false,\r\n  sortContent: {\r\n    name: '',\r\n    index: 0,\r\n    dataType: '',\r\n    asc: true\r\n  }\r\n};\r\n\r\nexport function tablesReducers(state: TableState = initialTableState, action: TableActions.TableActions) {\r\n\r\n  switch (action.type) {\r\n    case TableActions.ADD_ROW:\r\n      return {\r\n        ...state,\r\n        tableContent: [...state.tableContent, action.payload]\r\n      };\r\n    case TableActions.UPDATE_ROW:\r\n      return {\r\n        ...state,\r\n        tableContent: [...updateRow(state.tableContent, action.payload)]\r\n      };\r\n    case TableActions.SET_ROWS:\r\n      return {\r\n        ...state,\r\n        tableContent: [...action.payload]\r\n      };\r\n    case TableActions.SET_NAMES:\r\n      return {\r\n        ...state,\r\n        tablesDetails: [...action.payload]\r\n      };\r\n    case TableActions.ADD_NAMES:\r\n      return {\r\n        ...state,\r\n        tablesDetails: [...state.tablesDetails, ...action.payload]\r\n      };\r\n    case TableActions.SET_DEFINITION:\r\n      return {\r\n        ...state,\r\n        tableDefinition: [action.payload]\r\n      };\r\n    case TableActions.EDIT_ROW_MODE:\r\n      return {\r\n        ...state,\r\n        editRowMode: action.payload\r\n      };\r\n    case TableActions.NEW_ROW_MODE:\r\n      return {\r\n        ...state,\r\n        newRowMode: action.payload\r\n      };\r\n    case TableActions.EDITED_ROW:\r\n      return {\r\n        ...state,\r\n        editedRow: action.payload\r\n      };\r\n    case TableActions.RESET_TABLE_STORE:\r\n      return {\r\n        ...initialTableState\r\n      };\r\n    case TableActions.SET_FILTER:\r\n      return {\r\n        ...state,\r\n        tableFilter: action.payload\r\n      };\r\n    case TableActions.EXTENDED_FILTER_MODE:\r\n      return {\r\n        ...state,\r\n        extendedFilterMode: action.payload\r\n      };\r\n    case TableActions.RUN_EXTENDED_FILTER:\r\n      return {\r\n        ...state,\r\n        extendedFilterAction: !state.extendedFilterAction\r\n      };\r\n    case TableActions.SET_EXTENDED_FILTER:\r\n      return {\r\n        ...state,\r\n        extendedFilterContent: action.payload\r\n      };\r\n    case TableActions.SET_EXTENDED_FILTER_SELECT:\r\n      return {\r\n        ...state,\r\n        filterSelect: action.payload\r\n      };\r\n    case TableActions.SWITCH_TABLE_RESET:\r\n      return {\r\n        ...initialTableState,\r\n        tablesDetails: state.tablesDetails,\r\n      };\r\n    case TableActions.SET_ROW_TASKS:\r\n      return {\r\n        ...state,\r\n        tableContent: [...setRowTasks(state.tableContent, action.payload)]\r\n      };\r\n    case TableActions.SET_TABLE_USERS:\r\n      return {\r\n        ...state,\r\n        tableUsers: [...action.payload]\r\n      };\r\n    case TableActions.UPDATE_ROWS_TASK:\r\n      return {\r\n        ...state,\r\n        tableContent: [...updateTaskUsers(state.tableContent, action.payload)]\r\n      };\r\n    case TableActions.UPDATE_TASK:\r\n      return {\r\n        ...state,\r\n        tableContent: [...updateTask(state.tableContent, action.payload)]\r\n      };\r\n    case TableActions.DELETE_ROWS_TASK:\r\n      return {\r\n        ...state,\r\n        tableContent: [...deleteRowsTask(state.tableContent, action.payload)]\r\n      };\r\n    case TableActions.SET_EXTENDED_TABLE_VIEW:\r\n      return {\r\n        ...state,\r\n        extendedTableView: action.payload\r\n      };\r\n    case TableActions.SET_EXTENDED_ROW_VIEW:\r\n      return {\r\n        ...state,\r\n        extendedRowView: action.payload\r\n      };\r\n    case TableActions.SET_SORT_CONTENT:\r\n      return {\r\n        ...state,\r\n        sortContent: action.payload\r\n      };\r\n    case TableActions.DELETE_ROW:\r\n      return {\r\n        ...state,\r\n        tableContent: [...deleteRow(state.tableContent, action.payload)],\r\n        editRowMode: initialTableState.editRowMode,\r\n        editedRow: initialTableState.editedRow,\r\n      };\r\n    case TableActions.ADD_TASK:\r\n      return {\r\n        ...state,\r\n        tableContent: [...addRowTask(state.tableContent, action.payload)]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction updateTask(tableContent: RowContentModel[], payload: TaskModel) {\r\n  tableContent.forEach((row: RowContentModel, i) => {\r\n    row.taskDtos.forEach((taskDto: TaskModel, j) => {\r\n      if (taskDto.id === payload.id) {\r\n        tableContent[i].taskDtos[j] = payload;\r\n      }\r\n    });\r\n  });\r\n  return tableContent;\r\n}\r\n\r\n\r\nfunction deleteRow(tableContent: RowContentModel[], rowId: number) {\r\n  tableContent.forEach((row: RowContentModel, i) => {\r\n    if (row.id === rowId) {\r\n      tableContent.splice(i, 1);\r\n    }\r\n  });\r\n  return tableContent;\r\n}\r\n\r\nfunction deleteRowsTask(tableContent: RowContentModel[], payload: { rowId: number, taskId: number }): RowContentModel[] {\r\n  tableContent.forEach((row: RowContentModel, i) => {\r\n    if (row.id === payload.rowId) {\r\n      row.taskDtos.forEach((taskDto: TaskModel, j) => {\r\n        if (taskDto.id === payload.taskId) {\r\n          tableContent[i].taskDtos.splice(j, 1);\r\n        }\r\n      });\r\n    }\r\n  });\r\n  return tableContent;\r\n}\r\n\r\nfunction updateTaskUsers(tableContent: RowContentModel[], payload: { rowId: number, task: TaskModel }): RowContentModel[] {\r\n  tableContent.forEach((row: RowContentModel, i) => {\r\n    if (row.id === payload.rowId) {\r\n      row.taskDtos.forEach((taskDto: TaskModel, j) => {\r\n        if (taskDto.id === payload.task.id) {\r\n          tableContent[i].taskDtos[j].userNames = payload.task.userNames;\r\n        }\r\n      });\r\n    }\r\n  });\r\n  return tableContent;\r\n}\r\n\r\n\r\nfunction setRowTasks(rows: RowContentModel[], data: { tasks: TaskModel[], rowId }): RowContentModel[] {\r\n  rows.forEach((row) => {\r\n    if (row.id === data.rowId) {\r\n      row.taskDtos = data.tasks;\r\n    }\r\n  });\r\n  return rows;\r\n}\r\n\r\nfunction addRowTask(rows: RowContentModel[], data: { task: TaskModel, rowId }): RowContentModel[] {\r\n  rows.forEach((row) => {\r\n    if (row.id === data.rowId) {\r\n      row.taskDtos = [...row.taskDtos, data.task];\r\n    }\r\n  });\r\n  return rows;\r\n}\r\n\r\n// function deleteItemByName(array: NameModel[], itemName: string): Array<NameModel> {// TODO GENERIC TYPE FUNCTION???  r.216/255 REMOVE?\r\n//   array.forEach((arrayItem, i) => {\r\n//     if (arrayItem.name === itemName) {\r\n//       array.splice(i, 1);\r\n//     }\r\n//   });\r\n//   return array;\r\n// }\r\n//\r\n// function deleteItemByUsername(array: UsernameModel[], itemName: string) { // TODO REMOVE?\r\n//   array.forEach((arrayItem, i) => {\r\n//     if (arrayItem.username === itemName) {\r\n//       array.splice(i, 1);\r\n//     }\r\n//   });\r\n//   return array;\r\n// }\r\n\r\n\r\nfunction updateRow(rows: RowContentModel[], updatedRow: RowContentModel): RowContentModel[] {\r\n  rows.forEach((row, i) => {\r\n    if (row.id === updatedRow.id) {\r\n      rows[i] = updatedRow;\r\n    }\r\n  });\r\n  return rows;\r\n}\r\n\r\n// function updateRoleUsers(roles: RoleModel[], newRole: RoleModel): RoleModel[] { // TODO remove?\r\n//   roles.forEach((role) => {\r\n//     if (role.name === newRole.name) {\r\n//       role.userDtos = newRole.userDtos;\r\n//     }\r\n//   });\r\n//   return roles;\r\n// }\r\n//\r\n// function updateUsersRoles(users: UserModel[], newUser: UserModel): UserModel[] {// TODO remove?\r\n//   users.forEach((user, i) => {\r\n//     if (user.username === newUser.username) {\r\n//       users[i].roleNames = newUser.roleNames;\r\n//     }\r\n//   });\r\n//   return users;\r\n// }\r\n//\r\n// interface NameModel { // TODO remove?\r\n//   name: string;\r\n// }\r\n//\r\n// interface UsernameModel { // TODO remove?\r\n//   username: string;\r\n// }\r\n","import {Action} from '@ngrx/store';\r\nimport {TaskModel} from '../../table.model';\r\n\r\nexport const SET_TASK_DETAILS_MODE = 'SET_TASK_DETAILS_MODE';\r\nexport const SET_SHOWED_TASK = 'SET_SHOWED_TASK';\r\nexport const ON_DELETE_TASK = 'ON_DELETE_TASK';\r\nexport const RESET_TASK_STORE = 'RESET_TASK_STORE';\r\n\r\nexport class SetTaskDetailsModeAction implements Action {\r\n  readonly type = SET_TASK_DETAILS_MODE;\r\n\r\n  constructor(public payload: boolean) {\r\n  }\r\n}\r\n\r\nexport class SetShowedTaskAction implements Action {\r\n  readonly type = SET_SHOWED_TASK;\r\n\r\n  constructor(public payload: TaskModel) {\r\n  }\r\n}\r\n\r\nexport class OnDeleteTask implements Action {\r\n  readonly type = ON_DELETE_TASK;\r\n\r\n  constructor(public payload: Number) {\r\n  }\r\n}\r\n\r\nexport class ResetTaskStore implements Action {\r\n  readonly type = RESET_TASK_STORE;\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\r\nexport type TaskActions =\r\n  SetTaskDetailsModeAction |\r\n  SetShowedTaskAction |\r\n  OnDeleteTask |\r\n  ResetTaskStore;\r\n","import * as TaskActions from './tasks.actions';\r\nimport {TaskModel} from '../../table.model';\r\n\r\nexport interface TaskState {\r\n  taskDetailsMode: boolean;\r\n  showedTask: TaskModel;\r\n}\r\n\r\nconst initialTaskState: TaskState = {\r\n  taskDetailsMode: false,\r\n  showedTask: null\r\n};\r\n\r\nexport function tasksReducers(state: TaskState = initialTaskState, action: TaskActions.TaskActions) {\r\n  switch (action.type) {\r\n    case TaskActions.SET_TASK_DETAILS_MODE:\r\n      return {\r\n        ...state,\r\n        taskDetailsMode: action.payload\r\n      };\r\n    case TaskActions.SET_SHOWED_TASK:\r\n      return {\r\n        ...state,\r\n        showedTask: action.payload\r\n      };\r\n    case TaskActions.ON_DELETE_TASK:\r\n      state.taskDetailsMode = false;\r\n      state.showedTask = null;\r\n      return state;\r\n    case TaskActions.RESET_TASK_STORE:\r\n      state = initialTaskState;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {Action} from '@ngrx/store';\r\nimport {UserModel} from '../../../user/user.model';\r\nimport {RoleModel} from '../../../roles/role.model';\r\nimport {Token} from '../../auth.model';\r\nimport {Client} from 'stompjs/lib/stomp.js';\r\nimport {TaskModel} from '../../table.model';\r\n\r\nexport const SET_NEW_USER_MODE = 'SET_NEW_USER_MODE';\r\nexport const SET_USERS = 'SET_USERS';\r\nexport const ADD_USER = 'ADD_USER';\r\n\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const ADD_ROLE_TO_USER = 'ADD_ROLE_TO_USER';\r\nexport const REMOVE_ROLE_FROM_USER = 'REMOVE_ROLE_FROM_USER';\r\nexport const SET_CURRENT_USER_ROLENAMES = 'SET_CURRENT_USER_ROLENAMES';\r\n\r\nexport const SET_NEW_ROLE_MODE = 'SET_NEW_ROLE_MODE';\r\nexport const SET_ROLES = 'SET_ROLES';\r\nexport const ADD_ROLE = 'ADD_ROLE';\r\nexport const DELETE_ROLE = 'DELETE_ROLE';\r\nexport const REMOVE_USER_FROM_ROLE = 'REMOVE_USER_FROM_ROLE';\r\nexport const ADD_USER_TO_ROLE = 'ADD_USER_TO_ROLE';\r\n\r\nexport const SET_TOKEN = 'SET_TOKEN';\r\nexport const DELETE_TOKEN = 'DELETE_TOKEN';\r\n\r\nexport const DELETE_CURRENT_USER = 'DELETE_CURRENT_USER';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const SET_CURRENT_USER_DETAILS = 'SET_CURRENT_USER_DETAILS';\r\nexport const SWITCH_TABLE_RESET = 'SWITCH_TABLE_RESET';\r\n\r\nexport const SET_NEW_WEB_SOCKET_CLIENT = 'SET_NEW_WEB_SOCKET_CLIENT';\r\nexport const SET_TASK_INFO = 'SET_TASK_INFO';\r\n\r\nexport const RESET_STORE = 'RESET_USER_STORE';\r\n\r\nexport const SET_LOGIN_FAILURE_INFO = 'SET_LOGIN_FAILURE_INFO';\r\nexport const SET_LOGOUT_INFO = 'SET_LOGOUT_INFO';\r\n\r\nexport const SET_USER_DISPLAYED_TASK = 'SET_USER_DISPLAYED_TASK';\r\nexport const SET_SELECTED_USER = 'SET_SELECTED_USER';\r\n\r\nexport const UPDATE_TASK = 'UPDATE_TASK';\r\n\r\n\r\nexport class DeleteUserAction implements Action {\r\n  readonly type = DELETE_USER;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class SetNewUserModeAction implements Action {\r\n  readonly type = SET_NEW_USER_MODE;\r\n\r\n  constructor(public payload: boolean) {\r\n  }\r\n}\r\n\r\nexport class SetUsersAction implements Action {\r\n  readonly type = SET_USERS;\r\n\r\n  constructor(public payload: UserModel[]) {\r\n  }\r\n}\r\n\r\nexport class AddUserAction implements Action {\r\n  readonly type = ADD_USER;\r\n\r\n  constructor(public payload: UserModel) {\r\n  }\r\n}\r\n\r\n\r\nexport class AddUserToRole implements Action {\r\n  readonly type = ADD_USER_TO_ROLE;\r\n\r\n  constructor(public payload: RoleModel) {\r\n  }\r\n}\r\n\r\nexport class RemoveUserFromRole implements Action {\r\n  readonly type = REMOVE_USER_FROM_ROLE;\r\n\r\n  constructor(public payload: RoleModel) {\r\n  }\r\n}\r\n\r\nexport class SetCurrentUserRolenames implements Action {\r\n  readonly type = SET_CURRENT_USER_ROLENAMES;\r\n\r\n  constructor(public payload: string[]) {\r\n  }\r\n}\r\n\r\nexport class SetTokenAction implements Action {\r\n  readonly type = SET_TOKEN;\r\n\r\n  constructor(public payload: Token) {\r\n  }\r\n}\r\n\r\nexport class DeleteTokenAction implements Action {\r\n  readonly type = DELETE_TOKEN;\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\r\n\r\nexport class RemoveRoleFromUser implements Action {\r\n  readonly type = REMOVE_ROLE_FROM_USER;\r\n\r\n  constructor(public payload: UserModel) {\r\n  }\r\n}\r\n\r\n\r\nexport class SetCurrentUserAction implements Action {\r\n  readonly type = SET_CURRENT_USER;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class DeleteCurrentUserAction implements Action {\r\n  readonly type = DELETE_CURRENT_USER;\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\r\nexport class SetNewRoleModeAction implements Action {\r\n  readonly type = SET_NEW_ROLE_MODE;\r\n\r\n  constructor(public payload: boolean) {\r\n  }\r\n}\r\n\r\nexport class AddRoleAction implements Action {\r\n  readonly type = ADD_ROLE;\r\n\r\n  constructor(public payload: RoleModel) {\r\n  }\r\n}\r\n\r\nexport class DeleteRoleAction implements Action {\r\n  readonly type = DELETE_ROLE;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\n\r\nexport class SetRolesAction implements Action {\r\n  readonly type = SET_ROLES;\r\n\r\n  constructor(public payload: RoleModel[]) {\r\n  }\r\n}\r\n\r\nexport class AddRoleToUser implements Action {\r\n  readonly type = ADD_ROLE_TO_USER;\r\n\r\n  constructor(public payload: UserModel) {\r\n  }\r\n}\r\n\r\nexport class SwitchTableReset implements Action {\r\n  readonly type = SWITCH_TABLE_RESET;\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\r\nexport class SetNewWebSocketClient implements Action {\r\n  readonly type = SET_NEW_WEB_SOCKET_CLIENT;\r\n\r\n  constructor(public payload: Client) {\r\n  }\r\n}\r\n\r\nexport class SetTaskInfoAction implements Action {\r\n  readonly type = SET_TASK_INFO;\r\n\r\n  constructor(public payload: boolean) {\r\n  }\r\n}\r\n\r\nexport class SetLoginFailureInfo implements Action {\r\n  readonly type = SET_LOGIN_FAILURE_INFO;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class SetLogoutInfo implements Action {\r\n  readonly type = SET_LOGOUT_INFO;\r\n\r\n  constructor(public payload: string) {\r\n  }\r\n}\r\n\r\nexport class ResetStore implements Action {\r\n  readonly type = RESET_STORE;\r\n\r\n  constructor() {\r\n  }\r\n}\r\n\r\nexport class SetUserDisplayedTask implements Action {\r\n  readonly type = SET_USER_DISPLAYED_TASK;\r\n\r\n  constructor(public payload: TaskModel) {\r\n  }\r\n}\r\n\r\nexport class SetSelectedUser implements Action {\r\n  readonly type = SET_SELECTED_USER;\r\n\r\n  constructor(public payload: UserModel) {\r\n  }\r\n}\r\n\r\nexport class UpdateTaskAction implements Action {\r\n  readonly type = UPDATE_TASK;\r\n\r\n  constructor(public payload: TaskModel) {\r\n  }\r\n}\r\n\r\nexport class SetCurrntUserDetails implements Action {\r\n  readonly type = SET_CURRENT_USER_DETAILS;\r\n\r\n  constructor(public payload: UserModel) {\r\n  }\r\n}\r\n\r\n\r\nexport type UserActions =\r\n  SetCurrentUserRolenames |\r\n  DeleteUserAction |\r\n  SetNewRoleModeAction |\r\n  SetNewUserModeAction |\r\n  SetUsersAction |\r\n  AddUserAction |\r\n  SetRolesAction |\r\n  AddRoleAction |\r\n  DeleteRoleAction |\r\n  AddRoleToUser |\r\n  RemoveRoleFromUser |\r\n  AddUserToRole |\r\n  RemoveUserFromRole |\r\n  SetTokenAction |\r\n  DeleteTokenAction |\r\n  SetCurrentUserAction |\r\n  DeleteCurrentUserAction |\r\n  SwitchTableReset |\r\n  SetNewWebSocketClient |\r\n  SetTaskInfoAction |\r\n  ResetStore |\r\n  SetLoginFailureInfo |\r\n  SetLogoutInfo |\r\n  SetUserDisplayedTask |\r\n  SetSelectedUser |\r\n  UpdateTaskAction |\r\n  SetCurrntUserDetails;\r\n\r\n","import * as UserActions from './users.actions';\r\nimport {TaskModel} from '../../table.model';\r\nimport {UserModel} from '../../../user/user.model';\r\nimport {RoleModel} from '../../../roles/role.model';\r\nimport {Token} from '../../auth.model';\r\nimport {Client} from 'stompjs/lib/stomp.js';\r\n\r\n\r\nexport interface UserState {\r\n  newTaskInfo: boolean;\r\n  currentSocketClient: Client;\r\n  currentUser: string;\r\n  currentUserDetails: UserModel;\r\n  currentUserRoles: string[];\r\n  token: Token;\r\n  users: UserModel[];\r\n  newUserMode: boolean;\r\n  roles: RoleModel[];\r\n  newRoleMode: boolean;\r\n  loginFailureInfo: string;\r\n  logoutInfo: string;\r\n  selectedUser: UserModel;\r\n  userDisplayedTask: TaskModel;\r\n}\r\n\r\nconst initialUserState: UserState = {\r\n  newTaskInfo: false,\r\n  currentSocketClient: null,\r\n  currentUser: '',\r\n  currentUserDetails: null,\r\n  currentUserRoles: [],\r\n  token: null,\r\n  users: [],\r\n  newUserMode: false,\r\n  roles: [],\r\n  newRoleMode: false,\r\n  loginFailureInfo: '',\r\n  logoutInfo: '',\r\n  selectedUser: null,\r\n  userDisplayedTask: null\r\n};\r\n\r\nexport function usersReducers(state: UserState = initialUserState, action: UserActions.UserActions) {\r\n  switch (action.type) {\r\n    case UserActions.SET_NEW_USER_MODE:\r\n      return {\r\n        ...state,\r\n        newUserMode: action.payload\r\n      };\r\n    case UserActions.SET_NEW_ROLE_MODE:\r\n      return {\r\n        ...state,\r\n        newRoleMode: action.payload\r\n      };\r\n    case UserActions.ADD_ROLE:\r\n      return {\r\n        ...state,\r\n        roles: [...state.roles, action.payload]\r\n      };\r\n    case UserActions.DELETE_ROLE:\r\n      return {\r\n        ...state,\r\n        roles: [...deleteItemByName(state.roles, action.payload)]\r\n      };\r\n    case UserActions.DELETE_USER:\r\n      return {\r\n        ...state,\r\n        users: [...deleteItemByUsername(state.users, action.payload)]\r\n      };\r\n    case UserActions.SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: [...action.payload]\r\n      };\r\n    case UserActions.ADD_USER:\r\n      return {\r\n        ...state,\r\n        users: [...state.users, action.payload]\r\n      };\r\n    case UserActions.SET_ROLES:\r\n      return {\r\n        ...state,\r\n        roles: [...action.payload]\r\n      };\r\n    case UserActions.ADD_ROLE_TO_USER:\r\n      return {\r\n        ...state,\r\n        users: [...updateUsersRoles(state.users, action.payload)]\r\n      };\r\n    case UserActions.REMOVE_ROLE_FROM_USER:\r\n      return {\r\n        ...state,\r\n        users: [...updateUsersRoles(state.users, action.payload)]\r\n      };\r\n    case UserActions.REMOVE_USER_FROM_ROLE:\r\n      return {\r\n        ...state,\r\n        roles: [...updateRoleUsers(state.roles, action.payload)]\r\n      };\r\n    case UserActions.SET_CURRENT_USER_ROLENAMES:\r\n      return {\r\n        ...state,\r\n        currentUserRoles: action.payload\r\n      };\r\n\r\n    case UserActions.DELETE_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: null\r\n      };\r\n    case UserActions.SET_TOKEN:\r\n      return {\r\n        ...state,\r\n        token: action.payload\r\n      };\r\n    case UserActions.DELETE_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: ''\r\n      };\r\n    case UserActions.SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload\r\n      };\r\n    case UserActions.SET_CURRENT_USER_DETAILS:\r\n      return {\r\n        ...state,\r\n        currentUserDetails: action.payload\r\n      };\r\n    case UserActions.SWITCH_TABLE_RESET:\r\n      return {\r\n        ...initialUserState,\r\n        currentUser: state.currentUser,\r\n        currentUserRoles: state.currentUserRoles,\r\n        token: state.token,\r\n      };\r\n    case UserActions.SET_NEW_WEB_SOCKET_CLIENT:\r\n      return {\r\n        ...state,\r\n        currentSocketClient: action.payload\r\n      };\r\n    case UserActions.SET_TASK_INFO:\r\n      return {\r\n        ...state,\r\n        newTaskInfo: action.payload\r\n      };\r\n    case UserActions.SET_LOGIN_FAILURE_INFO:\r\n      return {\r\n        ...state,\r\n        loginFailureInfo: action.payload,\r\n        logoutInfo: initialUserState.logoutInfo\r\n      };\r\n    case UserActions.SET_LOGOUT_INFO:\r\n      return {\r\n        ...state,\r\n        loginFailureInfo: initialUserState.loginFailureInfo,\r\n        logoutInfo: action.payload\r\n      };\r\n    case UserActions.SET_SELECTED_USER:\r\n      return {\r\n        ...state,\r\n        selectedUser: action.payload\r\n      };\r\n    case UserActions.UPDATE_TASK:\r\n      return {\r\n        ...state,\r\n        users: [...updateUsersTask(state.users, action.payload)],\r\n        selectedUser: updateUserTask(state.selectedUser, action.payload),\r\n        userDisplayedTask: null\r\n      };\r\n    case UserActions.SET_USER_DISPLAYED_TASK:\r\n      return {\r\n        ...state,\r\n        userDisplayedTask: action.payload\r\n      };\r\n    case UserActions.RESET_STORE:\r\n      return {\r\n        ...initialUserState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\nfunction updateUsersTask(usersToUpdate: UserModel[], task: TaskModel): UserModel[] {\r\n  const users = usersToUpdate;\r\n  users.forEach((user: UserModel, i) => {\r\n    users[i] = updateUserTask(user, task);\r\n  });\r\n  return users;\r\n}\r\n\r\nfunction updateUserTask(userToUpdate: UserModel, task: TaskModel): UserModel {\r\n  const user = userToUpdate;\r\n  user.taskDtos.forEach((taskToUpdate: TaskModel, i) => {\r\n    if (taskToUpdate.id === task.id) {\r\n      user.taskDtos[i] = task;\r\n    }\r\n  });\r\n  return user;\r\n}\r\n\r\nfunction deleteItemByName(array: NameModel[], itemName: string): Array<NameModel> {// TODO GENERIC TYPE FUNCTION???  r.216/255\r\n  array.forEach((arrayItem, i) => {\r\n    if (arrayItem.name === itemName) {\r\n      array.splice(i, 1);\r\n    }\r\n  });\r\n  return array;\r\n}\r\n\r\nfunction deleteItemByUsername(array: UsernameModel[], itemName: string) {\r\n  array.forEach((arrayItem, i) => {\r\n    if (arrayItem.username === itemName) {\r\n      array.splice(i, 1);\r\n    }\r\n  });\r\n  return array;\r\n}\r\n\r\n\r\n// function updateRow(rows: RowContentModel[], updatedRow: RowContentModel): RowContentModel[] { TODO remove?\r\n//   rows.forEach((row, i) => {\r\n//     if (row.id === updatedRow.id) {\r\n//       rows[i] = updatedRow;\r\n//     }\r\n//   });\r\n//   return rows;\r\n// }\r\n\r\nfunction updateRoleUsers(roles: RoleModel[], newRole: RoleModel): RoleModel[] {\r\n  roles.forEach((role) => {\r\n    if (role.name === newRole.name) {\r\n      role.userDtos = newRole.userDtos;\r\n    }\r\n  });\r\n  return roles;\r\n}\r\n\r\nfunction updateUsersRoles(users: UserModel[], newUser: UserModel): UserModel[] {\r\n  users.forEach((user, i) => {\r\n    if (user.username === newUser.username) {\r\n      users[i].roleNames = newUser.roleNames;\r\n    }\r\n  });\r\n  return users;\r\n}\r\n\r\ninterface NameModel {\r\n  name: string;\r\n}\r\n\r\ninterface UsernameModel {\r\n  username: string;\r\n}\r\n","export const options = [\r\n  {shortcut: 'ST', name: 'Short text'},\r\n  {shortcut: 'DE', name: 'Description'},\r\n  {shortcut: 'DT', name: 'Date'},\r\n  {shortcut: 'EN', name: 'Enum'},\r\n  {shortcut: 'IN', name: 'Number'}\r\n];\r\n\r\nexport class RowContentModel {\r\n  public id: number;\r\n  public name: string;\r\n  public columnValueDtos: { [key: string]: { ['value']: string } }[];\r\n  public createdBy: string;\r\n  public createdOn: string; // TODO date?\r\n  public lastModifiedBy: string;\r\n  public lastModifiedOn: string; // TODO date?\r\n  public taskDtos: TaskModel[];\r\n}\r\n\r\nexport class TaskModel {\r\n  public id: number;\r\n  public tableId: number;\r\n  public name: string;\r\n  public description: string;\r\n  public status: Status;\r\n  public userNames: string[];\r\n  public taskDtos: TaskModel[];\r\n}\r\n\r\nexport enum Status {\r\n  UNASSIGNED = 'UNASSIGNED',\r\n  ASSIGNED = 'ASSIGNED',\r\n  IN_PROGRESS = 'IN_PROGRESS',\r\n  DONE = 'DONE',\r\n}\r\n\r\nexport class TableDefinitionModel {\r\n  public id: number;\r\n  public name: string;\r\n  public columnDetailDefinitionDtoList: any[];\r\n}\r\n\r\nexport interface ExtendedFilterModel { // TODO: Filter do poprawy (własciwe wartości)\r\n  id: any;\r\n  name: string;\r\n  createdBy: string;\r\n  createdOn: string;\r\n  lastModifiedBy: string;\r\n  lastModifiedOn: string;\r\n  columnValueDtos: any[];\r\n  taskDtos: any;\r\n}\r\n\r\nexport interface TablesDetails {\r\n  id: number;\r\n  name: string;\r\n  databaseEnvironment: string;\r\n}\r\n","module.exports = \".container {\\r\\n  margin-top: 30%;\\r\\n}\\r\\n\\r\\n.card {\\r\\n  background: transparent;\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.card-header {\\r\\n  border: none;\\r\\n  background-color: transparent;\\r\\n}\\r\\n\\r\\n.form-group {\\r\\n  margin: 10px auto 0;\\r\\n}\\r\\n\\r\\n.form-control {\\r\\n  background-color: rgba(200,200,200,0.05);\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.alert {\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.alert-danger {\\r\\n  background: none;\\r\\n  border-color: #721c24;\\r\\n}\\r\\n\\r\\n.alert-success {\\r\\n  background: none;\\r\\n  border-color: #155724;\\r\\n}\\r\\n\\r\\n.btn-group {\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.btn {\\r\\n  margin: auto !important;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-12 col-md-6\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header text-white text-center\\\">\\r\\n          <h3 class=\\\"text-info\\\">MY JIRA</h3>\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <form [formGroup]=\\\"signinForm\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" aria-describedby=\\\"usernameHelpInline\\\" name=\\\"username\\\" placeholder=\\\"username\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\">\\r\\n                <small id=\\\"usernameHelpInline\\\" class=\\\"text-muted\\\">\\r\\n                  Must be 8-20 characters long.\\r\\n                </small>\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"password\\\" aria-describedby=\\\"passwordHelpInline\\\" name=\\\"password\\\" placeholder=\\\"password\\\" class=\\\"form-control\\\"\\r\\n                       formControlName=\\\"password\\\">\\r\\n                <small id=\\\"passwordHelpInline\\\" class=\\\"text-muted\\\">\\r\\n                  Must be 8-20 characters long.\\r\\n                </small>\\r\\n              </div>\\r\\n              <div class=\\\"btn-group\\\">\\r\\n                <button value=\\\"Sign In\\\" class=\\\"btn btn-outline-info\\\" (click)=\\\"onSignin()\\\">Sign In</button>\\r\\n              </div>\\r\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"loginFailureInfo | async\\\">\\r\\n                <span> {{ loginFailureInfo | async }} </span>\\r\\n              </div>\\r\\n              <div class=\\\"alert alert-success\\\" *ngIf=\\\"logoutInfo | async\\\">\\r\\n                <span> {{ logoutInfo | async}} </span>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {OauthService} from '../shared/oauth.service';\r\nimport {AuthCookie} from '../shared/auth-cookies-handler';\r\nimport {Store} from '@ngrx/store';\r\nimport * as fromAppReducers from '../shared/store/app.reducers';\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.css']\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  signinForm: FormGroup;\r\n  info: string;\r\n  loginFailureInfo: Observable<string>;\r\n  logoutInfo: Observable<string>;\r\n\r\n\r\n  constructor(private oauthservice: OauthService,\r\n              private cookie: AuthCookie,\r\n              private store: Store<fromAppReducers.AppState>) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.logoutInfo = this.store.select('users', 'logoutInfo');\r\n    this.loginFailureInfo = this.store.select('users', 'loginFailureInfo');\r\n\r\n    AuthCookie.deleteAuth();\r\n    this.signinForm = new FormGroup({\r\n      'username': new FormControl(),\r\n      'password': new FormControl()\r\n    });\r\n  }\r\n\r\n\r\n  onSignin() {\r\n    this.oauthservice.obtainAccessToken({\r\n      username: this.signinForm.value.username,\r\n      password: this.signinForm.value.password\r\n    });\r\n  }\r\n}\r\n","module.exports = \".sk-folding-cube {\\r\\n  margin: 20px auto;\\r\\n  width: 40px;\\r\\n  height: 40px;\\r\\n  position: relative;\\r\\n  -webkit-transform: rotateZ(45deg);\\r\\n  transform: rotateZ(45deg);\\r\\n}\\r\\n\\r\\n.sk-folding-cube .sk-cube {\\r\\n  float: left;\\r\\n  width: 50%;\\r\\n  height: 50%;\\r\\n  position: relative;\\r\\n  -webkit-transform: scale(1.1);\\r\\n  transform: scale(1.1);\\r\\n}\\r\\n\\r\\n.sk-folding-cube .sk-cube:before {\\r\\n  content: '';\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background-color: rgba(23,162,184,0.4);\\r\\n  border: 1px solid #107180;\\r\\n  -webkit-animation: sk-foldCubeAngle 2.4s infinite linear both;\\r\\n  animation: sk-foldCubeAngle 2.4s infinite linear both;\\r\\n  -webkit-transform-origin: 100% 100%;\\r\\n  transform-origin: 100% 100%;\\r\\n}\\r\\n\\r\\n.sk-folding-cube .sk-cube2 {\\r\\n  -webkit-transform: scale(1.1) rotateZ(90deg);\\r\\n  transform: scale(1.1) rotateZ(90deg);\\r\\n}\\r\\n\\r\\n.sk-folding-cube .sk-cube3 {\\r\\n  -webkit-transform: scale(1.1) rotateZ(180deg);\\r\\n  transform: scale(1.1) rotateZ(180deg);\\r\\n}\\r\\n\\r\\n.sk-folding-cube .sk-cube4 {\\r\\n  -webkit-transform: scale(1.1) rotateZ(270deg);\\r\\n  transform: scale(1.1) rotateZ(270deg);\\r\\n}\\r\\n\\r\\n.sk-folding-cube .sk-cube2:before {\\r\\n  -webkit-animation-delay: 0.3s;\\r\\n  animation-delay: 0.3s;\\r\\n}\\r\\n\\r\\n.sk-folding-cube .sk-cube3:before {\\r\\n  -webkit-animation-delay: 0.6s;\\r\\n  animation-delay: 0.6s;\\r\\n}\\r\\n\\r\\n.sk-folding-cube .sk-cube4:before {\\r\\n  -webkit-animation-delay: 0.9s;\\r\\n  animation-delay: 0.9s;\\r\\n}\\r\\n\\r\\n@-webkit-keyframes sk-foldCubeAngle {\\r\\n  0%, 10% {\\r\\n    -webkit-transform: perspective(140px) rotateX(-180deg);\\r\\n    transform: perspective(140px) rotateX(-180deg);\\r\\n    opacity: 0;\\r\\n  } 25%, 75% {\\r\\n      -webkit-transform: perspective(140px) rotateX(0deg);\\r\\n      transform: perspective(140px) rotateX(0deg);\\r\\n      opacity: 1;\\r\\n    } 90%, 100% {\\r\\n        -webkit-transform: perspective(140px) rotateY(180deg);\\r\\n        transform: perspective(140px) rotateY(180deg);\\r\\n        opacity: 0;\\r\\n      }\\r\\n}\\r\\n\\r\\n@keyframes sk-foldCubeAngle {\\r\\n  0%, 10% {\\r\\n    -webkit-transform: perspective(140px) rotateX(-180deg);\\r\\n    transform: perspective(140px) rotateX(-180deg);\\r\\n    opacity: 0;\\r\\n  } 25%, 75% {\\r\\n      -webkit-transform: perspective(140px) rotateX(0deg);\\r\\n      transform: perspective(140px) rotateX(0deg);\\r\\n      opacity: 1;\\r\\n    } 90%, 100% {\\r\\n        -webkit-transform: perspective(140px) rotateY(180deg);\\r\\n        transform: perspective(140px) rotateY(180deg);\\r\\n        opacity: 0;\\r\\n      }\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"sk-folding-cube\\\">\\r\\n  <div class=\\\"sk-cube1 sk-cube\\\"></div>\\r\\n  <div class=\\\"sk-cube2 sk-cube\\\"></div>\\r\\n  <div class=\\\"sk-cube4 sk-cube\\\"></div>\\r\\n  <div class=\\\"sk-cube3 sk-cube\\\"></div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.css']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"li {\\r\\n  border: 1px solid #32383e;\\r\\n  background-color: rgba(200, 200, 200, 0.05);\\r\\n  color: gray !important;\\r\\n}\\r\\n\\r\\nli:hover {\\r\\n  background-color: rgba(200, 200, 200, 0.2);\\r\\n}\\r\\n\\r\\n.bg-light {\\r\\n  background-color: rgba(200, 200, 200, 0.2) !important;\\r\\n}\\r\\n\\r\\n.jumbotron {\\r\\n  background: none;\\r\\n}\\r\\n\\r\\n.panel-header {\\r\\n  background-color: rgba(0, 0, 0, 0.05);\\r\\n}\\r\\n\\r\\ntd, th{\\r\\n  padding: 0.75rem;\\r\\n  vertical-align: top;\\r\\n  border-top: none;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-3\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item\\\" style=\\\"background-color: rgba(0,0,0,0.05)\\\">Tables:</li>\\r\\n        <li class=\\\"list-group-item\\\" *ngFor=\\\"let tableDetails of (tableState | async).tablesDetails\\\"\\r\\n            [ngClass]=\\\"(selectedTableName | async) == tableDetails.name ? 'bg-light' : ''\\\"\\r\\n            (click)=\\\"onSelectTableName(tableDetails)\\\"\\r\\n        >\\r\\n          {{ tableDetails.name }}  {{isSupported(tableDetails) ? '(C)':'(S - Not Supported)'}}\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-9\\\">\\r\\n      <app-table-statistics></app-table-statistics>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Store} from '@ngrx/store';\r\nimport {COMMON_TABLE_ENVIRONMENT} from \"../definition/definition.component\"\r\nimport * as fromAppReducers from '../shared/store/app.reducers';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {TableState} from '../shared/store/table/tables.reducers';\r\nimport {DataStorageService} from '../shared/data-storage.service';\r\nimport * as StatisticsActions from '../shared/store/statistics/statistics.actions';\r\nimport {TablesDetails} from \"../shared/table.model\";\r\n\r\n@Component({\r\n  selector: 'app-statistics',\r\n  templateUrl: './statistics.component.html',\r\n  styleUrls: ['./statistics.component.css']\r\n})\r\nexport class StatisticsComponent implements OnInit {\r\n  tableState: Observable<TableState>;\r\n  selectedTableName: Observable<string>;\r\n  public COMMON_TABLE_ENVIRONMENT = COMMON_TABLE_ENVIRONMENT;\r\n\r\n  constructor(private store: Store<fromAppReducers.AppState>,\r\n              private dss: DataStorageService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dss.getTablesDetails();\r\n    this.tableState = this.store.select('tables');\r\n    this.selectedTableName = this.store.select('statistics', 'selectedTableName');\r\n  }\r\n\r\n  onSelectTableName(tablesDetails: TablesDetails) {\r\n    if (this.isSupported(tablesDetails)) {\r\n      this.store.dispatch(new StatisticsActions.SetSelectedTableName(tablesDetails.name));\r\n    }\r\n  }\r\n\r\n  public isSupported(tablesDetails: TablesDetails): boolean {\r\n    return tablesDetails.databaseEnvironment === COMMON_TABLE_ENVIRONMENT;\r\n  }\r\n}\r\n","module.exports = \".card-header {\\r\\n  border: 1px solid #32383e;\\r\\n  background-color: rgba(0, 0, 0, 0.05);\\r\\n  color: gray !important;\\r\\n}\\r\\n\\r\\n.card {\\r\\n  margin-bottom: 20px;\\r\\n  border: 1px solid #32383e;\\r\\n  background-color: rgba(200, 200, 200, 0.05);\\r\\n  color: gray !important;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"selectedTableName | async\\\">\\r\\n\\r\\n  <div *ngIf=\\\"tableState | async\\\">\\r\\n\\r\\n    <div class=\\\"card\\\"><!--                                                                                 ROWS INFO -->\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <h5 class=\\\"text-info text-center\\\">{{ selectedTableName | async }}</h5>\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\" style=\\\"background-color: transparent !important; padding: 20px\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            Rows info:\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"row d-flex justify-content-center\\\" style=\\\"margin-top: 20px\\\">\\r\\n              <div class=\\\"col-3\\\">\\r\\n\\r\\n                <div class=\\\"card bg-transparent\\\" style=\\\"width: 10rem; border: 1px solid #107180\\\">\\r\\n                  <div class=\\\"align-middle\\\" style=\\\"background-color: rgba(23,162,184,0.4)\\\">\\r\\n                    <h3 class=\\\"text-white text-center\\\">{{ tableInfo?.rows.length }} </h3>\\r\\n                  </div>\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h5 class=\\\"card-title text-center text-white\\\">Rows</h5>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-3\\\">\\r\\n\\r\\n                <div class=\\\"card bg-transparent\\\" style=\\\"width: 10rem; border: 1px solid #1c7430\\\">\\r\\n                  <div class=\\\"align-middle\\\" style=\\\"background-color: rgba(40,167,69,0.4)\\\">\\r\\n                    <h3 class=\\\"text-white text-center\\\">{{ tableInfo?.doneRows.length }} </h3>\\r\\n                  </div>\\r\\n                  <div class=\\\"card-body\\\" style=\\\"min-height: 100px\\\">\\r\\n                    <h5 class=\\\"card-title text-center text-white\\\">Done Rows</h5>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"col-3\\\">\\r\\n                <div class=\\\"card bg-transparent\\\" style=\\\"width: 10rem; border: 1px solid #9a2530\\\">\\r\\n                  <div class=\\\"align-middle\\\" style=\\\"background-color: rgba(220,53,69,0.4)\\\">\\r\\n                    <h3 class=\\\"text-white text-center\\\">{{ tableInfo?.undoneRows.length }} </h3>\\r\\n                  </div>\\r\\n                  <div class=\\\"card-body\\\">\\r\\n                    <h5 class=\\\"card-title text-center text-white\\\">Undone Rows</h5>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"tableInfo\\\" class=\\\"progress bg-transparent\\\" style=\\\"margin-top: 20px\\\">\\r\\n              <div class=\\\"progress-bar\\\"\\r\\n                   style=\\\"background-color: rgba(40,167,69,0.4); border: 1px solid #1c7430\\\"\\r\\n                   role=\\\"progressbar\\\"\\r\\n                   [style.width]=\\\" (tableInfo?.doneRows.length / tableInfo?.rows.length * 100 | number : '1.0-0') + '%'\\\"\\r\\n                   attr.aria-valuenow=\\\"{{ tableInfo?.doneRows.length / tableInfo?.rows.length * 100 | number : '1.0-0' }}\\\"\\r\\n                   attr.aria-valuemin=\\\"0\\\"\\r\\n                   attr.aria-valuemax=\\\"100\\\">\\r\\n              </div>\\r\\n              <div class=\\\"progress-bar\\\"\\r\\n                   style=\\\"background-color: rgba(220,53,69,0.4); border: 1px solid #9a2530\\\"\\r\\n                   role=\\\"progressbar\\\"\\r\\n                   [style.width]=\\\"(tableInfo?.undoneRows.length / tableInfo?.rows.length * 100 | number : '1.0-0') + '%'\\\"\\r\\n                   attr.aria-valuenow=\\\"{{ tableInfo?.undoneRows.length / tableInfo?.rows.length * 100 | number : '1.0-0' }}\\\"\\r\\n                   attr.aria-valuemin=\\\"0\\\"\\r\\n                   attr.aria-valuemax=\\\"100\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--                                                                                              ROWS INFO END-->\\r\\n\\r\\n    <div class=\\\"card\\\"><!--                                 COLUMNS  INFO -->\\r\\n      <div class=\\\"card-header\\\">Columns info:</div>\\r\\n      <div class=\\\"card-body\\\" *ngIf=\\\"(tableHeaderState | async)\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <div class=\\\"col-12\\\">\\r\\n\\r\\n            <div class=\\\"card\\\" *ngIf=\\\"tableInfo.columnInfo.numberInfo.length > 0\\\"><!--                          NUMBER COLUMNS INFO -->\\r\\n              <div class=\\\"card-header\\\">Number info:</div>\\r\\n              <div class=\\\"card-body\\\" *ngIf=\\\"(tableHeaderState | async)\\\">\\r\\n                <table class=\\\"table bg-transparent table-responsive table-striped\\\">\\r\\n                  <thead>\\r\\n                  <tr>\\r\\n                    <th>Column name</th>\\r\\n                    <th>Column number</th>\\r\\n                    <th>Sum</th>\\r\\n                    <th>Average</th>\\r\\n                    <th>Min</th>\\r\\n                    <th>Max</th>\\r\\n                  </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                  <tr *ngFor=\\\"let numberInfo of tableInfo.columnInfo.numberInfo\\\">\\r\\n                    <th>{{ (tableHeaderState | async)[0].columnDetailDefinitionDtoList[numberInfo.columnNumber]?.name }}</th>\\r\\n                    <td>{{ numberInfo.columnNumber }}</td>\\r\\n                    <td>{{ numberInfo.sum }}</td>\\r\\n                    <td>{{ numberInfo.avg | number : '1.2-2' }}</td>\\r\\n                    <td>{{ numberInfo.min }}</td>\\r\\n                    <td>{{numberInfo.max }}</td>\\r\\n                  </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </div><!--                                                                                         NUMBER COLUMNS INFO END -->\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-6\\\">\\r\\n            <div class=\\\"card\\\" *ngIf=\\\"tableInfo.columnInfo.enumInfo.length > 0\\\"><!--                        ENUM INFO -->\\r\\n              <div class=\\\"card-header\\\">Enum info:</div>\\r\\n              <div class=\\\"card-body\\\" *ngIf=\\\"(tableHeaderState | async)\\\">\\r\\n                <div *ngFor=\\\"let enumInfoArray of tableInfo.columnInfo.enumInfo,let i = index\\\"\\r\\n                     style=\\\"border: 1px solid #32383e; padding: 20px; border-radius: 20px; margin: 10px; background-color: rgba(0,0,0,0.05)\\\">\\r\\n\\r\\n                  <h5 style=\\\"padding: 20px\\\">\\r\\n                    {{ (tableHeaderState | async)[0].columnDetailDefinitionDtoList[(enumInfoArray | clearArray)[i].columnNumber]?.name }}\\r\\n                  </h5>\\r\\n\\r\\n                  <div *ngIf=\\\"enumCharts[i].data.length > 0 && enumCharts[i].labels.length > 0\\\" style=\\\"display: block\\\">\\r\\n                    <canvas baseChart\\r\\n                            [datasets]=\\\"enumCharts[i].data\\\"\\r\\n                            [labels]=\\\"enumCharts[i].labels\\\"\\r\\n                            [legend]=\\\"enumCharts[i].legend\\\"\\r\\n                            [chartType]=\\\"enumCharts[i].chartType\\\"\\r\\n                            [options]=\\\"enumCharts[i].options\\\">\\r\\n                    </canvas>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n                  <table class=\\\"table table-responsive table-striped bg-transparent \\\"\\r\\n                         style=\\\"margin-top: 30px\\\">\\r\\n                    <thead class=\\\"border-secondary\\\">\\r\\n                    <tr>\\r\\n                      <th>\\r\\n                        ENUM NAME\\r\\n                      </th>\\r\\n                      <th>\\r\\n                        SUM\\r\\n                      </th>\\r\\n                    </tr>\\r\\n                    </thead>\\r\\n                    <tbody class=\\\"border-secondary\\\" *ngFor=\\\"let enumInfo of enumInfoArray | clearArray\\\">\\r\\n                    <tr *ngIf=\\\"enumInfo\\\">\\r\\n                      <td>\\r\\n                        {{ enumInfo.name }}\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        {{ enumInfo.sum }}\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                    </tbody>\\r\\n                  </table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div><!--                                                                                         ENUM COLUMNS INFO END -->\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-6\\\">\\r\\n\\r\\n            <div class=\\\"card\\\" *ngIf=\\\"tableInfo.columnInfo.dateInfo.length > 0\\\"><!--                            DATE COLUMNS INFO -->\\r\\n              <div class=\\\"card-header\\\">\\r\\n                <span>\\r\\n                  DATE TYPE COLUMNS:\\r\\n                </span>\\r\\n              </div>\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <table class=\\\"table table-striped table-responsive bg-transparent \\\">\\r\\n                  <thead class=\\\"border-secondary\\\">\\r\\n                  <tr>\\r\\n                    <th>\\r\\n                      COLUMN NAME\\r\\n                    </th>\\r\\n                    <th>\\r\\n                      MIN DATE\\r\\n                    </th>\\r\\n                    <th>\\r\\n                      MAX DATE\\r\\n                    </th>\\r\\n                  </tr>\\r\\n                  </thead>\\r\\n                  <tbody class=\\\"border-secondary\\\">\\r\\n                  <tr *ngFor=\\\"let dateInfo of tableInfo.columnInfo.dateInfo\\\">\\r\\n                    <td>\\r\\n                      {{ (tableHeaderState | async)[0].columnDetailDefinitionDtoList[dateInfo.columnNumber]?.name }}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      {{ dateInfo.min | date:'fullDate' }}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                      {{ dateInfo.max | date:'fullDate' }}\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </div><!--                                                                                     DATE COLUMNS INFO END-->\\r\\n\\r\\n            <div class=\\\"card\\\" *ngIf=\\\"tableInfo.columnInfo.descriptionInfo.length > 0\\\"><!--                     DESCRIPTION COLUMNS INFO -->\\r\\n              <div class=\\\"card-header\\\">Description info:</div>\\r\\n              <div class=\\\"card-body\\\" *ngIf=\\\"(tableHeaderState | async)\\\">\\r\\n                <table class=\\\"table bg-transparent table-responsive table-striped\\\">\\r\\n                  <thead>\\r\\n                  <tr>\\r\\n                    <th>Column name</th>\\r\\n                    <th>Column number</th>\\r\\n                    <th>Average</th>\\r\\n                  </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                  <tr *ngFor=\\\"let descriptionInfo of tableInfo.columnInfo.descriptionInfo\\\">\\r\\n                    <th>{{ (tableHeaderState | async)[0].columnDetailDefinitionDtoList[descriptionInfo.columnNumber]?.name }}</th>\\r\\n                    <td>{{ descriptionInfo.columnNumber }}</td>\\r\\n                    <td>{{ descriptionInfo.avgLength | number : '1.2-2'}}</td>\\r\\n                  </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </div><!--                                                                                         DESCRIPTION COLUMNS INFO END -->\\r\\n\\r\\n            <div class=\\\"card\\\" *ngIf=\\\"tableInfo.columnInfo.shortTextInfo.length > 0\\\"><!--                       SHORT TEXT COLUMNS INFO -->\\r\\n              <div class=\\\"card-header\\\">Short text info:</div>\\r\\n              <div class=\\\"card-body\\\" *ngIf=\\\"(tableHeaderState | async)\\\">\\r\\n\\r\\n                <table class=\\\"table bg-transparent table-responsive table-striped\\\">\\r\\n                  <thead>\\r\\n                  <tr>\\r\\n                    <th>Column name</th>\\r\\n                    <th>Column number</th>\\r\\n                    <th>Average</th>\\r\\n                  </tr>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                  <tr *ngFor=\\\"let shortTextInfo of tableInfo.columnInfo.shortTextInfo\\\">\\r\\n                    <th>{{ (tableHeaderState | async)[0].columnDetailDefinitionDtoList[shortTextInfo.columnNumber]?.name }}</th>\\r\\n                    <td>{{ shortTextInfo.columnNumber }}</td>\\r\\n                    <td>{{ shortTextInfo.avgLength | number : '1.2-2'}}</td>\\r\\n                  </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </div><!--                                                                                           SHORT TEXT COLUMNS INFO END -->\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </div><!--                                                                                             COLUMNS INFO END-->\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\"><!--                                                                                    TASKS INFO -->\\r\\n      <div class=\\\"card-header\\\">Tasks info:</div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\r\\n          <div class=\\\"col-12 d-flex justify-content-center\\\">\\r\\n            <div class=\\\"card border-info bg-transparent\\\" style=\\\"width: 10rem;\\\">\\r\\n              <div class=\\\"align-middle\\\" style=\\\"background-color: rgba(23,162,184,0.4)\\\">\\r\\n                <h3 class=\\\"text-white text-center\\\">{{ tasksInfo.tasks.length }} </h3>\\r\\n              </div>\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <h5 class=\\\"card-title text-center text-white\\\">Tasks</h5>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" style=\\\"margin-top: 20px\\\">\\r\\n          <div class=\\\"col-3\\\">\\r\\n            <div class=\\\"card border-danger bg-transparent\\\" style=\\\"width: 10rem; border: 1px solid #9a2530\\\">\\r\\n              <div class=\\\"align-middle\\\" style=\\\"background-color: rgba(220,53,69,0.4)\\\">\\r\\n                <h3 class=\\\"text-white text-center\\\">{{ tasksInfo.unassignedTasks.length }} </h3>\\r\\n              </div>\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <h5 class=\\\"card-title text-center text-white\\\">Unassigned Tasks</h5>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-3\\\">\\r\\n            <div class=\\\"card bg-transparent\\\" style=\\\"width: 10rem; border: 1px solid #b28704\\\">\\r\\n              <div class=\\\"align-middle\\\" style=\\\"background-color: rgba(255,193,7,0.4)\\\">\\r\\n                <h3 class=\\\"text-white text-center\\\">{{ tasksInfo.assignedTasks.length }} </h3>\\r\\n              </div>\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <h5 class=\\\"card-title text-center text-white\\\">Assigned Tasks</h5>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-3\\\">\\r\\n            <div class=\\\"card bg-transparent\\\" style=\\\"width: 10rem;\\\" style=\\\"border: 1px solid #0056b2\\\">\\r\\n              <div class=\\\"align-middle\\\" style=\\\"background-color: rgba(0,123,255,0.4)\\\">\\r\\n                <h3 class=\\\"text-white text-center\\\">{{ tasksInfo.inProgressTasks.length }} </h3>\\r\\n              </div>\\r\\n              <div class=\\\"card-body\\\">\\r\\n                <h5 class=\\\"card-title text-center text-white\\\">In progress Tasks</h5>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-3\\\">\\r\\n            <div class=\\\"card bg-transparent\\\" style=\\\"width: 10rem;\\\" style=\\\"border: 1px solid #1c7430\\\">\\r\\n              <div class=\\\"align-middle\\\" style=\\\"background-color: rgba(40,167,69,0.4)\\\">\\r\\n                <h3 class=\\\"text-white text-center\\\">{{ tasksInfo.doneTasks.length }} </h3>\\r\\n              </div>\\r\\n              <div class=\\\"card-body\\\" style=\\\"min-height: 100px\\\">\\r\\n                <h5 class=\\\"card-title text-center text-white\\\">Done Tasks</h5>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"progress bg-transparent\\\" *ngIf=\\\"tasksInfo.tasks.length > 0\\\" style=\\\"margin-top: 20px\\\">\\r\\n          <div class=\\\"progress-bar\\\"\\r\\n               style=\\\"background-color: rgba(220,53,69,0.4); border: 1px solid #9a2530\\\"\\r\\n               role=\\\"progressbar\\\"\\r\\n               [style.width]=\\\" (tasksInfo.unassignedTasks.length / tasksInfo.tasks.length * 100 | number : '1.0-0') + '%'\\\"\\r\\n               attr.aria-valuenow=\\\"{{ tasksInfo.unassignedTasks.length / tasksInfo.tasks.length * 100 | number : '1.0-0' }}\\\"\\r\\n               attr.aria-valuemin=\\\"0\\\"\\r\\n               attr.aria-valuemax=\\\"100\\\">\\r\\n          </div>\\r\\n          <div class=\\\"progress-bar\\\"\\r\\n               style=\\\"background-color: rgba(255,193,7,0.4); border: 1px solid #b28704\\\"\\r\\n               role=\\\"progressbar\\\"\\r\\n               [style.width]=\\\"(tasksInfo.assignedTasks.length / tasksInfo.tasks.length * 100 | number : '1.0-0') + '%'\\\"\\r\\n               attr.aria-valuenow=\\\"{{ tasksInfo.assignedTasks.length / tasksInfo.tasks.length * 100 | number : '1.0-0' }}\\\"\\r\\n               attr.aria-valuemin=\\\"0\\\"\\r\\n               attr.aria-valuemax=\\\"100\\\">\\r\\n          </div>\\r\\n          <div class=\\\"progress-bar\\\"\\r\\n               style=\\\"background-color: rgba(0,123,255,0.4); border: 1px solid #0056b2\\\"\\r\\n               role=\\\"progressbar\\\"\\r\\n               [style.width]=\\\"(tasksInfo.inProgressTasks.length / tasksInfo.tasks.length * 100 | number : '1.0-0') + '%'\\\"\\r\\n               attr.aria-valuenow=\\\"{{ tasksInfo.inProgressTasks.length / tasksInfo.tasks.length * 100 | number : '1.0-0' }}\\\"\\r\\n               attr.aria-valuemin=\\\"0\\\"\\r\\n               attr.aria-valuemax=\\\"100\\\">\\r\\n          </div>\\r\\n          <div class=\\\"progress-bar\\\"\\r\\n               style=\\\"background-color: rgba(40,167,69,0.4); border: 1px solid #1c7430\\\"\\r\\n               role=\\\"progressbar\\\"\\r\\n               [style.width]=\\\"(tasksInfo.doneTasks.length / tasksInfo.tasks.length * 100 | number : '1.0-0') + '%'\\\"\\r\\n               attr.aria-valuenow=\\\"{{ tasksInfo.doneTasks.length / tasksInfo.tasks.length * 100 | number : '1.0-0' }}\\\"\\r\\n               attr.aria-valuemin=\\\"0\\\"\\r\\n               attr.aria-valuemax=\\\"100\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div><!--                                                                     TASKS INFO -->\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Store} from '@ngrx/store';\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\nimport * as fromAppReducers from '../../shared/store/app.reducers';\r\nimport {TableState} from '../../shared/store/table/tables.reducers';\r\nimport {TableDefinitionModel, TablesDetails} from '../../shared/table.model';\r\nimport {DataStorageService} from '../../shared/data-storage.service';\r\nimport {EnumInfoModel, TableInfoModel} from '../../shared/statistics/table-info.model';\r\nimport {StatisticsService} from '../../shared/statistics/statistics.service';\r\nimport {TasksInfoModel} from '../../shared/statistics/tasks-info.model';\r\nimport {EnumChart} from './charts.model';\r\nimport {ConstantsService} from \"../../shared/constants.service\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-table-statistics',\r\n  templateUrl: './table-statistics.component.html',\r\n  styleUrls: ['./table-statistics.component.css']\r\n})\r\nexport class TableStatisticsComponent implements OnInit {\r\n  tableHeaderState: Observable<TableDefinitionModel>;\r\n  tableState: Observable<TableState>;\r\n  selectedTableName: Observable<string>;\r\n  tablesDetails: TablesDetails[];\r\n  tableInfo: TableInfoModel = null;\r\n  tasksInfo: TasksInfoModel = null;\r\n  enumCharts: EnumChart[] = [];\r\n\r\n  constructor(private store: Store<fromAppReducers.AppState>,\r\n              private dss: DataStorageService,\r\n              private statistics: StatisticsService,\r\n              public constantsService: ConstantsService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.tableHeaderState = this.store.select('tables', 'tableDefinition');\r\n    this.tableHeaderState.subscribe((header: TableDefinitionModel) => {\r\n      console.log(header);\r\n    });\r\n    this.tableState = this.store.select('tables');\r\n    this.selectedTableName = this.store.select('statistics', 'selectedTableName');\r\n    this.store.select('tables', 'tablesDetails')\r\n      .subscribe((tableDetails: TablesDetails[])=> this.tablesDetails = tableDetails);\r\n    this.selectedTableName.subscribe((tableName: string) => {\r\n      if (tableName) {\r\n        const tableDetails = this.tablesDetails.find((tableDetails) => tableDetails.name === tableName);\r\n        this.dss.getTableRowsBy(tableDetails.id);\r\n        this.dss.getTableHeaderBy(tableDetails.id);\r\n      }\r\n    });\r\n    this.tableState.subscribe((tableState: TableState) => {\r\n      if (tableState) {\r\n        this.tasksInfo = this.statistics.mapToTaskInfo(tableState.tableContent);\r\n        this.tableInfo = this.statistics.mapToRowsInfo(tableState.tableContent);\r\n        console.log(this.tableInfo);\r\n        this.tableInfo.columnInfo.enumInfo.forEach((enumInfo: EnumInfoModel[], i) => {\r\n          console.log('enumCharts', this.enumCharts);\r\n          this.setEnumChart(enumInfo, i);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  setEnumChart(enumInfos: EnumInfoModel[], i: number) {\r\n    this.enumCharts[i] = {\r\n      data: [],\r\n      labels: [],\r\n      chartType: (i % 2 === 0) ? 'doughnut' : 'bar',\r\n      legend: true,\r\n      options: {\r\n        scaleShowVerticalLines: false,\r\n        responsive: true,\r\n        legend: false,\r\n        elements: {\r\n          arc: {\r\n            borderWidth: 0\r\n          }\r\n        }\r\n      }\r\n    };\r\n    const  enumValues = [];\r\n    let columnNumber = null;\r\n    enumInfos.forEach((enumInfo: EnumInfoModel) => {\r\n      enumValues.push(enumInfo.sum);\r\n      columnNumber = enumInfo.columnNumber;\r\n      this.enumCharts[i].labels.push(enumInfo.name);\r\n    });\r\n    this.enumCharts[i].data.push({data: enumValues, label: 'ENUM ' + columnNumber});\r\n  }\r\n}\r\n\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n// @Pipe({name: 'keys'})\r\n// export class KeyPipe implements PipeTransform {\r\n//   transform(value: any, ...args: any[]): any {\r\n//     return Object.keys(value);\r\n//   }\r\n// }\r\n\r\n@Pipe({name: 'valueOnKey'})\r\nexport class KeyPipe implements PipeTransform {\r\n  transform(value: {}, ...args: any[]): any {\r\n    const key = Object.keys(value);\r\n    return {key: key, value: value[Object.keys(value)[0]]};\r\n  }\r\n}\r\n","module.exports = \"a.bg-dark:hover {\\r\\n  background-color: #343a40!important;\\r\\n}\\r\\n\\r\\nli {\\r\\n  background-color: rgba(200,200,200,0.05);\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.form-control {\\r\\n  background-color: rgba(200,200,200,0.05);\\r\\n  border: none;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"padding: 0\\\" *ngIf=\\\"chosenName\\\">\\r\\n  <nav class=\\\"navbar\\\" style=\\\"margin-bottom: 0;padding-bottom: 0; border-bottom: none;\\\">\\r\\n    <ul class=\\\"nav\\\" style=\\\"margin-bottom: 0;padding-bottom: 0; border-bottom: none;\\\">\\r\\n      <li style=\\\"background-color: transparent !important;\\\">\\r\\n        <form class=\\\"form-inline input-group my-2 my-lg-0\\\" style=\\\"margin-bottom: 0;padding-left: 20px;\\\">\\r\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"\\\">\\r\\n            <button class=\\\"btn btn-outline-secondary my-2 my-sm-0\\\" (click)=\\\"onNewRow()\\\">\\r\\n              New row\\r\\n            </button>\\r\\n            <button class=\\\"btn btn-outline-secondary my-2 my-sm-0\\\"\\r\\n                    *ngIf=\\\"(extendedTableView|async)\\\"\\r\\n                    (click)=\\\"onExtendedFilterMode()\\\">\\r\\n              Filter Mode\\r\\n            </button>\\r\\n            <button class=\\\"btn btn-outline-secondary my-2 my-sm-0\\\" (click)=\\\"switchExtendedTableView()\\\">\\r\\n              {{ (extendedTableView|async) ? 'Reduce View' : 'Extend View'}}\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"btn-group btn-group-toggle\\\" data-toggle=\\\"buttons\\\"\\r\\n               *ngIf=\\\"(extendedTableView|async) && (extendedFilterMode | async)\\\">\\r\\n            <label class=\\\"btn btn-outline-secondary active\\\" (click)=\\\"setFilterSelectValue(false)\\\">\\r\\n              <input type=\\\"radio\\\">\\r\\n              All\\r\\n            </label>\\r\\n            <label class=\\\"btn btn-outline-secondary\\\" (click)=\\\"setFilterSelectValue(true)\\\">\\r\\n              <input type=\\\"radio\\\">\\r\\n              Any\\r\\n            </label>\\r\\n          </div>\\r\\n          <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"\\\">\\r\\n            <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\"\\r\\n                   (keyup)=\\\"onFilter(filterInput.value)\\\"\\r\\n                   *ngIf=\\\"!(extendedTableView|async)\\\"\\r\\n                   #filterInput>\\r\\n          </div>\\r\\n        </form>\\r\\n      </li>\\r\\n    </ul>\\r\\n    <ul class=\\\"nav nav-pills nav-collapse\\\" style=\\\"margin-bottom: 0;padding-bottom: 0;border-bottom: none;\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"\\\">\\r\\n          <button class=\\\"btn btn-outline-secondary\\\"\\r\\n                  *ngFor=\\\"let tableDetails of tablesDetails\\\" (click)=\\\"onChooseName(tableDetails.name)\\\"\\r\\n                  [ngClass]=\\\"chosenName == tableDetails.name ? 'text-info' : 'text-secondary'\\\">\\r\\n            {{tableDetails.name}} <b>({{constants.getShortcut(tableDetails.databaseEnvironment)}})</b>\\r\\n          </button>\\r\\n        </div>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </nav>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container\\\" style=\\\"margin-top: 10%\\\" *ngIf=\\\"chosenName == null || chosenName == undefined\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-sm-12 col-md-6\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item bg-dark text-info\\\">Select a table:</li>\\r\\n        <li class=\\\"list-group-item text-secondary\\\" *ngFor=\\\"let tableDetails of tablesDetails\\\"\\r\\n            (click)=\\\"onChooseName(tableDetails.name)\\\">{{tableDetails.name}} <b>({{constants.getShortcut(tableDetails.databaseEnvironment)}})</b>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit, Output} from '@angular/core';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {Store} from '@ngrx/store';\r\nimport * as fromAppReducers from '../../shared/store/app.reducers';\r\nimport * as TablesActions from '../../shared/store/table/tables.actions';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {TablesDetails} from \"../../shared/table.model\";\r\nimport {ConstantsService} from \"../../shared/constants.service\";\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n  @Input() tablesDetails: TablesDetails[];\r\n  @Output() chosenNameChanged = new Subject<TablesDetails>();\r\n\r\n  tableNames: string[] = [];\r\n  chosenName: string;\r\n  extendedFilterMode: Observable<boolean>;\r\n  extendedTableView: Observable<boolean>;\r\n  extendedTableViewValue: boolean;\r\n  extendedFilterModeValue: boolean;\r\n\r\n\r\n  constructor(private store: Store<fromAppReducers.AppState>, public constants: ConstantsService) {\r\n  }\r\n\r\n  setFilterSelectValue(value: boolean) {\r\n    console.log('setFilterSelectValue', value);\r\n    this.store.dispatch(new TablesActions.SetExtendedFilterSelect(value));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.extendedFilterMode = this.store.select('tables', 'extendedFilterMode');\r\n    this.extendedFilterMode.subscribe((filterModeValue => {\r\n      this.extendedFilterModeValue = filterModeValue;\r\n    }));\r\n    this.extendedTableView = this.store.select('tables', 'extendedTableView');\r\n    this.extendedTableView.subscribe((value) => {\r\n      this.extendedTableViewValue = value;\r\n    });\r\n    this.tablesDetails.forEach(tableDetails => this.tableNames.push(tableDetails.name));\r\n  }\r\n\r\n  onChooseName(tableName: string) {\r\n    this.chosenName = tableName;\r\n    const tableDetails = this.tablesDetails.find((tableDetails) => tableDetails.name === tableName);\r\n    this.chosenNameChanged.next(tableDetails);\r\n  }\r\n\r\n  onFilter(filter) {\r\n    console.log(filter);\r\n    this.store.dispatch(new TablesActions.TableFilter(filter));\r\n  }\r\n\r\n  onNewRow() {\r\n    // TODO new Row\r\n    this.store.dispatch(new TablesActions.SetEditRowMode(true));\r\n    this.store.dispatch(new TablesActions.SetNewRowModeAction(true));\r\n  }\r\n\r\n  switchExtendedTableView() {\r\n    if(this.extendedFilterModeValue && this.extendedTableViewValue){\r\n      this.onExtendedFilterMode()\r\n    }\r\n    this.store.dispatch(new TablesActions.SetExtendedTableView(!this.extendedTableViewValue));\r\n  }\r\n\r\n  onExtendedFilterMode() {\r\n    this.store.dispatch(new TablesActions.SetExtendedFilterMode(!this.extendedFilterModeValue));\r\n  }\r\n}\r\n","module.exports = \"li, td {\\r\\n  border: 1px solid #32383e;\\r\\n  background-color: rgba(200, 200, 200, 0.05);\\r\\n  color: lightgray !important;\\r\\n}\\r\\n\\r\\n.form-control {\\r\\n  background-color: rgba(200,200,200,0.05);\\r\\n  border: none;\\r\\n  color: gray !important;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"panel\\\" *ngIf=\\\"editRowMode\\\" style=\\\"border: solid 2px #343a40; border-radius: 8px\\\">\\r\\n\\r\\n  <div class=\\\"panel-heading text-center\\\" style=\\\"background-color: rgba(0,0,0,0.05); padding: 10px\\\">\\r\\n    <div class=\\\"btn-group\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onToggleRowEditMode()\\\">Close</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onAddTask()\\\">Add Task</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" *ngIf=\\\"unlockFields && !(newRowMode | async)\\\" (click)=\\\"onSubmit()\\\">Save</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" *ngIf=\\\"!(newRowMode | async)\\\" (click)=\\\"toggleUnlock()\\\"> {{ unlockFields ? 'Cancel' : 'Edit' }}</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" *ngIf=\\\"(newRowMode | async)\\\" (click)=\\\"onSaveNewRow()\\\">Save</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"switchExtendedRowView()\\\">{{(extendedRowView| async) ? 'Reduce' : 'Extend'}}</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary text-danger\\\" (click)=\\\"onDeleteRow()\\\"> Delete </button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"panel-body\\\" style=\\\"padding: 10px\\\">\\r\\n    <div *ngIf=\\\"!unlockFields && (newRowMode | async)\\\">\\r\\n      <div class=\\\"col-xs-12 \\\">\\r\\n        <form [formGroup]=\\\"newRowForm\\\">\\r\\n          <div class=\\\"form-group\\\" hidden>\\r\\n            <label for=\\\"id\\\" class=\\\"text-info\\\">ID:</label>\\r\\n            <input type=\\\"number\\\"\\r\\n                   id=\\\"id\\\"\\r\\n                   formControlName=\\\"id\\\"\\r\\n                   class=\\\"form-control\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" hidden>\\r\\n            <label for=\\\"name\\\" class=\\\"text-info\\\">Name:</label>\\r\\n            <input type=\\\"text\\\"\\r\\n                   id=\\\"name\\\"\\r\\n                   formControlName=\\\"name\\\"\\r\\n                   class=\\\"form-control\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" hidden>\\r\\n            <label for=\\\"createdBy\\\" class=\\\"text-info\\\">Created By:</label>\\r\\n            <input type=\\\"text\\\"\\r\\n                   id=\\\"createdBy\\\"\\r\\n                   formControlName=\\\"createdBy\\\"\\r\\n                   class=\\\"form-control\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" hidden>\\r\\n            <label for=\\\"createdOn\\\" class=\\\"text-info\\\">Created On:</label>\\r\\n            <input type=\\\"datetime-local\\\"\\r\\n                   id=\\\"createdOn\\\"\\r\\n                   formControlName=\\\"createdOn\\\"\\r\\n                   class=\\\"form-control\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" hidden>\\r\\n            <label for=\\\"lastModifiedBy\\\" class=\\\"text-info\\\">Last modified by:</label>\\r\\n            <input type=\\\"text\\\"\\r\\n                   id=\\\"lastModifiedBy\\\"\\r\\n                   formControlName=\\\"lastModifiedBy\\\"\\r\\n                   class=\\\"form-control\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\" hidden>\\r\\n            <label for=\\\"lastModifiedOn\\\" class=\\\"text-info\\\">Last modified on:</label>\\r\\n            <input type=\\\"datetime-local\\\"\\r\\n                   id=\\\"lastModifiedOn\\\"\\r\\n                   formControlName=\\\"lastModifiedOn\\\"\\r\\n                   class=\\\"form-control\\\"\\r\\n            >\\r\\n          </div>\\r\\n          <div formArrayName=\\\"columnValueDtos\\\">\\r\\n            <div *ngFor=\\\"let cell of newRowForm.get('columnValueDtos').controls;let j = index\\\">\\r\\n\\r\\n              <div [ngSwitch]=\\\"(cell.value | valueOnKey).key\\\" formGroupName=\\\"{{j}}\\\">\\r\\n\\r\\n                <div *ngSwitchCase=\\\"'DT'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\r\\n                  <label class=\\\"text-info\\\">{{(header | async)[0].columnDetailDefinitionDtoList[j].name}}</label>\\r\\n                  <input type=\\\"datetime-local\\\"\\r\\n                         formControlName=\\\"DT\\\"\\r\\n                         class=\\\"form-control\\\"\\r\\n                         formControlName=\\\"DT\\\">\\r\\n                </div>\\r\\n                <div *ngSwitchCase=\\\"'ST'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\r\\n                  <label class=\\\"text-info\\\">{{(header | async)[0].columnDetailDefinitionDtoList[j].name}}</label>\\r\\n                  <input\\r\\n                    [type]=\\\"'text'\\\"\\r\\n                    formControlName=\\\"ST\\\"\\r\\n                    class=\\\"form-control\\\">\\r\\n                </div>\\r\\n                <div *ngSwitchCase=\\\"'DE'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\r\\n                  <label class=\\\"text-info\\\">{{(header | async)[0].columnDetailDefinitionDtoList[j].name}}</label>\\r\\n                  <textarea cols=\\\"30\\\" rows=\\\"10\\\"\\r\\n                            class=\\\"form-control\\\"\\r\\n                            formControlName=\\\"DE\\\">\\r\\n                </textarea>\\r\\n                </div>\\r\\n                <div *ngSwitchCase=\\\"'EN'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\r\\n                  <label class=\\\"text-info\\\">{{(header | async)[0].columnDetailDefinitionDtoList[j].name}}</label>\\r\\n                  <select class=\\\"form-control\\\" formControlName=\\\"EN\\\">\\r\\n                    <option selected> -Select value-</option>\\r\\n                    <option *ngFor=\\\"let option of (header | async)[0].columnDetailDefinitionDtoList[j].optionList\\\">\\r\\n                      {{option.value}}\\r\\n                    </option>\\r\\n                  </select>\\r\\n                </div>\\r\\n                <div *ngSwitchCase=\\\"'IN'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\r\\n                  <label class=\\\"text-info\\\">{{(header | async)[0].columnDetailDefinitionDtoList[j].name}}</label>\\r\\n                  <input [id]=\\\"(cell.value | valueOnKey).key\\\"\\r\\n                         [type]=\\\"'number'\\\"\\r\\n                         class=\\\"form-control\\\"\\r\\n                         formControlName=\\\"IN\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <form *ngIf=\\\"unlockFields && !(newRowMode | async)\\\" [formGroup]=\\\"updateRowForm\\\" style=\\\"padding-left: 10px\\\" style=\\\"padding: 5px\\\">\\r\\n      <div formArrayName=\\\"columnValueDtos\\\">\\r\\n        <div *ngFor=\\\"let cell of updateRowForm.get('columnValueDtos').controls;let j = index\\\">\\r\\n          <div [ngSwitch]=\\\"(cell.value | valueOnKey).key\\\" formGroupName=\\\"{{j}}\\\">\\r\\n            <div *ngSwitchCase=\\\"'DT'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\r\\n              <label class=\\\"text-info\\\"> {{ (header | async)[0].columnDetailDefinitionDtoList[j]?.name }} </label>\\r\\n              <input type=\\\"datetime-local\\\"\\r\\n                     formControlName=\\\"DT\\\"\\r\\n                     class=\\\"form-control\\\"\\r\\n              >\\r\\n            </div>\\r\\n            <div *ngSwitchCase=\\\"'ST'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\r\\n              <label class=\\\"text-info\\\"> {{ (header | async)[0].columnDetailDefinitionDtoList[j]?.name }} </label>\\r\\n              <input formControlName=\\\"ST\\\"\\r\\n                     [type]=\\\"'text'\\\"\\r\\n                     class=\\\"form-control\\\"\\r\\n              >\\r\\n            </div>\\r\\n            <div *ngSwitchCase=\\\"'DE'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\r\\n              <label class=\\\"text-info\\\"> {{ (header | async)[0].columnDetailDefinitionDtoList[j]?.name }} </label>\\r\\n              <textarea cols=\\\"30\\\" rows=\\\"10\\\"\\r\\n                        formControlName=\\\"DE\\\"\\r\\n                        class=\\\"form-control\\\"\\r\\n\\r\\n              >\\r\\n                </textarea>\\r\\n            </div>\\r\\n            <div *ngSwitchCase=\\\"'IN'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\r\\n              <label class=\\\"text-info\\\"> {{ (header | async)[0].columnDetailDefinitionDtoList[j]?.name }} </label>\\r\\n              <input formControlName=\\\"IN\\\"\\r\\n                     [type]=\\\"'number'\\\"\\r\\n                     class=\\\"form-control\\\"\\r\\n\\r\\n              >\\r\\n            </div>\\r\\n            <div *ngSwitchCase=\\\"'EN'\\\" class=\\\"form-group\\\" style=\\\"margin-top: 10px\\\">\\r\\n              <label class=\\\"text-info\\\"> {{ (header | async)[0].columnDetailDefinitionDtoList[j]?.name }} </label>\\r\\n              <select class=\\\"form-control\\\"\\r\\n                      formControlName=\\\"EN\\\"\\r\\n                      style=\\\"height: 35px\\\"\\r\\n\\r\\n              >\\r\\n                <option *ngFor=\\\"let option of (header | async)[0].columnDetailDefinitionDtoList[j]?.optionList\\\"\\r\\n                        [value]=\\\"option.value\\\"\\r\\n                        [selected]=\\\"(row| async)?.columnValueDtos[j]['EN'].value == option.value\\\"\\r\\n                >{{ option.value }}\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"id\\\" class=\\\"text-info\\\">ID:</label>\\r\\n        <input type=\\\"number\\\"\\r\\n               id=\\\"id\\\"\\r\\n               formControlName=\\\"id\\\"\\r\\n               class=\\\"form-control\\\"\\r\\n               readonly\\r\\n               required\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\" hidden>\\r\\n        <label for=\\\"name\\\" class=\\\"text-info\\\">Name:</label>\\r\\n        <input type=\\\"text\\\"\\r\\n               id=\\\"name\\\"\\r\\n               formControlName=\\\"name\\\"\\r\\n               class=\\\"form-control\\\"\\r\\n               readonly\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\" >\\r\\n        <label for=\\\"createdBy\\\" class=\\\"text-info\\\">Created By:</label>\\r\\n        <input type=\\\"text\\\"\\r\\n               id=\\\"createdBy\\\"\\r\\n               formControlName=\\\"createdBy\\\"\\r\\n               class=\\\"form-control\\\"\\r\\n               readonly\\r\\n               required\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"text-info\\\">Created On:</label>\\r\\n        <input type=\\\"datetime-local\\\"\\r\\n               formControlName=\\\"createdOn\\\"\\r\\n               class=\\\"form-control\\\"\\r\\n               readonly\\r\\n               required\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"lastModifiedBy\\\" class=\\\"text-info\\\">Last modified by:</label>\\r\\n        <input type=\\\"text\\\"\\r\\n               id=\\\"lastModifiedBy\\\"\\r\\n               formControlName=\\\"lastModifiedBy\\\"\\r\\n               class=\\\"form-control\\\"\\r\\n               readonly\\r\\n               required\\r\\n        >\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\" disabled>\\r\\n        <label for=\\\"lastModifiedOn\\\" class=\\\"text-info\\\">Last modified on:</label>\\r\\n        <input type=\\\"datetime-local\\\"\\r\\n               id=\\\"lastModifiedOn\\\"\\r\\n               formControlName=\\\"lastModifiedOn\\\"\\r\\n               class=\\\"form-control\\\"\\r\\n               readonly\\r\\n               required\\r\\n        >\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n    <div *ngIf=\\\"!unlockFields && !(newRowMode | async)\\\">\\r\\n      <table class=\\\"table\\\">\\r\\n        <tbody>\\r\\n        <tr *ngFor=\\\"let cellValue of (row | async)?.columnValueDtos; let i = index;\\\">\\r\\n          <td><span class=\\\"text-info\\\">\\r\\n            {{ (header | async)[0].columnDetailDefinitionDtoList[i]?.name }}</span>\\r\\n          </td>\\r\\n          <td>\\r\\n            {{(cellValue | valueOnKey).value.value }}\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"extendedRowView | async\\\">\\r\\n          <td><span class=\\\"text-info\\\">ID</span></td>\\r\\n          <td>{{ (row | async)?.id }}</td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"extendedRowView | async\\\" hidden>\\r\\n          <td><span class=\\\"text-info\\\">Name</span></td>\\r\\n          <td>{{ (row | async)?.name }}</td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"extendedRowView | async\\\">\\r\\n          <td><span class=\\\"text-info\\\">Created by</span></td>\\r\\n          <td>{{ (row | async)?.createdBy}}</td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"extendedRowView | async\\\">\\r\\n          <td><span class=\\\"text-info\\\">Created on</span></td>\\r\\n          <td>{{ (row | async)?.createdOn }}</td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"extendedRowView | async\\\">\\r\\n          <td><span class=\\\"text-info\\\">Last modified by</span></td>\\r\\n          <td>{{ (row | async)?.lastModifiedBy }}</td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"extendedRowView | async\\\">\\r\\n          <td><span class=\\\"text-info\\\">Last modified on</span></td>\\r\\n          <td>{{ (row | async)?.lastModifiedOn }}</td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n      <div *ngIf=\\\"(row | async)?.taskDtos.length <= 0\\\">\\r\\n        <ul class=\\\"list-group\\\" style=\\\"margin-bottom: 0\\\">\\r\\n          <li class=\\\"list-group-item text-white text-center\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">\\r\\n            <h5>NO TASKS</h5>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"(row | async)?.taskDtos.length > 0\\\">\\r\\n        <ul class=\\\"list-group\\\" style=\\\"margin-bottom: 0\\\">\\r\\n          <li class=\\\"list-group-item text-white text-center\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">\\r\\n            <h5>TASKS</h5>\\r\\n          </li>\\r\\n          <div *ngFor=\\\"let task of (row | async)?.taskDtos; let i = index;\\\">\\r\\n            <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\" style=\\\"margin-top: 3px\\\">\\r\\n              <span class=\\\"btn btn-outline-secondary text-info\\\"\\r\\n                    (click)=\\\"task.id == selectedTask?.id ? onShowTask(null) : onShowTask(task)\\\"> {{task.name }} </span>\\r\\n              <span class=\\\"btn btn-outline-secondary text-danger\\\" (click)=\\\"onDeleteTask(task.id)\\\" *ngIf=\\\"task.id == selectedTask?.id\\\"> Delete Task</span>\\r\\n              <span class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onShowTaskDetails(task)\\\">Details</span>\\r\\n            </li>\\r\\n            <div *ngIf=\\\"task.id == selectedTask?.id\\\">\\r\\n              <li class=\\\"list-group-item\\\"> ID: {{task.id}}</li>\\r\\n              <li class=\\\"list-group-item\\\"> Name: {{task.name}}</li>\\r\\n              <li class=\\\"list-group-item\\\"> Description: {{task.description}}</li>\\r\\n              <li class=\\\"list-group-item\\\"> Status: {{task.status}}</li>\\r\\n            </div>\\r\\n          </div>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {RowContentModel, TableDefinitionModel, TablesDetails, TaskModel} from '../../shared/table.model';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {DataStorageService} from '../../shared/data-storage.service';\r\nimport {Store} from '@ngrx/store';\r\nimport * as fromAppReducers from '../../shared/store/app.reducers';\r\nimport * as TablesActions from '../../shared/store/table/tables.actions';\r\nimport {FormArray, FormControl, FormGroup} from '@angular/forms';\r\nimport {Question} from '../row/value-types/question-base.model';\r\nimport {QuestionControlService} from '../row/question-control.service';\r\nimport * as TaskActions from '../../shared/store/task/tasks.actions';\r\n\r\n@Component({\r\n  selector: 'app-row-details',\r\n  templateUrl: './row-details.component.html',\r\n  styleUrls: ['./row-details.component.css']\r\n})\r\nexport class RowDetailsComponent implements OnInit, OnDestroy {\r\n  row: Observable<RowContentModel>;\r\n  header: Observable<TableDefinitionModel>;\r\n  updateRowForm: FormGroup;\r\n  newRowForm: FormGroup;\r\n  editRowMode: Observable<boolean>;\r\n  unlockFields: boolean;\r\n  newRowMode: Observable<boolean>;\r\n  selectedTask: TaskModel = null;\r\n  selectedRow: RowContentModel;\r\n  extendedRowView: Observable<boolean>;\r\n  extendedRowViewValue: boolean;\r\n  tablesDetails: TablesDetails[];\r\n  private tableDefinition: TableDefinitionModel;\r\n\r\n  constructor(private qcs: QuestionControlService,\r\n              private store: Store<fromAppReducers.AppState>,\r\n              private dss: DataStorageService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.unlockFields = false;\r\n    this.extendedRowView = this.store.select('tables', 'extendedRowView');\r\n    this.extendedRowView.subscribe((value: boolean) => {\r\n      this.extendedRowViewValue = value;\r\n    });\r\n    this.editRowMode = this.store.select('tables', 'editRowMode');\r\n    this.row = this.store.select('tables', 'editedRow');\r\n    this.header = this.store.select('tables', 'tableDefinition');\r\n    this.header.subscribe((header: TableDefinitionModel) => {\r\n      if (header) {\r\n        this.tableDefinition = header[0];\r\n      }\r\n    });\r\n    this.row.subscribe(row => {\r\n      this.createUpdateRowForm(row);\r\n      this.selectedRow = row;\r\n    });\r\n    this.newRowMode = this.store.select('tables', 'newRowMode');\r\n    this.newRowMode.subscribe(() => {\r\n      this.createNewRowForm();\r\n    });\r\n    this.store.select('tables', 'tablesDetails').subscribe((tablesDetails: TablesDetails[]) => {\r\n      this.tablesDetails = tablesDetails;\r\n    });\r\n  }\r\n\r\n  createNewRowForm() {\r\n    this.header.subscribe(header => {\r\n      if (header) {\r\n        this.newRowForm =\r\n          new FormGroup({\r\n            'id': new FormControl(),\r\n            'name': new FormControl(),\r\n            'createdBy': new FormControl(),\r\n            'createdOn': new FormControl(),\r\n            'lastModifiedBy': new FormControl(),\r\n            'lastModifiedOn': new FormControl(),\r\n            'columnValueDtos': new FormArray([]),\r\n            'taskDtos': new FormArray([])\r\n          });\r\n\r\n        header[0]['columnDetailDefinitionDtoList'].forEach((column) => {\r\n          (<FormArray>this.newRowForm.get('columnValueDtos')).push(\r\n            this.qcs.toFormGroup([new Question({key: column.type, value: ''})])\r\n          );\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  createUpdateRowForm(row) {\r\n\r\n    if (row) {\r\n      this.updateRowForm =\r\n        new FormGroup({\r\n          'id': new FormControl(row.id),\r\n          'name': new FormControl(row.name),\r\n          'createdBy': new FormControl(row.createdBy),\r\n          'createdOn': new FormControl(row.createdOn),\r\n          'lastModifiedBy': new FormControl(row.lastModifiedBy),\r\n          'lastModifiedOn': new FormControl(row.lastModifiedOn),\r\n          'columnValueDtos': new FormArray([]),\r\n          'taskDtos': new FormArray([])\r\n        });\r\n\r\n      row.columnValueDtos.forEach((cell) => {\r\n        (<FormArray>this.updateRowForm.get('columnValueDtos')).push(\r\n          this.qcs.toFormGroup([new Question({key: Object.keys(cell), value: cell[Object.keys(cell)[0]].value})])\r\n        );\r\n      });\r\n      row.taskDtos.forEach(() => {\r\n        (<FormArray>this.updateRowForm.get('taskDtos')).push(\r\n          new FormGroup({\r\n            'id': new FormControl(),\r\n            'name': new FormControl(),\r\n            'description': new FormControl(),\r\n            'status': new FormControl(),\r\n            'userNames': new FormArray([]),\r\n            'taskDtos': new FormArray([])\r\n          })\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  onToggleRowEditMode() { // TODO reset all details state\r\n    this.store.dispatch(new TablesActions.SetEditRowMode(false));\r\n    this.store.dispatch(new TablesActions.SetNewRowModeAction(false));\r\n    this.store.dispatch(new TaskActions.SetTaskDetailsModeAction(false));\r\n    this.store.dispatch(new TaskActions.SetShowedTaskAction(null));\r\n\r\n    this.unlockFields = false;\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.unlockFields) {\r\n      this.header.forEach(header => {\r\n        this.dss.updateRow(header[0].id, mapForm(this.updateRowForm.value));\r\n      });\r\n      this.onToggleRowEditMode();\r\n    }\r\n\r\n    function mapForm(formValue) { //TODO remove?\r\n      formValue.columnValueDtos.forEach((value, i) => {\r\n        if (Object.keys(value[Object.keys(value)[0]])[0] !== 'value') {\r\n          const mappedColumnValue = {};\r\n          mappedColumnValue[Object.keys(value)[0]] = {value: value[Object.keys(value)[0]]};\r\n          formValue.columnValueDtos[i] = mappedColumnValue;\r\n        }\r\n      });\r\n      return formValue;\r\n    }\r\n  }\r\n\r\n  onSaveNewRow() {\r\n    const newRow = this.mapNewRow();\r\n    this.header.forEach(header => {\r\n      if (header) {\r\n        this.dss.addNewRow(header[0].id, newRow);\r\n      }\r\n    });\r\n  }\r\n\r\n  mapNewRow() {\r\n    const newRow = this.newRowForm.value;\r\n    const mapedNewRow = {\r\n      id: this.newRowForm.value.id,\r\n      name: this.newRowForm.value.name,\r\n      createdBy: this.newRowForm.value.createdBy,\r\n      createdOn: this.newRowForm.value.createdOn,\r\n      lastModifiedBy: this.newRowForm.value.lastModifiedBy,\r\n      lastModifiedOn: this.newRowForm.value.lastModifiedOn,\r\n      columnValueDtos: [],\r\n      taskDtos: []\r\n    };\r\n\r\n    newRow.columnValueDtos.forEach(value => {\r\n      const newValue = {};\r\n      newValue[Object.keys(value)[0]] = {value: value[Object.keys(value)[0]]};\r\n      mapedNewRow.columnValueDtos.push(newValue);\r\n    });\r\n\r\n    return mapedNewRow;\r\n  }\r\n\r\n  toggleUnlock() {\r\n    this.unlockFields = !this.unlockFields;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.store.dispatch(new TaskActions.ResetTaskStore());\r\n    this.selectedTask = null;\r\n  }\r\n\r\n  onAddTask() {\r\n    this.store.dispatch(new TaskActions.SetTaskDetailsModeAction(true));\r\n    this.store.dispatch(new TaskActions.SetShowedTaskAction(null));\r\n  }\r\n\r\n  onShowTask(task: TaskModel) {\r\n    this.selectedTask = task;\r\n  }\r\n\r\n  onShowTaskDetails(task: TaskModel) {\r\n    this.store.dispatch(new TaskActions.SetTaskDetailsModeAction(true));\r\n    this.store.dispatch(new TaskActions.SetShowedTaskAction(task));\r\n  }\r\n\r\n  onDeleteRow() {\r\n    this.dss.deleteRow(this.tableDefinition.id, this.selectedRow.id);\r\n  }\r\n\r\n  onDeleteTask(taskId: number) {\r\n    this.dss.deleteTask(this.tableDefinition.id, taskId, this.selectedRow.id);\r\n  }\r\n\r\n  switchExtendedRowView() {\r\n    this.store.dispatch(new TablesActions.SetExtendedRowView(!this.extendedRowViewValue));\r\n  }\r\n\r\n  private getTableId(tableName: string): number {\r\n    return this.tablesDetails.find((tableDetails) => tableDetails.name === tableName).id\r\n  }\r\n}\r\n","import {FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {QuestionBase} from './value-types/question-base.model';\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class QuestionControlService {\r\n  constructor() { }\r\n\r\n  toFormGroup(questions: QuestionBase<any>[] ) {\r\n    const group: any = {};\r\n\r\n    questions.forEach(question => {\r\n      group[question.key] = question.required ? new FormControl(question.value || '', Validators.required)\r\n        : new FormControl(question.value || '');\r\n    });\r\n    return new FormGroup(group);\r\n  }\r\n}\r\n","module.exports = \"td {\\r\\n  min-width: 200px;\\r\\n  width: 200px;\\r\\n  text-align: center;\\r\\n  border: 1px solid #32383e;\\r\\n  background-color: rgba(200, 200, 200, 0.05);\\r\\n  color: lightgray !important;\\r\\n}\\r\\n\\r\\ntd.description {\\r\\n  min-width: 400px;\\r\\n  width: 400px;\\r\\n  text-align: justify;\\r\\n  background-color: rgba(200, 200, 200, 0.05);\\r\\n  border: 1px solid #32383e;\\r\\n  color: lightgray !important;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"d-flex justify-content-center\\\">\\r\\n  <tr (click)=\\\"onEditForm()\\\" *ngIf=\\\"rowFilterState\\\" main>\\r\\n    <td *ngFor=\\\"let cellValue of row.columnValueDtos\\\"\\r\\n        [ngClass]=\\\"(cellValue | valueOnKey).key == 'DE' ? 'description' : '' \\\">\\r\\n      {{(cellValue | valueOnKey).value.value }}\\r\\n    </td>\\r\\n    <td *ngIf=\\\"extendedTableView | async\\\">{{ row.id }}</td>\\r\\n    <td *ngIf=\\\"extendedTableView | async\\\" hidden>{{ row.name }}</td>\\r\\n    <td *ngIf=\\\"extendedTableView | async\\\">{{ row.createdBy}}</td>\\r\\n    <td *ngIf=\\\"extendedTableView | async\\\">{{ row.createdOn }}</td>\\r\\n    <td *ngIf=\\\"extendedTableView | async\\\">{{ row.lastModifiedBy }}</td>\\r\\n    <td *ngIf=\\\"extendedTableView | async\\\">{{ row.lastModifiedOn }}</td>\\r\\n    <td *ngIf=\\\"extendedTableView | async\\\">{{ row.taskDtos.length }}</td>\\r\\n  </tr>\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormArray, FormControl, FormGroup} from '@angular/forms';\r\nimport {QuestionControlService} from './question-control.service';\r\nimport {ExtendedFilterModel, RowContentModel, TableDefinitionModel} from '../../shared/table.model';\r\nimport {Question} from './value-types/question-base.model';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Store} from '@ngrx/store';\r\nimport {DataStorageService} from '../../shared/data-storage.service';\r\nimport * as fromAppReducers from '../../shared/store/app.reducers';\r\nimport * as TablesActions from '../../shared/store/table/tables.actions';\r\nimport * as TaskActions from \"../../shared/store/task/tasks.actions\";\r\nimport {FilterService} from '../../shared/filter/filter.service';\r\n\r\n@Component({\r\n  selector: 'app-row',\r\n  templateUrl: './row.component.html',\r\n  styleUrls: ['./row.component.css']\r\n})\r\nexport class RowComponent implements OnInit {\r\n  @Input() row: RowContentModel;\r\n  @Input() header: TableDefinitionModel;\r\n  rowForm: FormGroup;\r\n  filter: Observable<string>;\r\n  rowFilterState = true;\r\n  extendedFilterContent: Observable<ExtendedFilterModel>;\r\n  extendedTableView: Observable<boolean>;\r\n\r\n\r\n  constructor(private qcs: QuestionControlService,\r\n              private store: Store<fromAppReducers.AppState>,\r\n              private dss: DataStorageService,\r\n              private filterService: FilterService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this.filter = this.store.select('tables', 'tableFilter');\r\n    this.extendedTableView = this.store.select('tables', 'extendedTableView');\r\n    this.filter.subscribe(filter => {\r\n      if (filter !== '') {\r\n        this.rowFilterState = this.filterService.runFilterTable(this.row, filter);\r\n      } else {\r\n        this.rowFilterState = true;\r\n      }\r\n    });\r\n    this.extendedFilterContent = this.store.select('tables', 'extendedFilterContent');\r\n  }\r\n\r\n\r\n  private initForm() {\r\n    this.rowForm =\r\n      new FormGroup({\r\n        'id': new FormControl(this.row.id),\r\n        'name': new FormControl(this.row.name),\r\n        'createdBy': new FormControl(this.row.createdBy),\r\n        'createdOn': new FormControl(this.row.createdOn),\r\n        'lastModifiedBy': new FormControl(this.row.lastModifiedBy),\r\n        'lastModifiedOn': new FormControl(this.row.lastModifiedOn),\r\n        'columnValueDtos': new FormArray([])\r\n      });\r\n\r\n    this.row.columnValueDtos.forEach((cell) => {\r\n      (<FormArray>this.rowForm.get('columnValueDtos')).push(\r\n        this.qcs.toFormGroup([new Question({key: Object.keys(cell), value: RowComponent.getMappedValue(cell)})])\r\n      );\r\n    });\r\n  }\r\n\r\n  onEditForm() {\r\n    this.store.dispatch(new TablesActions.SetNewRowModeAction(false));\r\n    this.store.dispatch(new TablesActions.SetEditRowMode(true));\r\n    this.store.dispatch(new TaskActions.ResetTaskStore());\r\n    this.store.dispatch(new TablesActions.SetEditedRow(this.row));\r\n  }\r\n\r\n  static getMappedValue(object): string {\r\n    return object[Object.keys(object)[0]].value.toString();\r\n  }\r\n}\r\n","export class QuestionBase<T> {\r\n  value: T;\r\n  key: string;\r\n  label: string;\r\n  required: boolean;\r\n  order: number;\r\n  controlType: string;\r\n\r\n  constructor(options: {\r\n    value?: T,\r\n    key?: string,\r\n    label?: string,\r\n    required?: boolean,\r\n    order?: number,\r\n    controlType?: string\r\n  } = {}) {\r\n    this.value = options.value;\r\n    this.key = options.key || '';\r\n    this.label = options.label || '';\r\n    this.required = !!options.required;\r\n    this.order = options.order === undefined ? 1 : options.order;\r\n    this.controlType = options.controlType || '';\r\n  }\r\n}\r\n\r\nexport class Question extends QuestionBase<string> {\r\n  controlType = 'textbox';\r\n  type: string;\r\n\r\n  constructor(options: {} = {}) {\r\n    super(options);\r\n    this.type = options['type'] || '';\r\n  }\r\n}\r\n","module.exports = \"td {\\r\\n  min-width: 200px;\\r\\n  width: 200px;\\r\\n  border: 1px solid #083E46;\\r\\n}\\r\\n\\r\\ntd.description {\\r\\n  min-width: 400px;\\r\\n  width: 400px;\\r\\n}\\r\\n\\r\\ntr {\\r\\n  border: 1px solid #083E46;\\r\\n}\\r\\n\\r\\n.form-control {\\r\\n  background-color: rgba(200,200,200,0.05);\\r\\n  border: none;\\r\\n  color: gray !important;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"d-flex justify-content-center\\\">\\r\\n  <tr *ngIf=\\\"(header| async) && !(extendedFilterMode |async)\\\">\\r\\n    <td *ngFor=\\\"let column of (header| async)[0]?.columnDetailDefinitionDtoList; let i = index\\\"\\r\\n        [ngClass]=\\\"column.type== 'DE' ? 'description' : '' \\\"\\r\\n        style=\\\"border-top: 1px solid #083E46\\\">\\r\\n      <div class=\\\"d-flex justify-content-between\\\">\\r\\n        <span class=\\\"text-info\\\">{{column.name }}</span>\\r\\n        <button class=\\\"btn btn-outline-info\\\" (click)=\\\"sort({name:'column', index: i, dataType: column.type, asc: !sortContent.asc})\\\">\\r\\n          <i class=\\\"text-info fas fa-arrows-alt-v\\\"></i>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n    </td>\\r\\n    <div *ngIf=\\\"extendedTableView | async\\\">\\r\\n      <td>\\r\\n        <div class=\\\"d-flex justify-content-between\\\">\\r\\n          <span class=\\\"text-info\\\">ID</span>\\r\\n          <button class=\\\"btn btn-outline-info\\\"\\r\\n                  (click)=\\\"sort({name:'id', index: 0, dataType: 'IN', asc: !sortContent.asc })\\\">\\r\\n            <i class=\\\"text-info fas fa-arrows-alt-v\\\"></i>\\r\\n          </button>\\r\\n        </div>\\r\\n      </td>\\r\\n      <td hidden>\\r\\n        <div class=\\\"d-flex justify-content-between\\\"></div>\\r\\n        <span class=\\\"text-info\\\">NAME</span>\\r\\n        <button class=\\\"btn btn-outline-info\\\" (click)=\\\"sort({name:'name', index: 0, dataType: 'ST', asc: !sortContent.asc})\\\">\\r\\n          <i class=\\\"text-info fas fa-arrows-alt-v\\\"></i>\\r\\n        </button>\\r\\n      </td>\\r\\n      <td>\\r\\n        <div class=\\\"d-flex justify-content-between\\\">\\r\\n          <span class=\\\"text-info\\\">Created by</span>\\r\\n          <button class=\\\"btn btn-outline-info\\\" (click)=\\\"sort({name:'createdBy', index: 0,  dataType: 'ST', asc: !sortContent.asc})\\\">\\r\\n            <i class=\\\"text-info fas fa-arrows-alt-v\\\"></i>\\r\\n          </button>\\r\\n        </div>\\r\\n      </td>\\r\\n      <td>\\r\\n        <div class=\\\"d-flex justify-content-between\\\">\\r\\n          <span class=\\\"text-info\\\">Created on</span>\\r\\n          <button class=\\\"btn btn-outline-info\\\" (click)=\\\"sort({name:'createdOn', index: 0,  dataType: 'DT', asc: !sortContent.asc})\\\">\\r\\n            <i class=\\\"text-info fas fa-arrows-alt-v\\\"></i>\\r\\n          </button>\\r\\n        </div>\\r\\n      </td>\\r\\n      <td>\\r\\n        <div class=\\\"d-flex justify-content-between\\\">\\r\\n          <span class=\\\"text-info\\\">Last Modified By</span>\\r\\n          <button class=\\\"btn btn-outline-info\\\" (click)=\\\"sort({name:'lastModifiedBy', index: 0,  dataType: 'ST', asc: !sortContent.asc})\\\">\\r\\n            <i class=\\\"text-info fas fa-arrows-alt-v\\\"></i>\\r\\n          </button>\\r\\n        </div>\\r\\n      </td>\\r\\n      <td>\\r\\n        <div class=\\\"d-flex justify-content-between\\\">\\r\\n          <span class=\\\"text-info\\\">Last Modified On</span>\\r\\n          <button class=\\\"btn btn-outline-info\\\" (click)=\\\"sort({name:'lastModifiedOn', index: 0,  dataType: 'DT', asc: !sortContent.asc})\\\">\\r\\n            <i class=\\\"text-info fas fa-arrows-alt-v\\\"></i>\\r\\n          </button>\\r\\n        </div>\\r\\n      </td>\\r\\n      <td>\\r\\n        <div class=\\\"d-flex justify-content-between\\\">\\r\\n          <span class=\\\"text-info\\\">Tasks</span>\\r\\n          <button class=\\\"btn btn-outline-info\\\" (click)=\\\"sort({name:'taskDtos', index: 0,  dataType: 'IN', asc: !sortContent.asc})\\\">\\r\\n            <i class=\\\"text-info fas fa-arrows-alt-v\\\"></i>\\r\\n          </button>\\r\\n        </div>\\r\\n      </td>\\r\\n    </div>\\r\\n  </tr>\\r\\n  <form *ngIf=\\\"extendedFilterMode |async\\\" [formGroup]=\\\"filterForm\\\">\\r\\n    <tr>\\r\\n    <span formArrayName=\\\"columnValueDtos\\\">\\r\\n      <td *ngFor=\\\"let column of (header| async)[0]?.columnDetailDefinitionDtoList; let i = index\\\" formGroupName=\\\"{{i}}\\\"\\r\\n          [ngClass]=\\\"column.type== 'DE' ? 'description' : '' \\\"\\r\\n      >\\r\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"{{ column.name }}\\\" formControlName=\\\"value\\\"\\r\\n               (keyup)=\\\"onRunExtendedFilter()\\\">\\r\\n      </td>\\r\\n    </span>\\r\\n      <td><input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"ID\\\" formControlName=\\\"id\\\"\\r\\n                 (keyup)=\\\"onRunExtendedFilter()\\\"></td>\\r\\n      <td hidden><input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"NAME\\\" formControlName=\\\"name\\\"\\r\\n                        (keyup)=\\\"onRunExtendedFilter()\\\"></td>\\r\\n      <td><input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Created by\\\" formControlName=\\\"createdBy\\\"\\r\\n                 (keyup)=\\\"onRunExtendedFilter()\\\"></td>\\r\\n      <td><input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Created on\\\" formControlName=\\\"createdOn\\\"\\r\\n                 (keyup)=\\\"onRunExtendedFilter()\\\"></td>\\r\\n      <td><input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Last Modified By\\\" formControlName=\\\"lastModifiedBy\\\"\\r\\n                 (keyup)=\\\"onRunExtendedFilter()\\\"></td>\\r\\n      <td><input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Last Modified On\\\" formControlName=\\\"lastModifiedOn\\\"\\r\\n                 (keyup)=\\\"onRunExtendedFilter()\\\"></td>\\r\\n      <td><input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Tasks\\\" formControlName=\\\"taskDtos\\\"\\r\\n                 (keyup)=\\\"onRunExtendedFilter()\\\"></td>\\r\\n    </tr>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ExtendedFilterModel, TableDefinitionModel} from '../../shared/table.model';\r\nimport {Store} from '@ngrx/store';\r\nimport * as fromAppReducers from '../../shared/store/app.reducers';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport * as TablesActions from '../../shared/store/table/tables.actions';\r\nimport {FormArray, FormControl, FormGroup} from '@angular/forms';\r\nimport {SortModel} from '../../shared/sort/sort.model';\r\n\r\n@Component({\r\n  selector: 'app-table-header',\r\n  templateUrl: './table-header.component.html',\r\n  styleUrls: ['./table-header.component.css']\r\n})\r\nexport class TableHeaderComponent implements OnInit {\r\n  header: Observable<TableDefinitionModel>;\r\n  editRowMode: Observable<boolean>;\r\n  extendedFilterMode: Observable<boolean>;\r\n  filterForm: FormGroup;\r\n  extendedTableView: Observable<boolean>;\r\n  sortContent: SortModel;\r\n\r\n  constructor(private contentStore: Store<fromAppReducers.AppState>) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.contentStore.select('tables', 'sortContent').subscribe((sortContent: SortModel) => {\r\n      this.sortContent = sortContent;\r\n    });\r\n    this.extendedTableView = this.contentStore.select('tables', 'extendedTableView');\r\n    this.header = this.contentStore.select('tables', 'tableDefinition');\r\n    this.editRowMode = this.contentStore.select('tables', 'editRowMode');\r\n    this.extendedFilterMode = this.contentStore.select('tables', 'extendedFilterMode');\r\n    this.extendedFilterMode.subscribe((mode) => {\r\n        if (mode) {\r\n          this.header.forEach((header) => {\r\n            if (header) {\r\n              this.setForm(header);\r\n            }\r\n          });\r\n        } else {\r\n          this.filterForm = null;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setForm(header: TableDefinitionModel) {\r\n    this.filterForm = new FormGroup({\r\n      'id': new FormControl(),\r\n      'name': new FormControl(),\r\n      'createdBy': new FormControl(),\r\n      'createdOn': new FormControl(),\r\n      'lastModifiedBy': new FormControl(),\r\n      'lastModifiedOn': new FormControl(),\r\n      'columnValueDtos': new FormArray([]),\r\n      'taskDtos': new FormControl()\r\n    });\r\n\r\n    header[0].columnDetailDefinitionDtoList.forEach(() => { // (cell, i) => {\r\n      (<FormArray>this.filterForm.get('columnValueDtos')).push(new FormGroup({\r\n        'value': new FormControl()\r\n      }));\r\n    });\r\n  }\r\n\r\n  // onNewRow() { // TODO remove?\r\n  //   this.contentStore.dispatch(new TablesActions.SetEditRowMode(true));\r\n  // }\r\n\r\n  getFormValues(): ExtendedFilterModel {\r\n    return this.filterForm['value'];\r\n  }\r\n\r\n  onRunExtendedFilter() {\r\n    this.contentStore.dispatch(new TablesActions.SetExtendedFilter(this.getFormValues()));\r\n  }\r\n\r\n  sort(payload: SortModel) {\r\n    this.contentStore.dispatch(new TablesActions.SetSortContent(payload));\r\n  }\r\n}\r\n","module.exports = \".header-fixed {\\r\\n  width: 100%\\r\\n}\\r\\n\\r\\n.header-fixed > thead,\\r\\n.header-fixed > tbody,\\r\\n.header-fixed > thead > tr,\\r\\n.header-fixed > tbody > tr,\\r\\n.header-fixed > thead > tr > th,\\r\\n.header-fixed > tbody > tr > td {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.header-fixed > tbody > tr:after,\\r\\n.header-fixed > thead > tr:after {\\r\\n  content: ' ';\\r\\n  display: block;\\r\\n  visibility: hidden;\\r\\n  clear: both;\\r\\n}\\r\\n\\r\\n.header-fixed > tbody {\\r\\n  overflow: hidden;\\r\\n  overflow-y: auto;\\r\\n  height: 75vh;\\r\\n}\\r\\n\\r\\n.header-fixed > tbody > tr > td,\\r\\n.header-fixed > thead > tr > th {\\r\\n  width: 20%;\\r\\n  float: left;\\r\\n}\\r\\n\\r\\n/* width */\\r\\n\\r\\n::-webkit-scrollbar {\\r\\n  width: 20px;\\r\\n}\\r\\n\\r\\n/* Track */\\r\\n\\r\\n::-webkit-scrollbar-track {\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\n/* Handle */\\r\\n\\r\\n::-webkit-scrollbar-thumb {\\r\\n  background: grey;\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\n/* Handle on hover */\\r\\n\\r\\n::-webkit-scrollbar-thumb:hover {\\r\\n  background: darkgrey;\\r\\n}\\r\\n\\r\\ntbody {\\r\\n  max-height: 700px;\\r\\n  height: auto;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\" style=\\\"margin: 0 10px;padding: 0;\\\">\\r\\n  <div [ngClass]=\\\"(tableState | async).editRowMode ? ((taskDetailsMode | async) ? 'col-12 col-md-6 col-lg-4' : 'col-12 col-md-6 col-lg-4') : 'd-none'\\\"\\r\\n       style=\\\"margin: 41px 0\\\">\\r\\n    <app-row-details *ngIf=\\\"(tableState | async).editRowMode\\\"></app-row-details>\\r\\n  </div>\\r\\n  <div [ngClass]=\\\"(taskDetailsMode | async) ? 'col-12 col-md-6 col-lg-4' : 'd-none'\\\" style=\\\"margin: 41px 0\\\">\\r\\n    <app-task></app-task>\\r\\n  </div>\\r\\n  <div [ngClass]=\\\"(tableState | async).editRowMode ?\\r\\n                        ((taskDetailsMode | async) ? 'col-lg-4' : 'col-md-6 col-lg-8')\\r\\n                        : ('col-12')\\\" style=\\\"padding: 0\\\"\\r\\n  >\\r\\n\\r\\n\\r\\n    <div class=\\\"panel\\\">\\r\\n      {{showSpinner | json}}\\r\\n      <app-menu *ngIf=\\\"(tableState | async).tablesDetails.length != 0\\\"\\r\\n                [tablesDetails]=\\\"(tableState | async).tablesDetails\\\"\\r\\n                (chosenNameChanged)=\\\"setTable($event)\\\"></app-menu>\\r\\n      <div class=\\\"panel-body\\\" style=\\\"padding: 0\\\">\\r\\n\\r\\n        <div *ngIf=\\\"tableChosen && !showSpinner\\\">\\r\\n          <div class=\\\"table-responsive\\\" style=\\\"border-radius: 10px\\\">\\r\\n            <table\\r\\n              class=\\\"table table-hover header-fixed table-striped\\\"\\r\\n              style=\\\"margin-bottom: 0\\\"\\r\\n            >\\r\\n              <thead>\\r\\n                <app-table-header></app-table-header>\\r\\n              </thead>\\r\\n              <tbody style=\\\"max-height: 700px; height: auto; background-color: transparent\\\">\\r\\n                <app-row\\r\\n                  *ngFor=\\\"let row of ((tableState | async).tableContent)  | extendedFilter: extendedFilterContent : filterSelect | orderBy : sortContentValue\\\"\\r\\n                  [row]=\\\"row\\\"\\r\\n                  [header]=\\\"(tableState|async).tableDefinition\\\">\\r\\n                </app-row>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n        <app-spinner *ngIf=\\\"tableChosen && showSpinner\\\"></app-spinner>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Store} from '@ngrx/store';\r\nimport {ExtendedFilterModel, TablesDetails} from '../shared/table.model';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {DataStorageService} from '../shared/data-storage.service';\r\nimport * as fromAppReducers from '../shared/store/app.reducers';\r\nimport * as fromTableReducers from '../shared/store/table/tables.reducers';\r\nimport * as TablesActions from '../shared/store/table/tables.actions';\r\nimport * as UsersAction from '../shared/store/user/users.actions';\r\nimport {SortModel} from '../shared/sort/sort.model';\r\nimport * as TaskActions from \"../shared/store/task/tasks.actions\";\r\n\r\n@Component({\r\n  selector: 'app-tables',\r\n  templateUrl: './tables.component.html',\r\n  styleUrls: ['./tables.component.css']\r\n})\r\nexport class TablesComponent implements OnInit, OnDestroy {\r\n  tableState: Observable<fromTableReducers.TableState>;\r\n  tableChosen = false;\r\n  taskDetailsMode: Observable<boolean>;\r\n  extendedFilterContent: ExtendedFilterModel;\r\n  filterSelect: boolean;\r\n  sortContent: Observable<SortModel>;\r\n  sortContentValue: SortModel;\r\n\r\n  showSpinner = true;\r\n\r\n\r\n  constructor(private contentStore: Store<fromAppReducers.AppState>,\r\n              private dss: DataStorageService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dss.getTablesDetails();\r\n    this.tableState = this.contentStore.select('tables');\r\n    this.tableState.subscribe(() => {\r\n      this.showSpinner = false;\r\n    });\r\n    this.taskDetailsMode = this.contentStore.select('tasks', 'taskDetailsMode');\r\n    this.contentStore.select('tables', 'extendedFilterContent').subscribe((extendedFilterContent: ExtendedFilterModel) => {\r\n      this.extendedFilterContent = extendedFilterContent;\r\n    });\r\n    this.contentStore.select('tables', 'filterSelect').subscribe((filterSelect: boolean) => {\r\n      this.filterSelect = filterSelect;\r\n    });\r\n    this.sortContent = this.contentStore.select('tables', 'sortContent');\r\n    this.sortContent.subscribe((sortContent: SortModel) => {\r\n      this.sortContentValue = sortContent;\r\n    });\r\n  }\r\n\r\n  setTable(tablesDetails: TablesDetails) {\r\n    this.showSpinner = true;\r\n    this.contentStore.dispatch(new TablesActions.SwitchTableReset());\r\n    this.contentStore.dispatch(new UsersAction.SwitchTableReset());\r\n    this.contentStore.dispatch(new TaskActions.ResetTaskStore());\r\n    this.dss.getTableHeaderBy(tablesDetails.id);\r\n    this.dss.getTableRowsBy(tablesDetails.id);\r\n    this.tableChosen = true;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.contentStore.dispatch(new TaskActions.ResetTaskStore());\r\n    this.contentStore.dispatch(new TablesActions.SwitchTableReset());\r\n  }\r\n}\r\n","module.exports = \".form-control {\\r\\n  background-color: rgba(200,200,200,0.05);\\r\\n  border: none;\\r\\n  color: gray !important;\\r\\n}\\r\\n\\r\\nli, .list-group-item {\\r\\n  border: 1px solid #32383e;\\r\\n  background-color: rgba(200, 200, 200, 0.05);\\r\\n  color: gray !important;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"(showedTask | async)\\\">\\r\\n  <ul class=\\\"list-group\\\">\\r\\n    <li class=\\\"list-group-item text-white text-center\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">\\r\\n      <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onHideTaskDetails()\\\">Hide Details</button>\\r\\n    </li>\\r\\n    <li class=\\\"list-group-item\\\">\\r\\n      <div class=\\\"list-group-item d-flex justify-content-between\\\">\\r\\n        <span class=\\\"text-info\\\">ID: </span>\\r\\n        <span>{{(showedTask | async)?.id}}</span>\\r\\n      </div>\\r\\n    </li>\\r\\n    <li class=\\\"list-group-item\\\">\\r\\n      <div class=\\\"list-group-item d-flex justify-content-between\\\">\\r\\n        <span class=\\\"text-info\\\">Name:</span>\\r\\n        <span>{{ (showedTask | async)?.name}}</span>\\r\\n      </div>\\r\\n    </li>\\r\\n    <li class=\\\"list-group-item\\\">\\r\\n      <div class=\\\"list-group-item d-flex justify-content-between\\\">\\r\\n        <span class=\\\"text-info\\\">Description:</span>\\r\\n        <span>{{ (showedTask | async)?.description }}</span>\\r\\n      </div>\\r\\n    </li>\\r\\n    <li class=\\\"list-group-item\\\">\\r\\n      <div class=\\\"list-group-item d-flex justify-content-between\\\">\\r\\n        <span class=\\\"text-info\\\">Status:</span>\\r\\n        <span>{{(showedTask | async)?.status}}</span>\\r\\n      </div>\\r\\n    </li>\\r\\n    <li class=\\\"list-group-item text-white text-center\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">\\r\\n      <form class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-group d-flex justify-content-between align-items-center\\\" style=\\\"margin-top: 5px\\\">\\r\\n          <div class=\\\"input-group\\\">\\r\\n            <select #userContol class=\\\"form-control\\\">\\r\\n              <option>{{(tableUsers| async).length != 0 ? 'Assign user' : 'No available users to assign'}}</option>\\r\\n              <option *ngFor=\\\"let tableUser of (tableUsers| async)\\\"> {{ tableUser }}</option>\\r\\n            </select>\\r\\n            <div class=\\\"input-group-append\\\" *ngIf=\\\"(tableUsers| async).length != 0\\\">\\r\\n              <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onAssignUserToTask(userContol.value)\\\">+</button>\\r\\n              <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onRemoveUserFromTask(userContol.value)\\\">-</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </li>\\r\\n    <li class=\\\"list-group-item text-white text-center\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\"><p\\r\\n      style=\\\"margin-bottom: 3px\\\">{{ (showedTask | async)?.userNames.length <= 0 ? 'No assigned users' : 'Assigned\\r\\n      Users:'}}</p></li>\\r\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\" let username of (showedTask | async)?.userNames\\\">\\r\\n      <span class=\\\"text-info\\\">{{username}}</span>\\r\\n    </li>\\r\\n    <li class=\\\"list-group-item text-white text-center\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">\\r\\n      {{ (showedTask | async)?.taskDtos.length <= 0 ? 'No tasks' : 'Assigned Tasks:'}}\\r\\n    </li>\\r\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let taskDto of (showedTask | async)?.taskDtos\\\">\\r\\n      <!--<app-task></app-task>-->\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"(showedTask | async) == null\\\">\\r\\n  <form>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"text-info\\\">Name:</label>\\r\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" #nameEl>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"text-info\\\">Description:</label>\\r\\n      <textarea rows=\\\"20\\\" class=\\\"form-control\\\" #descriptionEl></textarea>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"text-info\\\">Status:</label>\\r\\n      <select class=\\\"form-control\\\" #statusEl>\\r\\n        <option> {{status.ASSIGNED}}</option>\\r\\n        <option> {{status.ASSIGNED}}</option>\\r\\n        <option> {{status.IN_PROGRESS}}</option>\\r\\n        <option> {{status.DONE}}</option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button class=\\\"btn btn-dark text-white\\\"\\r\\n              (click)=\\\"onSaveRowNewTask({name: nameEl.value,description: descriptionEl.value,status: statusEl.value})\\\">\\r\\n        Submit\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-dark text-white\\\" (click)=\\\"onHideTaskDetails()\\\">Abort</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {RowContentModel, Status, TableDefinitionModel, TaskModel} from '../../shared/table.model';\r\nimport {Store} from '@ngrx/store';\r\nimport * as fromAppReducers from '../../shared/store/app.reducers';\r\nimport * as TaskActions from '../../shared/store/task/tasks.actions';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {DataStorageService} from '../../shared/data-storage.service';\r\nimport {UserModel} from '../../user/user.model';\r\n\r\n@Component({\r\n  selector: 'app-task',\r\n  templateUrl: './task.component.html',\r\n  styleUrls: ['./task.component.css']\r\n})\r\nexport class TaskComponent implements OnInit {\r\n  showedTask: Observable<TaskModel>;\r\n  task: TaskModel;\r\n  // showedInnerTask: Observable<TaskModel>;\r\n  status = Status;\r\n  editedRow: Observable<RowContentModel>;\r\n  row: RowContentModel;\r\n  tableUsers: Observable<UserModel[]>;\r\n  tableDefinition: TableDefinitionModel;\r\n\r\n\r\n  constructor(private store: Store<fromAppReducers.AppState>,\r\n              private dss: DataStorageService) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.showedTask = this.store.select('tasks', 'showedTask');\r\n    this.showedTask.forEach((task) => {\r\n      this.task = task;\r\n    });\r\n    this.editedRow = this.store.select('tables', 'editedRow');\r\n    this.editedRow.forEach((row: RowContentModel) => {\r\n      this.row = row;\r\n    });\r\n    this.store.select('tables', 'tableDefinition').subscribe((tableDefinition: TableDefinitionModel) => {\r\n      if (tableDefinition) { // TODO: ???\r\n        this.tableDefinition = tableDefinition[0];\r\n        this.dss.setTableUsers(this.tableDefinition.id);\r\n      }\r\n    });\r\n    this.tableUsers = this.store.select('tables', 'tableUsers');\r\n  }\r\n\r\n  onHideTaskDetails() {\r\n    this.store.dispatch(new TaskActions.SetTaskDetailsModeAction(false));\r\n    this.store.dispatch(new TaskActions.SetShowedTaskAction(null));\r\n  }\r\n\r\n  onSaveRowNewTask(newTaskDetails: { name: string, description: string, status: Status }) {\r\n    const task: TaskModel = {\r\n      id: null,\r\n      tableId: this.tableDefinition.id,\r\n      name: newTaskDetails.name,\r\n      description: newTaskDetails.description,\r\n      status: newTaskDetails.status,\r\n      userNames: [],\r\n      taskDtos: []\r\n    };\r\n    this.dss.saveNewTask(this.tableDefinition.id, task, this.row.id);\r\n  }\r\n\r\n  onAssignUserToTask(username: string ) {\r\n    console.log('onAssignUserToTask username >' + username + '<');\r\n    this.dss.onAssignUserToTask(this.tableDefinition.id, this.row.id, this.task.id , username);\r\n  }\r\n\r\n  onRemoveUserFromTask(username: string) {\r\n    this.dss.onRemoveUserFromTask(this.tableDefinition.id, this.row.id, this.task.id , username);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title style=\\\"text-align: center\\\">{{passedData?.message || 'Are you sure?'}}</h1>\\r\\n<mat-dialog-actions>\\r\\n  <button mat-button [mat-dialog-close]=\\\"true\\\">Yes</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"false\\\">No</button>\\r\\n</mat-dialog-actions>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.css']\r\n})\r\nexport class DialogComponent implements OnInit {\r\n  constructor(@Inject(MAT_DIALOG_DATA) public passedData: any) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div fxLayoutAlign=\\\"center center\\\">\\r\\n  <mat-form-field fxFlex=\\\"100%\\\">\\r\\n    <input matInput type=\\\"text\\\" (keyup)=\\\"doFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n  <ng-container matColumnDef=\\\"date\\\" >\\r\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\">{{element.date | date}}</mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"name\\\">\\r\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\">{{element.name}}</mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <ng-container matColumnDef=\\\"number\\\">\\r\\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Number</mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let element\\\">{{element.number | number}}</mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\r\\n</mat-table>\\r\\n\\r\\n<mat-paginator #paginator [pageSize]=\\\"1\\\" [pageSizeOptions]=\\\"[5,10,20]\\\">\\r\\n</mat-paginator>\\r\\n\"","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.css']\r\n})\r\nexport class TableComponent implements OnInit, AfterViewInit {\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  displayedColumns = ['date', 'name', 'number'];\r\n  dataSource = new MatTableDataSource<Element>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.data = [\r\n      {date: new Date(), name: '1', number: 5},\r\n      {date: new Date(), name: '2', number: 2},\r\n      {date: new Date(), name: '4', number: 3},\r\n      {date: new Date(), name: '3', number: 4},\r\n      {date: new Date(), name: '5', number: 1},\r\n      {date: new Date(), name: '1', number: 5},\r\n      {date: new Date(), name: '2', number: 2},\r\n      {date: new Date(), name: '4', number: 3},\r\n      {date: new Date(), name: '3', number: 4},\r\n      {date: new Date(), name: '5', number: 1},\r\n      {date: new Date(), name: '1', number: 5},\r\n      {date: new Date(), name: '2', number: 2},\r\n      {date: new Date(), name: '4', number: 3},\r\n      {date: new Date(), name: '3', number: 4},\r\n      {date: new Date(), name: '5', number: 1},\r\n      {date: new Date(), name: '1', number: 5},\r\n      {date: new Date(), name: '2', number: 2},\r\n      {date: new Date(), name: '4', number: 3},\r\n      {date: new Date(), name: '3', number: 4},\r\n      {date: new Date(), name: '5', number: 1}\r\n    ]\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  doFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n\r\nexport interface Element {\r\n  date: Date;\r\n  name: string;\r\n  number: number\r\n}\r\n","module.exports = \"/*mat-form-field {*/\\r\\n  /*width: 400px;*/\\r\\n  /*}*/\\r\\n  mat-sidenav-container, mat-sidenav-container, mat-sidenav {\\r\\n  height: 100%;\\r\\n}\\r\\n  mat-sidenav {\\r\\n  width: 250px;\\r\\n}\\r\\n  a {\\r\\n  text-decoration: none;\\r\\n  color: white;\\r\\n}\\r\\n  a:hover,\\r\\na:active {\\r\\n  color: lightgray;\\r\\n}\\r\\n  .navigation-items {\\r\\n  list-style: none;\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n}\\r\\n  .nav-caption {\\r\\n  display: inline-block;\\r\\n  padding-left: 6px;\\r\\n}\\r\\n  section {\\r\\n  padding: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div [ngClass]=\\\"theme ? 'my-themed':'candy-themed'\\\">\\r\\n  <mat-sidenav-container>\\r\\n    <mat-sidenav #sidenav role=\\\"navigation\\\">\\r\\n      <mat-nav-list>\\r\\n        <a mat-list-item (click)=\\\"sidenav.close()\\\">\\r\\n          <mat-icon>face</mat-icon>\\r\\n          <span class=\\\"nav-caption\\\">Sign up</span></a>\\r\\n        <a mat-list-item routerLink=\\\"\\\" (click)=\\\"sidenav.close()\\\">\\r\\n          <mat-icon>person pin</mat-icon>\\r\\n          <span class=\\\"nav-caption\\\">Login</span></a>\\r\\n        <a mat-list-item routerLink=\\\"\\\" (click)=\\\"sidenav.close()\\\">\\r\\n          <mat-icon>adb</mat-icon>\\r\\n          <span class=\\\"nav-caption\\\">Training</span></a>\\r\\n      </mat-nav-list>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav-content>\\r\\n      <mat-toolbar color=\\\"primary\\\">\\r\\n        <div>\\r\\n          <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n            <mat-icon>menu</mat-icon>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div><a routerLink=\\\"/\\\">MY JIRA</a></div>\\r\\n        <div fxFlex\\r\\n             fxLayout\\r\\n             fxLayoutAlign=\\\"flex-end\\\" fxHide.xs>\\r\\n          <ul fxLayout fxLayoutGap=\\\"10px\\\" class=\\\"navigation-items\\\">\\r\\n            <li (click)=\\\"toggleTheme()\\\">Change color</li>\\r\\n            <li><a routerLink=\\\"\\\">SignUp</a></li>\\r\\n            <li><a routerLink=\\\"\\\">Login</a></li>\\r\\n            <li><a routerLink=\\\"\\\">Training</a></li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </mat-toolbar>\\r\\n      <main>\\r\\n        <section class=\\\"new-card\\\"\\r\\n                 fxLayout\\r\\n                 fxLayoutAlign=\\\"center\\\">\\r\\n          <mat-card fxFlex.xs=\\\"100%\\\" fxFlex=\\\"50%\\\">\\r\\n            <mat-card-title fxLayoutAlign=\\\"center\\\">Main</mat-card-title>\\r\\n            <mat-card-content fxLayoutAlign=\\\"center\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-select placeholder=\\\"Abc\\\">\\r\\n                  <mat-option value=\\\"a\\\">A</mat-option>\\r\\n                  <mat-option value=\\\"c\\\">C</mat-option>\\r\\n                  <mat-option value=\\\"a\\\">B</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n            </mat-card-content>\\r\\n            <mat-card-actions fxLayoutAlign=\\\"center\\\">\\r\\n              <button type=\\\"submit\\\" mat-button (click)=\\\"sidenav.toggle()\\\" color=\\\"accent\\\">Toggle SideNav</button>\\r\\n            </mat-card-actions>\\r\\n          </mat-card>\\r\\n        </section>\\r\\n        <section fxLayout=\\\"column\\\" fxLayoutGap=\\\"50px\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n          <div fxLayout fxLayoutGap=\\\"50px\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <p>Determinate: {{progress}}%</p>\\r\\n            <mat-progress-spinner mode=\\\"determinate\\\" [value]=\\\"progress\\\"></mat-progress-spinner>\\r\\n            <mat-form-field>\\r\\n              <input #infoMessage matInput>\\r\\n            </mat-form-field>\\r\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"onRerunTimer(infoMessage.value)\\\">Restart</button>\\r\\n          </div>\\r\\n          <div fxLayout fxLayoutGap=\\\"50px\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <p>Indeterminate:</p>\\r\\n            <mat-progress-spinner mode=\\\"indeterminate\\\"></mat-progress-spinner>\\r\\n          </div>\\r\\n        </section>\\r\\n\\r\\n        <section class=\\\"form\\\"\\r\\n                 fxLayout\\r\\n                 fxLayoutAlign=\\\"center\\\">\\r\\n          <mat-card fxFlex.xs=\\\"100%\\\" fxFlex=\\\"50%\\\">\\r\\n            <mat-card-content fxLayoutAlign=\\\"center\\\">\\r\\n              <mat-form-field>\\r\\n                <input matInput value=\\\"Message?\\\" placeholder=\\\"Message\\\" #message>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                <input matInput value=\\\"Close\\\" placeholder=\\\"Action\\\" #action>\\r\\n              </mat-form-field>\\r\\n            </mat-card-content>\\r\\n            <mat-card-actions fxLayoutAlign=\\\"center\\\">\\r\\n              <button mat-button (click)=\\\"showSnackBar(message.value, action.value)\\\">Show snack-bar</button>\\r\\n            </mat-card-actions>\\r\\n          </mat-card>\\r\\n        </section>\\r\\n\\r\\n        <section class=\\\"form\\\"\\r\\n                 fxLayout\\r\\n                 fxLayoutAlign=\\\"center\\\">\\r\\n          <mat-card fxFlex.xs=\\\"100%\\\" fxFlex=\\\"50%\\\">\\r\\n            <mat-card-title fxLayoutAlign=\\\"center\\\">Form</mat-card-title>\\r\\n            <mat-card-content fxLayoutAlign=\\\"center\\\">\\r\\n              <form fxLayout=\\\"column\\\"\\r\\n                    fxLayoutAlign=\\\"center center\\\"\\r\\n                    fxLayoutGap=\\\"10px\\\"\\r\\n                    #f=\\\"ngForm\\\"\\r\\n                    (submit)=\\\"onSubmit(f)\\\">\\r\\n                <mat-form-field color=\\\"accent\\\">\\r\\n                  <input\\r\\n                    type=\\\"email\\\"\\r\\n                    matInput\\r\\n                    placeholder=\\\"Your email\\\"\\r\\n                    ngModel\\r\\n                    name=\\\"email\\\"\\r\\n                    email\\r\\n                    required\\r\\n                    #mailInput=\\\"ngModel\\\"\\r\\n                  >\\r\\n                  <mat-error *ngIf=\\\"mailInput.hasError('required')\\\">Email is required</mat-error>\\r\\n                  <mat-error *ngIf=\\\"!mailInput.hasError('required')\\\">Email is invalid</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field color=\\\"accent\\\"\\r\\n                                hintLabel=\\\"Min 2 characters.\\\">\\r\\n                  <input\\r\\n                    type=\\\"password\\\"\\r\\n                    matInput\\r\\n                    placeholder=\\\"Your password\\\"\\r\\n                    ngModel\\r\\n                    name=\\\"password\\\"\\r\\n                    required\\r\\n                    minlength=\\\"2\\\"\\r\\n                    #pwInput=\\\"ngModel\\\"\\r\\n                  >\\r\\n                  <mat-hint align=\\\"end\\\">{{pwInput.value?.length}} / 2</mat-hint>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field>\\r\\n                  <input matInput\\r\\n                         [matDatepicker]=\\\"picker\\\"\\r\\n                         placeholder=\\\"Your Birthdate\\\"\\r\\n                         [max]=\\\"maxDate\\\"\\r\\n                         ngModel\\r\\n                         required\\r\\n                         name=\\\"bday\\\">\\r\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                  <mat-datepicker #picker></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n                <mat-checkbox\\r\\n                  ngModel\\r\\n                  name=\\\"terms\\\"\\r\\n                  required\\r\\n                  labelPosition=\\\"before\\\"\\r\\n                  color=\\\"primary\\\"\\r\\n                >Terms Agreement\\r\\n                </mat-checkbox>\\r\\n                <button mat-icon-button color=\\\"accent\\\">\\r\\n                  <mat-icon>home</mat-icon>\\r\\n                </button>\\r\\n                <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"f.invalid\\\">\\r\\n                  <span>Hit</span>\\r\\n                </button>\\r\\n              </form>\\r\\n            </mat-card-content>\\r\\n            <mat-card-actions fxLayoutAlign=\\\"center\\\">\\r\\n            </mat-card-actions>\\r\\n          </mat-card>\\r\\n        </section>\\r\\n\\r\\n        <section class=\\\"form\\\"\\r\\n                 fxLayout\\r\\n                 fxLayoutAlign=\\\"center\\\">\\r\\n          <mat-card fxFlex.xs=\\\"100%\\\" fxFlex=\\\"70%\\\">\\r\\n            <mat-card-title fxLayoutAlign=\\\"center\\\">Table</mat-card-title>\\r\\n            <mat-card-content fxLayoutAlign=\\\"center\\\">\\r\\n              <app-table fxFlex=\\\"100%\\\"></app-table>\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </section>\\r\\n\\r\\n      </main>\\r\\n    </mat-sidenav-content>\\r\\n  </mat-sidenav-container>\\r\\n</div>\\r\\n\\r\\n\"","import {Component, EmbeddedViewRef, OnInit, ViewChild} from '@angular/core';\r\nimport {NgForm} from \"@angular/forms\";\r\nimport {MatDialog, MatSnackBar, MatSnackBarConfig, MatSnackBarRef} from \"@angular/material\";\r\nimport {DialogComponent} from \"./dialog/dialog.component\";\r\nimport {ActionSnackBarComponent} from \"../shared/snack-bar/action-snack-bar.component\";\r\n\r\n@Component({\r\n  selector: 'app-training',\r\n  templateUrl: './training.component.html',\r\n  styleUrls: ['./training.component.css']\r\n})\r\nexport class TrainingComponent implements OnInit {\r\n  maxDate;\r\n  shouldRun = false;\r\n  openSidenav = false;\r\n  progress = 0;\r\n  timer: number;\r\n  theme: boolean;\r\n  snackBarRef: MatSnackBarRef<ActionSnackBarComponent>;\r\n\r\n  constructor(private dialog: MatDialog, public snackBar: MatSnackBar) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.maxDate = new Date();\r\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\r\n    this.shouldRun = true;\r\n    this.openSidenav = false;\r\n    this.restartTimer()\r\n  }\r\n\r\n  toggleTheme() {\r\n    this.theme = !this.theme;\r\n  }\r\n\r\n  onRerunTimer(message: string) {\r\n    const dialogRef = this.dialog.open(DialogComponent, {data: {message: message}});\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.restartTimer();\r\n      }\r\n    })\r\n  }\r\n\r\n  private restartTimer() {\r\n    clearInterval(this.timer);\r\n    this.progress = 0;\r\n    this.timer = setInterval(() => {\r\n      this.progress += 1;\r\n      if (this.progress >= 100) {\r\n        clearInterval(this.timer)\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  onSubmit(f: NgForm) {\r\n    console.log(f);\r\n  }\r\n\r\n  showSnackBar(message: string, action: string) {\r\n    this.snackBarRef = this.snackBar.openFromComponent(ActionSnackBarComponent, {\r\n      panelClass: ['styled-snack'],\r\n      data: {\r\n        message: message,\r\n        action: action\r\n      }\r\n    });\r\n    this.snackBarRef.afterDismissed().subscribe((data) => console.log(data));\r\n    this.snackBarRef.instance.ref = this.snackBarRef;\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n  background-color: rgba(0,0,0,0.05);\\r\\n}\\r\\ntd {\\r\\n  border: 1px solid #32383e;\\r\\n  padding: 30px;\\r\\n}\\r\\nli {\\r\\n  border: 1px solid #32383e;\\r\\n  background-color: rgba(200, 200, 200, 0.05);\\r\\n  color: gray !important;\\r\\n  padding: 30px;\\r\\n}\\r\\n.form-control {\\r\\n  background-color: rgba(0,0,0,0.05);\\r\\n  border: 1px solid #32383e;\\r\\n}\\r\\n.jumbotron {\\r\\n  background: none;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"(usernameState| async)\\\">\\r\\n  <div class=\\\"jumbotron bg-transparent\\\">\\r\\n    <div class=\\\"row d-flex justify-content-center\\\">\\r\\n      <div class=\\\"col-6\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-12 d-flex justify-content-center\\\">\\r\\n            <div *ngIf=\\\"!editMode && !resetPasswordMode\\\">\\r\\n              <table class=\\\"table border-secondary table-striped\\\">\\r\\n                <tbody>\\r\\n                <tr>\\r\\n                  <td><span class=\\\"text-info\\\">USERNAME:</span></td>\\r\\n                  <td><span class=\\\"text-white\\\"> {{(usernDetailsState | async)?.username}}</span></td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td><span class=\\\"text-info\\\">EMAIL:</span></td>\\r\\n                  <td><span class=\\\"text-white\\\"> {{ (usernDetailsState | async)?.email }}</span></td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td><span class=\\\"text-info\\\">FIRSTNAME:</span></td>\\r\\n                  <td><span class=\\\"text-white\\\">{{ (usernDetailsState | async)?.firstName }}</span></td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td><span class=\\\"text-info\\\">LASTNAME:</span></td>\\r\\n                  <td><span class=\\\"text-white\\\">{{ (usernDetailsState | async)?.lastName }}</span></td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td><span class=\\\"text-info\\\">ENABLED:</span></td>\\r\\n                  <td><span class=\\\"text-white\\\">{{ (usernDetailsState | async)?.enabled }}</span></td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n              </table>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"editMode\\\">\\r\\n              <form #updateDetailsForm=\\\"ngForm\\\">\\r\\n                <ul class=\\\"list-group bg-transparent\\\">\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <span class=\\\"text-info\\\">USERNAME:</span>\\r\\n                    <span class=\\\"text-white\\\"> {{(usernDetailsState | async)?.username}}</span>\\r\\n                  </li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <span class=\\\"text-info\\\">EMAIL:</span>\\r\\n                    <input class=\\\"text-white form-control\\\" ngModel=\\\"{{ (usernDetailsState | async)?.email }}\\\" name=\\\"email\\\">\\r\\n                  </li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <span class=\\\"text-info\\\">FIRSTNAME:</span>\\r\\n                    <input class=\\\"text-white form-control\\\" ngModel=\\\"{{ (usernDetailsState | async)?.firstName }}\\\" name=\\\"firstName\\\">\\r\\n                  </li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <span class=\\\"text-info\\\">LASTNAME:</span>\\r\\n                    <input class=\\\"text-white form-control\\\" ngModel=\\\"{{ (usernDetailsState | async)?.lastName }}\\\" name=\\\"lastName\\\">\\r\\n                  </li>\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <span class=\\\"text-info\\\">ENABLED:</span>\\r\\n                    <span class=\\\"text-white\\\">{{ (usernDetailsState | async)?.enabled }}</span>\\r\\n                  </li>\\r\\n                </ul>\\r\\n                <div *ngIf=\\\"editMode\\\" class=\\\"btn-group\\\" style=\\\"margin-top: 30px\\\">\\r\\n                  <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"toggleEdidMode()\\\"> Close</button>\\r\\n                  <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"updateUser(updateDetailsForm.value)\\\" *ngIf=\\\"editMode\\\"> Save</button>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"resetPasswordMode\\\">\\r\\n              <form #updatePasswordForm=\\\"ngForm\\\">\\r\\n\\r\\n                <ul class=\\\"list-group bg-transparent\\\">\\r\\n\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <span class=\\\"text-info\\\">Old password</span>\\r\\n                    <input type=\\\"password\\\" class=\\\"text-white form-control\\\" ngModel name=\\\"oldPassword\\\">\\r\\n                  </li>\\r\\n\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <span class=\\\"text-info\\\">Password</span>\\r\\n                    <input type=\\\"password\\\" class=\\\"text-white form-control\\\" ngModel name=\\\"newPassword\\\">\\r\\n                  </li>\\r\\n\\r\\n                  <li class=\\\"list-group-item\\\">\\r\\n                    <span class=\\\"text-info\\\">Confirm password</span>\\r\\n                    <input type=\\\"password\\\" class=\\\"text-white form-control\\\" ngModel name=\\\"confirmPassword\\\">\\r\\n                  </li>\\r\\n                </ul>\\r\\n                <div class=\\\"btn-group\\\" style=\\\"margin-top: 30px\\\">\\r\\n                  <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"togglePasswordResetMode()\\\"> Close</button>\\r\\n                  <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"updatePassword(updatePasswordForm.value)\\\"> Save</button>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-12 d-flex justify-content-center\\\">\\r\\n            <div class=\\\"btn-group\\\" *ngIf=\\\"!editMode && !resetPasswordMode\\\">\\r\\n              <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"toggleEdidMode()\\\"> Edit</button>\\r\\n              <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"togglePasswordResetMode()\\\">Reset Password</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Store} from '@ngrx/store';\r\nimport * as fromAppReducers from '../shared/store/app.reducers';\r\nimport {DataStorageService} from '../shared/data-storage.service';\r\nimport {UserModel} from '../user/user.model';\r\n\r\n@Component({\r\n  selector: 'app-user-info',\r\n  templateUrl: './user-info.component.html',\r\n  styleUrls: ['./user-info.component.css']\r\n})\r\nexport class UserInfoComponent implements OnInit {\r\n  usernameState: Observable<string>;\r\n  usernDetailsState: Observable<UserModel>;\r\n  userDetails: UserModel;\r\n  editMode = false;\r\n  resetPasswordMode = false;\r\n\r\n  constructor(private store: Store<fromAppReducers.AppState>,\r\n              private dss: DataStorageService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.usernameState = this.store.select('users', 'currentUser');\r\n    this.usernDetailsState = this.store.select('users', 'currentUserDetails');\r\n    this.usernDetailsState.subscribe((user: UserModel) => {\r\n      console.log('user', user);\r\n      this.userDetails = user;\r\n    });\r\n    this.usernameState.subscribe((username: string) => {\r\n      this.dss.getCurrentUser(username);\r\n    });\r\n  }\r\n\r\n  toggleEdidMode() {\r\n    this.editMode = !this.editMode;\r\n  }\r\n\r\n  togglePasswordResetMode() {\r\n    this.resetPasswordMode = !this.resetPasswordMode;\r\n  }\r\n\r\n  updateUser(formValue: { firstName, lastName, email }) {\r\n\r\n    this.dss.updateUser({\r\n      username: this.userDetails.username,\r\n      firstName: formValue.firstName,\r\n      lastName: formValue.lastName,\r\n      passowrd: '', // TODO: remove password from user details on Tickets!\r\n      email: formValue.email,\r\n      enabled: false,\r\n      roleNames: [],\r\n      taskDtos: [],\r\n    });\r\n  }\r\n\r\n  updatePassword(formValue: { oldPassword, newPassword, confirmPassword }) {\r\n    if (formValue.newPassword === formValue.confirmPassword && formValue.newPassword.length > 1) {\r\n      this.dss.updatePassword(formValue.oldPassword, formValue.newPassword, this.userDetails.username);\r\n    } else {\r\n      console.log('Passwords do not match!');\r\n    }\r\n  }\r\n}\r\n","module.exports = \"li, td {\\r\\n  border: 1px solid #32383e;\\r\\n  background-color: rgba(200, 200, 200, 0.05);\\r\\n  color: gray !important;\\r\\n}\\r\\n\\r\\n.bg-light {\\r\\n  background-color: rgba(200, 200, 200, 0.2) !important;\\r\\n}\\r\\n\\r\\nselect, input, textarea {\\r\\n  background-color: rgba(0, 0, 0, 0.05) !important;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <div *ngIf=\\\"user && !(newUserMode | async)\\\">\\r\\n      <table class=\\\"table table-bordered table-striped\\\">\\r\\n        <tbody>\\r\\n        <tr>\\r\\n          <td><span class=\\\"text-info\\\">USERNAME:</span></td>\\r\\n          <td>\\r\\n            <div class=\\\"d-flex justify-content-between\\\">\\r\\n              <span> {{ user.username }} </span>\\r\\n              <button class=\\\"btn btn-outline-secondary text-danger\\\" data-toggle=\\\"modal\\\"\\r\\n                      data-target=\\\"#deleteConfirmModal\\\"> Delete User\\r\\n              </button>\\r\\n              <button class=\\\"btn btn-outline-secondary text-secondary\\\" (click)=\\\"closeUser()\\\" >Close\\r\\n              </button>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td><span class=\\\"text-info\\\">EMAIL:</span></td>\\r\\n          <td> {{ user.email }}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td><span class=\\\"text-info\\\">FIRSTNAME:</span></td>\\r\\n          <td>{{ user.firstName }}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td><span class=\\\"text-info\\\">LASTNAME:</span></td>\\r\\n          <td>{{ user.lastName }}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td><span class=\\\"text-info\\\">ENABLED:</span></td>\\r\\n          <td>{{ user.enabled }}</td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <p class=\\\"text-info\\\">ROLES:</p>\\r\\n            <div *ngIf=\\\"editRoleMode && !(newUserMode | async)\\\">\\r\\n              <form [formGroup]=\\\"roleForm\\\" class=\\\"form-group\\\">\\r\\n                <select class=\\\"form-control border-secondary\\\" formControlName=\\\"role\\\">\\r\\n                  <option selected>- Select -</option>\\r\\n                  <option *ngFor=\\\"let role of (roles|async)\\\"> {{ role.name }}</option>\\r\\n                </select>\\r\\n                <div class=\\\"btn-group\\\" style=\\\"margin-top: 5px\\\">\\r\\n                  <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"postAddRole()\\\">+</button>\\r\\n                  <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"postRemove()\\\">-</button>\\r\\n                  <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"abortAddRole()\\\">Abort</button>\\r\\n                </div>\\r\\n              </form>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"!editRoleMode\\\">\\r\\n              <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onEditRoleMode()\\\">Edit</button>\\r\\n            </div>\\r\\n          </td>\\r\\n          <td>\\r\\n            <ul class=\\\"list-group\\\">\\r\\n              <li class=\\\"list-group-item\\\"\\r\\n                  *ngFor=\\\"let roleName of user.roleNames\\\"\\r\\n                  style=\\\"background-color: rgba(0, 0, 0, 0.05) !important\\\">\\r\\n                {{roleName}}\\r\\n              </li>\\r\\n            </ul>\\r\\n          </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">\\r\\n          <span class=\\\"text-info\\\">{{user.taskDtos.length > 0 ? 'TASKS' : 'NO TASKS'}}</span>\\r\\n        </li>\\r\\n        <li class=\\\"list-group-item list-group-item-action\\\"\\r\\n            *ngFor=\\\"let taskDto of user.taskDtos\\\" (click)=\\\"onSelectTask(taskDto)\\\"\\r\\n            [ngClass]=\\\"(userDisplayedTask|async)?.id == taskDto.id ? 'bg-light' : ''\\\"\\r\\n        > {{ taskDto.name }}\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"(newUserMode | async)\\\">\\r\\n      <form [formGroup]=\\\"newUserForm\\\" #f>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"text-info\\\">Username:</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control border-secondary\\\" formControlName=\\\"username\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"text-info\\\">Password</label>\\r\\n          <input type=\\\"password\\\" class=\\\"form-control border-secondary\\\" formControlName=\\\"password\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"text-info\\\">First name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control border-secondary\\\" formControlName=\\\"firstName\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"text-info\\\">Last name</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control border-secondary\\\" formControlName=\\\"lastName\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"text-info\\\">Email</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control border-secondary\\\" formControlName=\\\"email\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"text-info\\\">Enabled</label>\\r\\n          <select class=\\\"form-control border-secondary\\\" formControlName=\\\"enabled\\\" required>\\r\\n            <option [value]=\\\"true\\\"  [selected]=\\\"true\\\" >Yes</option>\\r\\n            <option [value]=\\\"false\\\" >No</option>\\r\\n          </select>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <button (click)=\\\"onSubmitUser()\\\" class=\\\"btn btn-outline-secondary\\\" [disabled]=\\\"!newUserForm.valid\\\">Submit</button>\\r\\n          <button (click)=\\\"onAbortSubmitUser()\\\" class=\\\"btn btn-outline-secondary\\\">Close</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-6\\\">\\r\\n    <div *ngIf=\\\"(userDisplayedTask | async)\\\">\\r\\n      <app-user-task [task]=\\\"(userDisplayedTask | async)\\\"></app-user-task>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"deleteConfirmModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\r\\n     aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">User removal</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        Whhaaaaaatt??!!\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button #closeModal type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onRemoveUser(user.username, closeModal)\\\">Confirm</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {UserModel} from '../user.model';\r\nimport {DataStorageService} from '../../shared/data-storage.service';\r\nimport {RoleModel} from '../../roles/role.model';\r\nimport {Store} from '@ngrx/store';\r\nimport * as fromAppReducers from '../../shared/store/app.reducers';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {FormArray, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport * as UsersActions from '../../shared/store/user/users.actions';\r\nimport {TaskModel} from '../../shared/table.model';\r\n\r\n@Component({\r\n  selector: 'app-user-details',\r\n  templateUrl: './user-details.component.html',\r\n  styleUrls: ['./user-details.component.css']\r\n})\r\nexport class UserDetailsComponent implements OnInit {\r\n  userState: Observable<UserModel>;\r\n  user: UserModel;\r\n  editRoleMode = false;\r\n  roles: Observable<RoleModel[]>;\r\n  roleForm: FormGroup;\r\n  newUserMode: Observable<boolean>;\r\n  newUserForm: FormGroup;\r\n  userDisplayedTask: Observable<TaskModel>;\r\n\r\n  constructor(private store: Store<fromAppReducers.AppState>,\r\n              private dss: DataStorageService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userState = this.store.select('users', 'selectedUser');\r\n    this.userState.subscribe((user: UserModel) => {\r\n      this.user = user;\r\n    });\r\n    this.userDisplayedTask = this.store.select('users', 'userDisplayedTask');\r\n    this.newUserMode = this.store.select('users', 'newUserMode');\r\n    this.roles = this.store.select('users', 'roles');\r\n    this.dss.getRoles();\r\n    this.roleForm =\r\n      new FormGroup({\r\n        'role': new FormControl('Select option')\r\n      });\r\n    this.newUserMode.subscribe(() => {\r\n      this.createForm();\r\n    });\r\n  }\r\n\r\n  postRemove() {\r\n    this.dss.removeRoleFromUser({user: this.user, rolename: <string>this.roleForm.value.role});\r\n  }\r\n\r\n  onEditRoleMode() {\r\n    this.editRoleMode = true;\r\n  }\r\n\r\n  postAddRole() {\r\n    this.dss.addRoleToUser({username: this.user.username, rolename: <string>this.roleForm.value.role})\r\n  }\r\n\r\n  abortAddRole() {\r\n    this.editRoleMode = false;\r\n  }\r\n\r\n  onAbortSubmitUser() {\r\n    this.store.dispatch(new UsersActions.SetNewUserModeAction(false));\r\n  }\r\n\r\n  createForm() {\r\n    this.newUserForm =\r\n      new FormGroup({\r\n        'username': new FormControl(null, [Validators.required]),\r\n        'firstName': new FormControl(null, [Validators.required]),\r\n        'lastName': new FormControl(null, [Validators.required]),\r\n        'password': new FormControl(null, [Validators.required]),\r\n        'email': new FormControl(null, [Validators.required]),\r\n        'enabled': new FormControl(true, [Validators.required]),\r\n        'roleNames': new FormArray([]),\r\n        'taskDtos': new FormArray([])\r\n      });\r\n  }\r\n\r\n  onRemoveUser(username: string, closeModalButton: HTMLButtonElement): boolean | void {\r\n    if (closeModalButton && this.dss.deleteUser(username)) {\r\n      closeModalButton.click();\r\n    }\r\n  }\r\n\r\n\r\n// onSubmitRole(name, description) {\r\n//   console.log(name, description);\r\n//   this.dss.saveNewRole({name: name, description: description});\r\n// }\r\n\r\n  onSubmitUser() {\r\n    this.dss.saveNewUser(this.newUserForm.value);\r\n  }\r\n\r\n  onSelectTask(taskDto: TaskModel) {\r\n    this.store.dispatch(new UsersActions.SetUserDisplayedTask(taskDto));\r\n  }\r\n\r\n  closeUser() {\r\n    this.store.dispatch(new UsersActions.SetSelectedUser(null));\r\n  }\r\n}\r\n","module.exports = \"li, td {\\r\\n  border: 1px solid #32383e;\\r\\n  background-color: rgba(200, 200, 200, 0.05);\\r\\n  color: gray !important;\\r\\n}\\r\\n\\r\\n.bg-light {\\r\\n  background-color: rgba(200, 200, 200, 0.2) !important;\\r\\n}\\r\\n\\r\\nselect, input, textarea {\\r\\n  background-color: rgba(0, 0, 0, 0.05) !important;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"task && !editTaskMode\\\">\\r\\n  <li class=\\\"list-group-item d-flex justify-content-between\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">\\r\\n    <span>Name: {{task.name}}</span>\\r\\n    <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onEditTaskMode(true)\\\">Edit</button>\\r\\n    <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onCloseTaskMode()\\\">Close</button>\\r\\n  </li>\\r\\n  <li class=\\\"list-group-item\\\"> ID: {{task.id}}</li>\\r\\n  <li class=\\\"list-group-item\\\"> Description: {{task.description}}</li>\\r\\n  <li class=\\\"list-group-item\\\"> Status: {{task.status}}</li>\\r\\n  <li class=\\\"list-group-item\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">{{task.userNames.length <= 0 ? 'No users' : 'Assigned Users:'}}</li>\\r\\n  <li *ngFor=\\\" let username of task.userNames\\\" class=\\\"list-group-item\\\"> {{username}}</li>\\r\\n  <li class=\\\"list-group-item\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">{{ task.taskDtos.length <= 0 ? 'No tasks' : 'Assigned Tasks:' }}</li>\\r\\n  <li class=\\\"list-group-item\\\" *ngFor=\\\"let taskDto of task.taskDtos\\\">\\r\\n    <app-user-task [task]=\\\"taskDto\\\"></app-user-task>\\r\\n  </li>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"task && editTaskMode\\\">\\r\\n  <form [formGroup]=\\\"editedTaskForm\\\" #f>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"text-info\\\">Name:</label>\\r\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"name\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"text-info\\\">Description:</label>\\r\\n      <textarea rows=\\\"20\\\" class=\\\"form-control\\\"  formControlName=\\\"description\\\"></textarea>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label class=\\\"text-info\\\">Status:</label>\\r\\n      <select class=\\\"form-control\\\"  formControlName=\\\"status\\\">\\r\\n        <option [selected]=\\\"task.status == status.UNASSIGNED\\\" value=\\\"{{ status.UNASSIGNED }}\\\"> {{ status.UNASSIGNED }} </option>\\r\\n        <option [selected]=\\\"task.status == status.ASSIGNED\\\" value=\\\"{{ status.ASSIGNED }}\\\"> {{ status.ASSIGNED }} </option>\\r\\n        <option [selected]=\\\"task.status == status.IN_PROGRESS\\\" value=\\\"{{ status.IN_PROGRESS }}\\\"> {{ status.IN_PROGRESS }} </option>\\r\\n        <option [selected]=\\\"task.status == status.DONE\\\" value=\\\"{{ status.DONE }}\\\"> {{ status.DONE }} </option>\\r\\n      </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onSaveEditedTask(f)\\\">\\r\\n        Submit\\r\\n      </button>\\r\\n      <button class=\\\"btn btn-outline-secondary\\\" (click)=\\\"onEditTaskMode(false)\\\">Abort</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Status, TaskModel} from '../../shared/table.model';\r\nimport {FormControl, FormGroup} from '@angular/forms';\r\nimport {DataStorageService} from '../../shared/data-storage.service';\r\nimport {Store} from \"@ngrx/store\";\r\nimport * as fromAppReducers from \"../../shared/store/app.reducers\";\r\nimport * as UsersActions from \"../../shared/store/user/users.actions\";\r\n\r\n@Component({\r\n  selector: 'app-user-task',\r\n  templateUrl: './user-task.component.html',\r\n  styleUrls: ['./user-task.component.css']\r\n})\r\nexport class UserTaskComponent implements OnInit {\r\n  @Input() task: TaskModel;\r\n  editedTaskForm: FormGroup;\r\n  editTaskMode = false;\r\n  status = Status;\r\n\r\n  constructor(private dss: DataStorageService,\r\n              private store: Store<fromAppReducers.AppState>) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onEditTaskMode(mode: boolean) {\r\n    this.editTaskMode = mode;\r\n    if (this.task) {\r\n      this.editedTaskForm = new FormGroup({\r\n        name: new FormControl(this.task.name),\r\n        description: new FormControl(this.task.description),\r\n        status: new FormControl(this.task.status),\r\n      });\r\n    }\r\n  }\r\n\r\n  onSaveEditedTask() { //(payload: { name: string, description: string, status: Status }) {\r\n    const task: TaskModel = {\r\n      id: this.task.id,\r\n      tableId: this.task.tableId,\r\n      name: this.editedTaskForm.value.name,\r\n      description: this.editedTaskForm.value.description,\r\n      status: this.editedTaskForm.value.status,\r\n      userNames: this.task.userNames,\r\n      taskDtos: this.task.taskDtos\r\n    };\r\n\r\n    this.dss.updateTask(task);\r\n  }\r\n\r\n\r\n  onCloseTaskMode() {\r\n    this.store.dispatch(new UsersActions.SetUserDisplayedTask(null));\r\n  }\r\n}\r\n","module.exports = \"li {\\r\\n  border: 1px solid #32383e;\\r\\n  background-color: rgba(200, 200, 200, 0.05);\\r\\n  color: gray !important;\\r\\n}\\r\\n\\r\\nli:hover {\\r\\n  background-color: rgba(200, 200, 200, 0.2);\\r\\n}\\r\\n\\r\\n.bg-light {\\r\\n  background-color: rgba(200, 200, 200, 0.2) !important;\\r\\n}\\r\\n\\r\\n.jumbotron {\\r\\n  background: none;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n  <div class=\\\"row\\\" style=\\\"padding: 30px\\\">\\r\\n    <div class=\\\"col-4 align-self-start\\\">\\r\\n      <ul class=\\\"list-group\\\">\\r\\n        <li class=\\\"list-group-item border-dark\\\" style=\\\"background-color: rgba(0,0,0,0.05);\\\">Users:</li>\\r\\n        <li class=\\\"list-group-item list-group-item-action d-flex justify-content-end\\\"\\r\\n            *ngFor=\\\"let user of (users | async)\\\" (click)=\\\"onSelectUser(user)\\\"\\r\\n            [ngClass]=\\\"(selectedUser | async)?.username == user.username ? 'bg-light' : ''\\\">\\r\\n          <td class=\\\"mr-auto p-2\\\">{{ user.username }}</td>\\r\\n        </li>\\r\\n        <button class=\\\"btn text-white\\\" style=\\\"background-color: rgba(0,0,0,0.05) !important;\\\" (click)=\\\"onNewUser()\\\">New user</button>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-8 align-self-center\\\">\\r\\n      <app-user-details></app-user-details>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {UserModel} from './user.model';\r\nimport {Store} from '@ngrx/store';\r\nimport {DataStorageService} from '../shared/data-storage.service';\r\nimport * as fromAppReducers from '../shared/store/app.reducers';\r\nimport * as UsersActions from '../shared/store/user/users.actions';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n  users: Observable<UserModel[]>;\r\n  selectedUser: Observable<UserModel>;\r\n\r\n  constructor(private contentStore: Store<fromAppReducers.AppState>,\r\n              private dss: DataStorageService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.users = this.contentStore.select('users', 'users');\r\n    this.contentStore.select('users', 'selectedUser');\r\n    this.dss.getUsers();\r\n  }\r\n\r\n  onSelectUser(user: UserModel) {\r\n    this.contentStore.dispatch(new UsersActions.SetSelectedUser(user));\r\n    this.contentStore.dispatch(new UsersActions.SetUserDisplayedTask(null));\r\n  }\r\n\r\n  onNewUser() {\r\n    this.contentStore.dispatch(new UsersActions.SetNewUserModeAction(true));\r\n    this.contentStore.dispatch(new UsersActions.SetUserDisplayedTask(null));\r\n  }\r\n  // // onNewRole() {\r\n  // //   this.roleStore.dispatch(new TablesActions.SetNewRoleModeAction(true));\r\n  // // }\r\n  //\r\n  // onRemoveRole(name: string) {\r\n  //   this.dss.deleteRole(name);\r\n  //   this.roleStore.dispatch(new TablesActions.SetNewRoleModeAction(false))\r\n  //   this.selectedRole = null;\r\n  // }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}